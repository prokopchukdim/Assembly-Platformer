#####################################################################
#
# CSCB58 Winter 2023 Assembly Final Project
# University of Toronto, Scarborough
#
# Student: Dmitriy Prokopchuk, 1007650622, prokopc5, dmitriy.prokopchuk@mail.utoronto.ca
#
# Bitmap Display Configuration:
# - Unit width in pixels: 2 (update this as needed)
# - Unit height in pixels: 2 (update this as needed)
# - Display width in pixels: 128 (update this as needed)
# - Display height in pixels: 256 (update this as needed)
# - Base Address for Display: 0x10008000 ($gp)
#
# Which milestones have been reached in this submission?
# (See the assignment handout for descriptions of the milestones)
# - Milestone 1
# - Milestone 2
# - Milestone 3
#
# Which approved features have been implemented for milestone 3?
# (See the assignment handout for the list of additional features)
# 1. A: Score
# 2. B: Fail Condition
# 3. C: Win Condition
# 4. E: Moving Platforms
# 5. K: Double Jump
# 6. L: Animated Sprites
# 7. M: Start Menu
# 8. D: Moving objects (With player velocity)
#
# Link to video demonstration for final submission:
# - (insert YouTube / MyMedia / other URL here). Make sure we can view it!
# https://www.youtube.com/watch?v=rSV_AaGB5oU
#
# Are you OK with us sharing the video with people outside course staff?
# - yes 
# and please share this project github link as well!
# 
#
# Any additional information that the TA needs to know:
# - In the start menu, press w and s to cycle buttons, and e to select
# - In you won and you lost screens, press p to restart (as in other parts of the game), or e to exit (terminates game)
# - Game is won on collecting 30 treats. Lost on falling out of the level.
# - Picking up a chocolate launches you up far into the air (due to poodle allergies).
#####################################################################

# Bitmap display starter code
#
# Bitmap Display Configuration:
# - Unit width in pixels: 2
# - Unit height in pixels: 2
# - Display width in pixels: 128
# - Display height in pixels: 256
# - Base Address for Display: 0x10008000 ($gp)
#

##########  TODO ############
# LOW PRIORITY:
# fix framerate (sleep based on time delta between frames)

# DONE MILESTONE 3:
# lose condition +1 (+ lose screen)
# win condition +1 (+ win screen)
# score +2
# double jump +1
# Menu screen +1
# moving platforms +2
# Animations +2

.data
spacer: .space 33000
data_checker: .word 0xd503ff #adding space so that screen doesnt run into vars
temp: .word 1, 2, 3
#top left corner of player
PLAYERX: .word 22
PLAYERY: .word 108
VERTVELOCITY: .word 0
#Sprite array: X, Y, COLOR, .... repeated
PLAYER_SPRITE: .word 0, 3, 0x78461a, 0, 4, 0x78461a, 1, 2, 0x000000, 1, 3, 0x78461a, 1, 4, 0x78461a, 2, 2, 0x78461a, 2, 3, 0x78461a,2, 4, 0x78461a,2, 5, 0x78461a,2, 6, 0x78461a,2, 7, 0x78461a,2, 8, 0x78461a,2, 9, 0x78461a, 3, 0, 0x78461a, 3, 1, 0x78461a, 3, 2, 0x78461a, 3, 3, 0x78461a, 3, 4, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 3, 7, 0x78461a, 3, 8, 0x78461a, 3, 9, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 5, 7, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 6, 9, 0x78461a, 7, 3, 0x78461a, 7, 4, 0x78461a, 7, 5, 0x78461a, 7, 6, 0x78461a, 7, 7, 0x78461a, 7, 8, 0x78461a, 7, 9, 0x78461a, 8, 3, 0x78461a, 8, 4, 0x78461a, 8, 5, 0x78461a
PLAYER_SPRITE_LEN: .word 138
PLAYER_SPRITE_YELLOW: .word 0, 3, 0xfff7a1, 0, 4, 0xfff7a1, 1, 2, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 2, 2, 0xfff7a1, 2, 3, 0xfff7a1,2, 4, 0xfff7a1,2, 5, 0xfff7a1,2, 6, 0xfff7a1,2, 7, 0xfff7a1,2, 8, 0xfff7a1,2, 9, 0xfff7a1, 3, 0, 0xfff7a1, 3, 1, 0xfff7a1, 3, 2, 0xfff7a1, 3, 3, 0xfff7a1, 3, 4, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 3, 8, 0xfff7a1, 3, 9, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 7, 5, 0xfff7a1, 7, 6, 0xfff7a1, 7, 7, 0xfff7a1, 7, 8, 0xfff7a1, 7, 9, 0xfff7a1, 8, 3, 0xfff7a1, 8, 4, 0xfff7a1, 8, 5, 0xfff7a1

PLAYER_R: .word 0, 3, 0x78461a, 0, 4, 0x78461a, 0, 5, 0x78461a, 1, 3, 0x78461a, 1, 4, 0x78461a, 1, 5, 0x78461a, 1, 6, 0x78461a, 1, 7, 0x78461a, 1, 8, 0x78461a, 1, 9, 0x78461a, 2, 5, 0x78461a, 2, 6, 0x78461a, 2, 7, 0x78461a, 2, 8, 0x78461a, 2, 9, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 3, 7, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 5, 0, 0x78461a, 5, 1, 0x78461a, 5, 2, 0x78461a, 5, 3, 0x78461a, 5, 4, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 5, 7, 0x78461a, 5, 8, 0x78461a, 5, 9, 0x78461a, 6, 2, 0x78461a, 6, 3, 0x78461a, 6, 4, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 6, 9, 0x78461a, 7, 2, 0x000000, 7, 3, 0x78461a, 7, 4, 0x78461a, 8, 3, 0x78461a, 8, 4, 0x78461a
PLAYER_R_LEN: .word 138
PLAYER_R_YELLOW: .word 0, 3, 0xfff7a1, 0, 4, 0xfff7a1, 0, 5, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 1, 5, 0xfff7a1, 1, 6, 0xfff7a1, 1, 7, 0xfff7a1, 1, 8, 0xfff7a1, 1, 9, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 2, 7, 0xfff7a1, 2, 8, 0xfff7a1, 2, 9, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 5, 0, 0xfff7a1, 5, 1, 0xfff7a1, 5, 2, 0xfff7a1, 5, 3, 0xfff7a1, 5, 4, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 5, 8, 0xfff7a1, 5, 9, 0xfff7a1, 6, 2, 0xfff7a1, 6, 3, 0xfff7a1, 6, 4, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 2, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 8, 3, 0xfff7a1, 8, 4, 0xfff7a1

PLAYER_L_1: .word 0, 3, 0x78461a, 0, 4, 0x78461a, 1, 2, 0x000000, 1, 3, 0x78461a, 1, 4, 0x78461a, 2, 2, 0x78461a, 2, 3, 0x78461a, 2, 4, 0x78461a, 2, 5, 0x78461a, 2, 6, 0x78461a, 2, 7, 0x78461a, 2, 8, 0x78461a, 2, 9, 0x78461a, 3, 0, 0x78461a, 3, 1, 0x78461a, 3, 2, 0x78461a, 3, 3, 0x78461a, 3, 4, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 3, 7, 0x78461a, 3, 8, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 4, 8, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 5, 7, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 6, 9, 0x78461a, 7, 3, 0x78461a, 7, 4, 0x78461a, 7, 5, 0x78461a, 7, 6, 0x78461a, 7, 7, 0x78461a, 7, 8, 0x78461a, 8, 3, 0x78461a, 8, 4, 0x78461a, 8, 5, 0x78461a, 8, 8, 0x78461a
PLAYER_L_1_LEN: .word 138
PLAYER_L_1_YELLOW: .word 0, 3, 0xfff7a1, 0, 4, 0xfff7a1, 1, 2, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 2, 2, 0xfff7a1, 2, 3, 0xfff7a1, 2, 4, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 2, 7, 0xfff7a1, 2, 8, 0xfff7a1, 2, 9, 0xfff7a1, 3, 0, 0xfff7a1, 3, 1, 0xfff7a1, 3, 2, 0xfff7a1, 3, 3, 0xfff7a1, 3, 4, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 3, 8, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 4, 8, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 7, 5, 0xfff7a1, 7, 6, 0xfff7a1, 7, 7, 0xfff7a1, 7, 8, 0xfff7a1, 8, 3, 0xfff7a1, 8, 4, 0xfff7a1, 8, 5, 0xfff7a1, 8, 8, 0xfff7a1

PLAYER_R_1: .word 0, 3, 0x78461a, 0, 4, 0x78461a, 0, 5, 0x78461a, 0, 8, 0x78461a, 1, 3, 0x78461a, 1, 4, 0x78461a, 1, 5, 0x78461a, 1, 6, 0x78461a, 1, 7, 0x78461a, 1, 8, 0x78461a, 2, 5, 0x78461a, 2, 6, 0x78461a, 2, 7, 0x78461a, 2, 8, 0x78461a, 2, 9, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 3, 7, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 4, 8, 0x78461a, 5, 0, 0x78461a, 5, 1, 0x78461a, 5, 2, 0x78461a, 5, 3, 0x78461a, 5, 4, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 5, 7, 0x78461a, 5, 8, 0x78461a, 6, 2, 0x78461a, 6, 3, 0x78461a, 6, 4, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 6, 9, 0x78461a, 7, 2, 0x000000, 7, 3, 0x78461a, 7, 4, 0x78461a, 8, 3, 0x78461a, 8, 4, 0x78461a
PLAYER_R_1_LEN: .word 138
PLAYER_R_1_YELLOW: .word 0, 3, 0xfff7a1, 0, 4, 0xfff7a1, 0, 5, 0xfff7a1, 0, 8, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 1, 5, 0xfff7a1, 1, 6, 0xfff7a1, 1, 7, 0xfff7a1, 1, 8, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 2, 7, 0xfff7a1, 2, 8, 0xfff7a1, 2, 9, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 4, 8, 0xfff7a1, 5, 0, 0xfff7a1, 5, 1, 0xfff7a1, 5, 2, 0xfff7a1, 5, 3, 0xfff7a1, 5, 4, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 5, 8, 0xfff7a1, 6, 2, 0xfff7a1, 6, 3, 0xfff7a1, 6, 4, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 2, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 8, 3, 0xfff7a1, 8, 4, 0xfff7a1

PLAYER_UP_R: .word 0, 4, 0x78461a, 0, 5, 0x78461a, 0, 6, 0x79461a, 1, 4, 0x78461a, 1, 5, 0x78461a, 1, 6, 0x78461a, 2, 5, 0x78461a, 2, 6, 0x78461a, 2, 7, 0x78461a, 2, 8, 0x78461a, 2, 9, 0x78461a, 3, 0, 0x77461a, 3, 1, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 3, 7, 0x78461a, 3, 8, 0x78461a, 3, 9, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 2, 0x78461a, 4, 4, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 5, 1, 0x78461a, 5, 2, 0x78461a, 5, 3, 0x78461a, 5, 4, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 6, 1, 0x000000, 6, 2, 0x78461a, 6, 3, 0x78461a, 6, 4, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 7, 2, 0x78461a, 7, 3, 0x78461a, 7, 4, 0x78461a, 7, 6, 0x78461a, 7, 7, 0x78461a, 7, 8, 0x78461a, 8, 2, 0x78461a, 8, 3, 0x78461a
PLAYER_UP_R_LEN: .word 141
PLAYER_UP_R_YELLOW: .word 0, 4, 0xfff7a1, 0, 5, 0xfff7a1, 0, 6, 0xfff7a1, 1, 4, 0xfff7a1, 1, 5, 0xfff7a1, 1, 6, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 2, 7, 0xfff7a1, 2, 8, 0xfff7a1, 2, 9, 0xfff7a1, 3, 0, 0xfff7a1, 3, 1, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 3, 8, 0xfff7a1, 3, 9, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 2, 0xfff7a1, 4, 4, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 5, 1, 0xfff7a1, 5, 2, 0xfff7a1, 5, 3, 0xfff7a1, 5, 4, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 6, 1, 0xfff7a1, 6, 2, 0xfff7a1, 6, 3, 0xfff7a1, 6, 4, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 7, 2, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 7, 6, 0xfff7a1, 7, 7, 0xfff7a1, 7, 8, 0xfff7a1, 8, 2, 0xfff7a1, 8, 3, 0xfff7a1

PLAYER_UP_L: .word 0, 2, 0x78461a, 0, 3, 0x78461a, 1, 2, 0x78461a, 1, 3, 0x78461a, 1, 4, 0x78461a, 1, 6, 0x78461a, 1, 7, 0x78461a, 1, 8, 0x78461a, 2, 1, 0x000000, 2, 2, 0x78461a, 2, 3, 0x78461a, 2, 4, 0x78461a, 2, 5, 0x78461a, 2, 6, 0x78461a, 2, 7, 0x78461a, 2, 8, 0x78461a, 3, 1, 0x78461a, 3, 2, 0x78461a, 3, 3, 0x78461a, 3, 4, 0x78461a, 3, 5, 0x78461a, 3, 6, 0x78461a, 4, 0, 0x78461a, 4, 1, 0x78461a, 4, 2, 0x78461a, 4, 4, 0x78461a, 4, 5, 0x78461a, 4, 6, 0x78461a, 4, 7, 0x78461a, 5, 0, 0x77461a, 5, 1, 0x78461a, 5, 5, 0x78461a, 5, 6, 0x78461a, 5, 7, 0x78461a, 5, 8, 0x78461a, 5, 9, 0x78461a, 6, 5, 0x78461a, 6, 6, 0x78461a, 6, 7, 0x78461a, 6, 8, 0x78461a, 6, 9, 0x78461a, 7, 4, 0x78461a, 7, 5, 0x78461a, 7, 6, 0x78461a, 8, 4, 0x78461a, 8, 5, 0x78461a, 8, 6, 0x79461a
PLAYER_UP_L_LEN: .word 141
PLAYER_UP_L_YELLOW: .word 0, 2, 0xfff7a1, 0, 3, 0xfff7a1, 1, 2, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 1, 6, 0xfff7a1, 1, 7, 0xfff7a1, 1, 8, 0xfff7a1, 2, 1, 0xfff7a1, 2, 2, 0xfff7a1, 2, 3, 0xfff7a1, 2, 4, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 2, 7, 0xfff7a1, 2, 8, 0xfff7a1, 3, 1, 0xfff7a1, 3, 2, 0xfff7a1, 3, 3, 0xfff7a1, 3, 4, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 2, 0xfff7a1, 4, 4, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 5, 0, 0xfff7a1, 5, 1, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 5, 8, 0xfff7a1, 5, 9, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 4, 0xfff7a1, 7, 5, 0xfff7a1, 7, 6, 0xfff7a1, 8, 4, 0xfff7a1, 8, 5, 0xfff7a1, 8, 6, 0xfff7a1

# -1 = Left, 1 = Right
PLAYER_FACING: .word -1
# Animation state: 0, 1 =Left. 2, 3 = Right. 4 = Up. 5 = Down. 
PLAYER_STATE: .word 0
PLAYER_UP_DIR: .word -1
PLAYER_UP_CTR: .word 0

PLATFORM_D: .word 0 #platform detected
PLATFORM_S: .word 0 #platform standing
PLATFORM_M: .word 0 #platform standing moving
GLOBAL_Y: .word 0 #Global camera Y
#Platforms format: X, Y, ...
PLATFORM_ARR: .word 15, 118, 10, 98, 20, 50, 30, 20
#original values so that game can be reloaded
PLATFORM_ARR_ORIGINAL: .word 15, 118, 10, 98, 20, 50, 30, 20
PLATFORM_ARR_LEN: .word 8
PLATFORM_ARR_MOVING: .word 40, 75
PLATFORM_ARR_MOVING_ORIGINAL: .word 40, 75
PLATFORM_ARR_MOVING_LEN: .word 2
# 1 = right, -1 = left
PLATFORM_ARR_MOVING_DIR: .word 1

#Dog treats
TREAT_ARR: .word 10, 60, 50, 110
TREAT_ARR_ORIGINAL: .word 10, 60, 50, 110
TREAT_ARR_LEN: .word 4
SCORE: .word 0
JUMPS_REM: .word 2

#Chocolate
CHOCOLATE_ARR: .word 30, 40
CHOCOLATE_ARR_ORIGINAL: .word 30, 40
CHOCOLATE_ARR_LEN: .word 2

GAME_OVER_TEXT: .word 3, 18, 0x000000, 3, 19, 0x000000, 3, 20, 0x000000, 3, 21, 0x000000, 3, 22, 0x000000, 4, 17, 0x000000, 4, 23, 0x000000, 5, 17, 0x000000, 5, 20, 0x000000, 5, 23, 0x000000, 6, 17, 0x000000, 6, 20, 0x000000, 6, 23, 0x000000, 6, 64, 0x000000, 6, 65, 0x000000, 6, 66, 0x000000, 6, 67, 0x000000, 6, 68, 0x000000, 6, 69, 0x000000, 6, 70, 0x000000, 6, 71, 0x000000, 6, 72, 0x000000, 7, 20, 0x000000, 7, 21, 0x000000, 7, 22, 0x000000, 7, 64, 0x000000, 7, 65, 0x000000, 7, 66, 0x000000, 7, 67, 0x000000, 7, 68, 0x000000, 7, 69, 0x000000, 7, 70, 0x000000, 7, 71, 0x000000, 7, 72, 0x000000, 8, 64, 0x000000, 8, 65, 0x000000, 8, 68, 0x000000, 9, 64, 0x000000, 9, 65, 0x000000, 9, 68, 0x000000, 10, 18, 0x000000, 10, 19, 0x000000, 10, 20, 0x000000, 10, 21, 0x000000, 10, 22, 0x000000, 10, 23, 0x000000, 10, 64, 0x000000, 10, 65, 0x000000, 10, 68, 0x000000, 11, 17, 0x000000, 11, 20, 0x000000, 11, 64, 0x000000, 11, 65, 0x000000, 11, 68, 0x000000, 12, 17, 0x000000, 12, 20, 0x000000, 12, 66, 0x000000, 12, 67, 0x000000, 13, 17, 0x000000, 13, 20, 0x000000, 14, 18, 0x000000, 14, 19, 0x000000, 14, 20, 0x000000, 14, 21, 0x000000, 14, 22, 0x000000, 14, 23, 0x000000, 15, 71, 0x000000, 15, 72, 0x000000, 16, 64, 0x000000, 16, 69, 0x000000, 16, 70, 0x000000, 16, 71, 0x000000, 16, 72, 0x000000, 16, 79, 0x000000, 16, 80, 0x000000, 16, 81, 0x000000, 16, 82, 0x000000, 16, 83, 0x000000, 16, 84, 0x000000, 16, 85, 0x000000, 16, 86, 0x000000, 16, 87, 0x000000, 16, 88, 0x000000, 17, 17, 0x000000, 17, 18, 0x000000, 17, 19, 0x000000, 17, 20, 0x000000, 17, 21, 0x000000, 17, 22, 0x000000, 17, 23, 0x000000, 17, 63, 0x000000, 17, 65, 0x000000, 17, 68, 0x000000, 17, 69, 0x000000, 17, 70, 0x000000, 17, 71, 0x000000, 17, 72, 0x000000, 17, 79, 0x000000, 17, 80, 0x000000, 17, 81, 0x000000, 17, 82, 0x000000, 17, 83, 0x000000, 17, 84, 0x000000, 17, 85, 0x000000, 17, 86, 0x000000, 17, 87, 0x000000, 17, 88, 0x000000, 18, 18, 0x000000, 18, 19, 0x000000, 18, 67, 0x000000, 18, 68, 0x000000, 18, 69, 0x000000, 18, 70, 0x000000, 18, 71, 0x000000, 18, 72, 0x000000, 18, 79, 0x000000, 18, 80, 0x000000, 18, 87, 0x000000, 18, 88, 0x000000, 19, 20, 0x000000, 19, 64, 0x000000, 19, 68, 0x000000, 19, 69, 0x000000, 19, 70, 0x000000, 19, 71, 0x000000, 19, 72, 0x000000, 19, 79, 0x000000, 19, 80, 0x000000, 19, 87, 0x000000, 19, 88, 0x000000, 20, 20, 0x000000, 20, 63, 0x000000, 20, 65, 0x000000, 20, 69, 0x000000, 20, 70, 0x000000, 20, 71, 0x000000, 20, 72, 0x000000, 20, 79, 0x000000, 20, 80, 0x000000, 20, 87, 0x000000, 20, 88, 0x000000, 21, 18, 0x000000, 21, 19, 0x000000, 21, 71, 0x000000, 21, 72, 0x000000, 21, 81, 0x000000, 21, 82, 0x000000, 21, 83, 0x000000, 21, 84, 0x000000, 21, 85, 0x000000, 21, 86, 0x000000, 22, 17, 0x000000, 22, 18, 0x000000, 22, 19, 0x000000, 22, 20, 0x000000, 22, 21, 0x000000, 22, 22, 0x000000, 22, 23, 0x000000, 22, 81, 0x000000, 22, 82, 0x000000, 22, 83, 0x000000, 22, 84, 0x000000, 22, 85, 0x000000, 22, 86, 0x000000, 24, 71, 0x000000, 24, 72, 0x000000, 25, 17, 0x000000, 25, 18, 0x000000, 25, 19, 0x000000, 25, 20, 0x000000, 25, 21, 0x000000, 25, 22, 0x000000, 25, 23, 0x000000, 25, 64, 0x000000, 25, 69, 0x000000, 25, 70, 0x000000, 25, 71, 0x000000, 25, 72, 0x000000, 25, 79, 0x000000, 25, 80, 0x000000, 25, 87, 0x000000, 25, 88, 0x000000, 26, 17, 0x000000, 26, 20, 0x000000, 26, 23, 0x000000, 26, 63, 0x000000, 26, 65, 0x000000, 26, 68, 0x000000, 26, 69, 0x000000, 26, 70, 0x000000, 26, 71, 0x000000, 26, 72, 0x000000, 26, 79, 0x000000, 26, 80, 0x000000, 26, 87, 0x000000, 26, 88, 0x000000, 27, 17, 0x000000, 27, 20, 0x000000, 27, 23, 0x000000, 27, 67, 0x000000, 27, 68, 0x000000, 27, 69, 0x000000, 27, 70, 0x000000, 27, 71, 0x000000, 27, 72, 0x000000, 27, 79, 0x000000, 27, 80, 0x000000, 27, 81, 0x000000, 27, 82, 0x000000, 27, 83, 0x000000, 27, 84, 0x000000, 27, 85, 0x000000, 27, 86, 0x000000, 27, 87, 0x000000, 27, 88, 0x000000, 28, 17, 0x000000, 28, 20, 0x000000, 28, 23, 0x000000, 28, 64, 0x000000, 28, 68, 0x000000, 28, 69, 0x000000, 28, 70, 0x000000, 28, 71, 0x000000, 28, 72, 0x000000, 28, 79, 0x000000, 28, 80, 0x000000, 28, 81, 0x000000, 28, 82, 0x000000, 28, 83, 0x000000, 28, 84, 0x000000, 28, 85, 0x000000, 28, 86, 0x000000, 28, 87, 0x000000, 28, 88, 0x000000, 29, 17, 0x000000, 29, 23, 0x000000, 29, 63, 0x000000, 29, 65, 0x000000, 29, 69, 0x000000, 29, 70, 0x000000, 29, 71, 0x000000, 29, 72, 0x000000, 29, 79, 0x000000, 29, 80, 0x000000, 29, 87, 0x000000, 29, 88, 0x000000, 30, 71, 0x000000, 30, 72, 0x000000, 30, 79, 0x000000, 30, 80, 0x000000, 30, 87, 0x000000, 30, 88, 0x000000, 32, 79, 0x000000, 32, 80, 0x000000, 32, 81, 0x000000, 32, 82, 0x000000, 32, 83, 0x000000, 32, 84, 0x000000, 32, 85, 0x000000, 32, 86, 0x000000, 32, 87, 0x000000, 32, 88, 0x000000, 33, 64, 0x000000, 33, 65, 0x000000, 33, 66, 0x000000, 33, 67, 0x000000, 33, 68, 0x000000, 33, 69, 0x000000, 33, 70, 0x000000, 33, 71, 0x000000, 33, 72, 0x000000, 33, 79, 0x000000, 33, 80, 0x000000, 33, 81, 0x000000, 33, 82, 0x000000, 33, 83, 0x000000, 33, 84, 0x000000, 33, 85, 0x000000, 33, 86, 0x000000, 33, 87, 0x000000, 33, 88, 0x000000, 34, 18, 0x000000, 34, 19, 0x000000, 34, 20, 0x000000, 34, 21, 0x000000, 34, 22, 0x000000, 34, 64, 0x000000, 34, 65, 0x000000, 34, 66, 0x000000, 34, 67, 0x000000, 34, 68, 0x000000, 34, 69, 0x000000, 34, 70, 0x000000, 34, 71, 0x000000, 34, 72, 0x000000, 34, 79, 0x000000, 34, 80, 0x000000, 34, 83, 0x000000, 34, 84, 0x000000, 34, 87, 0x000000, 34, 88, 0x000000, 35, 17, 0x000000, 35, 23, 0x000000, 35, 64, 0x000000, 35, 65, 0x000000, 35, 71, 0x000000, 35, 72, 0x000000, 35, 79, 0x000000, 35, 80, 0x000000, 35, 83, 0x000000, 35, 84, 0x000000, 35, 87, 0x000000, 35, 88, 0x000000, 36, 17, 0x000000, 36, 23, 0x000000, 36, 64, 0x000000, 36, 65, 0x000000, 36, 71, 0x000000, 36, 72, 0x000000, 36, 79, 0x000000, 36, 80, 0x000000, 36, 83, 0x000000, 36, 84, 0x000000, 36, 87, 0x000000, 36, 88, 0x000000, 37, 17, 0x000000, 37, 23, 0x000000, 37, 64, 0x000000, 37, 65, 0x000000, 37, 71, 0x000000, 37, 72, 0x000000, 37, 79, 0x000000, 37, 80, 0x000000, 37, 83, 0x000000, 37, 84, 0x000000, 37, 87, 0x000000, 37, 88, 0x000000, 38, 18, 0x000000, 38, 19, 0x000000, 38, 20, 0x000000, 38, 21, 0x000000, 38, 22, 0x000000, 38, 66, 0x000000, 38, 67, 0x000000, 38, 68, 0x000000, 38, 69, 0x000000, 38, 70, 0x000000, 38, 79, 0x000000, 38, 80, 0x000000, 38, 87, 0x000000, 38, 88, 0x000000, 39, 66, 0x000000, 39, 67, 0x000000, 39, 68, 0x000000, 39, 69, 0x000000, 39, 70, 0x000000, 39, 79, 0x000000, 39, 80, 0x000000, 39, 87, 0x000000, 39, 88, 0x000000, 41, 17, 0x000000, 41, 18, 0x000000, 41, 19, 0x000000, 42, 20, 0x000000, 42, 21, 0x000000, 42, 22, 0x000000, 42, 64, 0x000000, 42, 65, 0x000000, 42, 66, 0x000000, 42, 67, 0x000000, 42, 68, 0x000000, 42, 69, 0x000000, 42, 70, 0x000000, 42, 71, 0x000000, 42, 72, 0x000000, 42, 79, 0x000000, 42, 80, 0x000000, 42, 81, 0x000000, 42, 82, 0x000000, 42, 83, 0x000000, 42, 84, 0x000000, 42, 85, 0x000000, 42, 86, 0x000000, 42, 87, 0x000000, 42, 88, 0x000000, 43, 23, 0x000000, 43, 64, 0x000000, 43, 65, 0x000000, 43, 66, 0x000000, 43, 67, 0x000000, 43, 68, 0x000000, 43, 69, 0x000000, 43, 70, 0x000000, 43, 71, 0x000000, 43, 72, 0x000000, 43, 79, 0x000000, 43, 80, 0x000000, 43, 81, 0x000000, 43, 82, 0x000000, 43, 83, 0x000000, 43, 84, 0x000000, 43, 85, 0x000000, 43, 86, 0x000000, 43, 87, 0x000000, 43, 88, 0x000000, 44, 23, 0x000000, 44, 71, 0x000000, 44, 72, 0x000000, 44, 79, 0x000000, 44, 80, 0x000000, 44, 87, 0x000000, 44, 88, 0x000000, 45, 20, 0x000000, 45, 21, 0x000000, 45, 22, 0x000000, 45, 71, 0x000000, 45, 72, 0x000000, 45, 79, 0x000000, 45, 80, 0x000000, 45, 87, 0x000000, 45, 88, 0x000000, 46, 17, 0x000000, 46, 18, 0x000000, 46, 19, 0x000000, 46, 71, 0x000000, 46, 72, 0x000000, 46, 79, 0x000000, 46, 80, 0x000000, 46, 87, 0x000000, 46, 88, 0x000000, 47, 71, 0x000000, 47, 72, 0x000000, 47, 81, 0x000000, 47, 82, 0x000000, 47, 83, 0x000000, 47, 84, 0x000000, 47, 85, 0x000000, 47, 86, 0x000000, 48, 71, 0x000000, 48, 72, 0x000000, 48, 81, 0x000000, 48, 82, 0x000000, 48, 83, 0x000000, 48, 84, 0x000000, 48, 85, 0x000000, 48, 86, 0x000000, 49, 17, 0x000000, 49, 18, 0x000000, 49, 19, 0x000000, 49, 20, 0x000000, 49, 21, 0x000000, 49, 22, 0x000000, 49, 23, 0x000000, 50, 17, 0x000000, 50, 20, 0x000000, 50, 23, 0x000000, 51, 17, 0x000000, 51, 20, 0x000000, 51, 23, 0x000000, 51, 64, 0x000000, 51, 65, 0x000000, 51, 66, 0x000000, 51, 67, 0x000000, 51, 68, 0x000000, 51, 69, 0x000000, 51, 70, 0x000000, 51, 71, 0x000000, 51, 72, 0x000000, 52, 17, 0x000000, 52, 20, 0x000000, 52, 23, 0x000000, 52, 64, 0x000000, 52, 65, 0x000000, 52, 68, 0x000000, 52, 71, 0x000000, 52, 72, 0x000000, 53, 17, 0x000000, 53, 23, 0x000000, 53, 64, 0x000000, 53, 65, 0x000000, 53, 68, 0x000000, 53, 71, 0x000000, 53, 72, 0x000000, 54, 64, 0x000000, 54, 65, 0x000000, 54, 68, 0x000000, 54, 71, 0x000000, 54, 72, 0x000000, 55, 64, 0x000000, 55, 65, 0x000000, 55, 68, 0x000000, 55, 71, 0x000000, 55, 72, 0x000000, 56, 17, 0x000000, 56, 18, 0x000000, 56, 19, 0x000000, 56, 20, 0x000000, 56, 21, 0x000000, 56, 22, 0x000000, 56, 23, 0x000000, 56, 64, 0x000000, 56, 65, 0x000000, 56, 71, 0x000000, 56, 72, 0x000000, 57, 17, 0x000000, 57, 20, 0x000000, 57, 64, 0x000000, 57, 65, 0x000000, 57, 71, 0x000000, 57, 72, 0x000000, 58, 17, 0x000000, 58, 20, 0x000000, 59, 17, 0x000000, 59, 20, 0x000000, 59, 21, 0x000000, 59, 22, 0x000000, 60, 18, 0x000000, 60, 19, 0x000000, 60, 23, 0x000000
GAME_OVER_TEXT_LEN: .word 1557
GAME_WON_TEXT: .word 6, 33, 0x000000, 6, 34, 0x000000, 6, 35, 0x000000, 6, 36, 0x000000, 6, 37, 0x000000, 6, 64, 0x000000, 6, 65, 0x000000, 6, 66, 0x000000, 6, 67, 0x000000, 6, 68, 0x000000, 6, 69, 0x000000, 6, 70, 0x000000, 6, 71, 0x000000, 6, 72, 0x000000, 7, 32, 0x000000, 7, 38, 0x000000, 7, 39, 0x000000, 7, 64, 0x000000, 7, 65, 0x000000, 7, 66, 0x000000, 7, 67, 0x000000, 7, 68, 0x000000, 7, 69, 0x000000, 7, 70, 0x000000, 7, 71, 0x000000, 7, 72, 0x000000, 8, 32, 0x000000, 8, 35, 0x000000, 8, 38, 0x000000, 8, 39, 0x000000, 8, 64, 0x000000, 8, 65, 0x000000, 8, 68, 0x000000, 9, 32, 0x000000, 9, 35, 0x000000, 9, 38, 0x000000, 9, 39, 0x000000, 9, 64, 0x000000, 9, 65, 0x000000, 9, 68, 0x000000, 10, 35, 0x000000, 10, 36, 0x000000, 10, 37, 0x000000, 10, 64, 0x000000, 10, 65, 0x000000, 10, 68, 0x000000, 11, 64, 0x000000, 11, 65, 0x000000, 11, 68, 0x000000, 12, 33, 0x000000, 12, 34, 0x000000, 12, 35, 0x000000, 12, 36, 0x000000, 12, 37, 0x000000, 12, 38, 0x000000, 12, 39, 0x000000, 12, 66, 0x000000, 12, 67, 0x000000, 13, 32, 0x000000, 13, 35, 0x000000, 14, 32, 0x000000, 14, 35, 0x000000, 15, 32, 0x000000, 15, 35, 0x000000, 15, 71, 0x000000, 15, 72, 0x000000, 16, 33, 0x000000, 16, 34, 0x000000, 16, 35, 0x000000, 16, 36, 0x000000, 16, 37, 0x000000, 16, 38, 0x000000, 16, 39, 0x000000, 16, 64, 0x000000, 16, 69, 0x000000, 16, 70, 0x000000, 16, 71, 0x000000, 16, 72, 0x000000, 17, 63, 0x000000, 17, 65, 0x000000, 17, 68, 0x000000, 17, 69, 0x000000, 17, 70, 0x000000, 17, 71, 0x000000, 17, 72, 0x000000, 18, 67, 0x000000, 18, 68, 0x000000, 18, 69, 0x000000, 18, 70, 0x000000, 18, 71, 0x000000, 18, 72, 0x000000, 18, 77, 0x000000, 18, 78, 0x000000, 18, 79, 0x000000, 18, 80, 0x000000, 18, 81, 0x000000, 18, 82, 0x000000, 18, 83, 0x000000, 18, 84, 0x000000, 18, 85, 0x000000, 19, 32, 0x000000, 19, 33, 0x000000, 19, 34, 0x000000, 19, 35, 0x000000, 19, 36, 0x000000, 19, 37, 0x000000, 19, 38, 0x000000, 19, 39, 0x000000, 19, 64, 0x000000, 19, 68, 0x000000, 19, 69, 0x000000, 19, 70, 0x000000, 19, 71, 0x000000, 19, 72, 0x000000, 19, 77, 0x000000, 19, 78, 0x000000, 19, 79, 0x000000, 19, 80, 0x000000, 19, 81, 0x000000, 19, 82, 0x000000, 19, 83, 0x000000, 19, 84, 0x000000, 19, 85, 0x000000, 20, 33, 0x000000, 20, 34, 0x000000, 20, 63, 0x000000, 20, 65, 0x000000, 20, 69, 0x000000, 20, 70, 0x000000, 20, 71, 0x000000, 20, 72, 0x000000, 20, 77, 0x000000, 20, 78, 0x000000, 20, 81, 0x000000, 21, 35, 0x000000, 21, 71, 0x000000, 21, 72, 0x000000, 21, 77, 0x000000, 21, 78, 0x000000, 21, 81, 0x000000, 22, 35, 0x000000, 22, 77, 0x000000, 22, 78, 0x000000, 22, 81, 0x000000, 23, 33, 0x000000, 23, 34, 0x000000, 23, 77, 0x000000, 23, 78, 0x000000, 24, 32, 0x000000, 24, 33, 0x000000, 24, 34, 0x000000, 24, 35, 0x000000, 24, 36, 0x000000, 24, 37, 0x000000, 24, 38, 0x000000, 24, 39, 0x000000, 24, 71, 0x000000, 24, 72, 0x000000, 24, 77, 0x000000, 24, 78, 0x000000, 25, 64, 0x000000, 25, 69, 0x000000, 25, 70, 0x000000, 25, 71, 0x000000, 25, 72, 0x000000, 26, 63, 0x000000, 26, 65, 0x000000, 26, 68, 0x000000, 26, 69, 0x000000, 26, 70, 0x000000, 26, 71, 0x000000, 26, 72, 0x000000, 27, 32, 0x000000, 27, 33, 0x000000, 27, 34, 0x000000, 27, 35, 0x000000, 27, 36, 0x000000, 27, 37, 0x000000, 27, 38, 0x000000, 27, 39, 0x000000, 27, 67, 0x000000, 27, 68, 0x000000, 27, 69, 0x000000, 27, 70, 0x000000, 27, 71, 0x000000, 27, 72, 0x000000, 27, 77, 0x000000, 27, 78, 0x000000, 27, 79, 0x000000, 27, 80, 0x000000, 27, 81, 0x000000, 27, 82, 0x000000, 27, 83, 0x000000, 27, 84, 0x000000, 27, 85, 0x000000, 28, 32, 0x000000, 28, 35, 0x000000, 28, 38, 0x000000, 28, 39, 0x000000, 28, 64, 0x000000, 28, 68, 0x000000, 28, 69, 0x000000, 28, 70, 0x000000, 28, 71, 0x000000, 28, 72, 0x000000, 28, 77, 0x000000, 28, 78, 0x000000, 28, 79, 0x000000, 28, 80, 0x000000, 28, 81, 0x000000, 28, 82, 0x000000, 28, 83, 0x000000, 28, 84, 0x000000, 28, 85, 0x000000, 29, 32, 0x000000, 29, 35, 0x000000, 29, 38, 0x000000, 29, 39, 0x000000, 29, 63, 0x000000, 29, 65, 0x000000, 29, 69, 0x000000, 29, 70, 0x000000, 29, 71, 0x000000, 29, 72, 0x000000, 29, 77, 0x000000, 29, 78, 0x000000, 29, 81, 0x000000, 29, 84, 0x000000, 29, 85, 0x000000, 30, 32, 0x000000, 30, 35, 0x000000, 30, 38, 0x000000, 30, 39, 0x000000, 30, 71, 0x000000, 30, 72, 0x000000, 30, 77, 0x000000, 30, 78, 0x000000, 30, 81, 0x000000, 30, 84, 0x000000, 30, 85, 0x000000, 31, 32, 0x000000, 31, 38, 0x000000, 31, 39, 0x000000, 31, 77, 0x000000, 31, 78, 0x000000, 31, 81, 0x000000, 31, 84, 0x000000, 31, 85, 0x000000, 32, 77, 0x000000, 32, 78, 0x000000, 32, 81, 0x000000, 32, 84, 0x000000, 32, 85, 0x000000, 33, 64, 0x000000, 33, 65, 0x000000, 33, 66, 0x000000, 33, 67, 0x000000, 33, 68, 0x000000, 33, 69, 0x000000, 33, 70, 0x000000, 33, 71, 0x000000, 33, 72, 0x000000, 33, 77, 0x000000, 33, 78, 0x000000, 33, 84, 0x000000, 33, 85, 0x000000, 34, 64, 0x000000, 34, 65, 0x000000, 34, 66, 0x000000, 34, 67, 0x000000, 34, 68, 0x000000, 34, 69, 0x000000, 34, 70, 0x000000, 34, 71, 0x000000, 34, 72, 0x000000, 34, 77, 0x000000, 34, 78, 0x000000, 34, 84, 0x000000, 34, 85, 0x000000, 35, 64, 0x000000, 35, 65, 0x000000, 35, 71, 0x000000, 35, 72, 0x000000, 36, 32, 0x000000, 36, 33, 0x000000, 36, 34, 0x000000, 36, 35, 0x000000, 36, 36, 0x000000, 36, 37, 0x000000, 36, 38, 0x000000, 36, 39, 0x000000, 36, 64, 0x000000, 36, 65, 0x000000, 36, 71, 0x000000, 36, 72, 0x000000, 37, 36, 0x000000, 37, 37, 0x000000, 37, 64, 0x000000, 37, 65, 0x000000, 37, 71, 0x000000, 37, 72, 0x000000, 37, 77, 0x000000, 37, 78, 0x000000, 37, 79, 0x000000, 37, 80, 0x000000, 37, 81, 0x000000, 37, 82, 0x000000, 37, 83, 0x000000, 37, 84, 0x000000, 37, 85, 0x000000, 38, 35, 0x000000, 38, 66, 0x000000, 38, 67, 0x000000, 38, 68, 0x000000, 38, 69, 0x000000, 38, 70, 0x000000, 38, 77, 0x000000, 38, 78, 0x000000, 38, 84, 0x000000, 38, 85, 0x000000, 39, 35, 0x000000, 39, 66, 0x000000, 39, 67, 0x000000, 39, 68, 0x000000, 39, 69, 0x000000, 39, 70, 0x000000, 39, 77, 0x000000, 39, 78, 0x000000, 39, 84, 0x000000, 39, 85, 0x000000, 40, 36, 0x000000, 40, 37, 0x000000, 40, 77, 0x000000, 40, 78, 0x000000, 40, 84, 0x000000, 40, 85, 0x000000, 41, 32, 0x000000, 41, 33, 0x000000, 41, 34, 0x000000, 41, 35, 0x000000, 41, 36, 0x000000, 41, 37, 0x000000, 41, 38, 0x000000, 41, 39, 0x000000, 41, 77, 0x000000, 41, 78, 0x000000, 41, 84, 0x000000, 41, 85, 0x000000, 42, 64, 0x000000, 42, 65, 0x000000, 42, 66, 0x000000, 42, 67, 0x000000, 42, 68, 0x000000, 42, 69, 0x000000, 42, 70, 0x000000, 42, 71, 0x000000, 42, 72, 0x000000, 42, 79, 0x000000, 42, 80, 0x000000, 42, 81, 0x000000, 42, 82, 0x000000, 42, 83, 0x000000, 43, 64, 0x000000, 43, 65, 0x000000, 43, 66, 0x000000, 43, 67, 0x000000, 43, 68, 0x000000, 43, 69, 0x000000, 43, 70, 0x000000, 43, 71, 0x000000, 43, 72, 0x000000, 43, 79, 0x000000, 43, 80, 0x000000, 43, 81, 0x000000, 43, 82, 0x000000, 43, 83, 0x000000, 44, 33, 0x000000, 44, 34, 0x000000, 44, 35, 0x000000, 44, 36, 0x000000, 44, 37, 0x000000, 44, 71, 0x000000, 44, 72, 0x000000, 45, 32, 0x000000, 45, 38, 0x000000, 45, 39, 0x000000, 45, 71, 0x000000, 45, 72, 0x000000, 46, 32, 0x000000, 46, 38, 0x000000, 46, 39, 0x000000, 46, 71, 0x000000, 46, 72, 0x000000, 47, 32, 0x000000, 47, 38, 0x000000, 47, 39, 0x000000, 47, 71, 0x000000, 47, 72, 0x000000, 48, 33, 0x000000, 48, 34, 0x000000, 48, 35, 0x000000, 48, 36, 0x000000, 48, 37, 0x000000, 48, 71, 0x000000, 48, 72, 0x000000, 50, 32, 0x000000, 50, 33, 0x000000, 50, 34, 0x000000, 50, 35, 0x000000, 50, 36, 0x000000, 50, 37, 0x000000, 50, 38, 0x000000, 50, 39, 0x000000, 51, 32, 0x000000, 51, 33, 0x000000, 51, 64, 0x000000, 51, 65, 0x000000, 51, 66, 0x000000, 51, 67, 0x000000, 51, 68, 0x000000, 51, 69, 0x000000, 51, 70, 0x000000, 51, 71, 0x000000, 51, 72, 0x000000, 52, 33, 0x000000, 52, 34, 0x000000, 52, 64, 0x000000, 52, 65, 0x000000, 52, 68, 0x000000, 52, 71, 0x000000, 52, 72, 0x000000, 53, 35, 0x000000, 53, 64, 0x000000, 53, 65, 0x000000, 53, 68, 0x000000, 53, 71, 0x000000, 53, 72, 0x000000, 54, 32, 0x000000, 54, 33, 0x000000, 54, 34, 0x000000, 54, 35, 0x000000, 54, 36, 0x000000, 54, 37, 0x000000, 54, 38, 0x000000, 54, 39, 0x000000, 54, 64, 0x000000, 54, 65, 0x000000, 54, 68, 0x000000, 54, 71, 0x000000, 54, 72, 0x000000, 55, 64, 0x000000, 55, 65, 0x000000, 55, 68, 0x000000, 55, 71, 0x000000, 55, 72, 0x000000, 56, 64, 0x000000, 56, 65, 0x000000, 56, 71, 0x000000, 56, 72, 0x000000, 57, 64, 0x000000, 57, 65, 0x000000, 57, 71, 0x000000, 57, 72, 0x000000, 58, 32, 0x000000, 58, 33, 0x000000, 58, 34, 0x000000, 58, 35, 0x000000, 58, 38, 0x000000, 58, 39, 0x000000
GAME_WON_TEXT_LEN: .word 1407
TREAT: .word 0, 1, 0x000000, 0, 2, 0x000000, 0, 3, 0x000000, 1, 0, 0x000000, 1, 1, 0x000000, 1, 2, 0xededed, 1, 3, 0xededed, 1, 4, 0x000000, 2, 0, 0x000000, 2, 1, 0xededed, 2, 2, 0xededed, 2, 3, 0xededed, 2, 4, 0x000000, 3, 0, 0x000000, 3, 1, 0xededed, 3, 2, 0xededed, 3, 3, 0xededed, 3, 4, 0xededed, 3, 5, 0x000000, 3, 6, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000, 4, 3, 0xb8b8b8, 4, 4, 0xededed, 4, 5, 0xededed, 4, 6, 0x000000, 4, 7, 0x000000, 4, 8, 0x000000, 5, 3, 0x000000, 5, 4, 0x000000, 5, 5, 0xededed, 5, 6, 0xededed, 5, 7, 0xededed, 5, 8, 0xededed, 5, 9, 0x000000, 6, 4, 0x000000, 6, 5, 0x000000, 6, 6, 0xededed, 6, 7, 0xededed, 6, 8, 0xededed, 6, 9, 0x000000, 7, 5, 0x000000, 7, 6, 0xededed, 7, 7, 0xededed, 7, 8, 0x000000, 7, 9, 0x000000, 8, 6, 0x000000, 8, 7, 0x000000, 8, 8, 0x000000
TREAT_YELLOW: .word 0, 1, 0xfff7a1, 0, 2, 0xfff7a1, 0, 3, 0xfff7a1, 1, 0, 0xfff7a1, 1, 1, 0xfff7a1, 1, 2, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 2, 0, 0xfff7a1, 2, 1, 0xfff7a1, 2, 2, 0xfff7a1, 2, 3, 0xfff7a1, 2, 4, 0xfff7a1, 3, 0, 0xfff7a1, 3, 1, 0xfff7a1, 3, 2, 0xfff7a1, 3, 3, 0xfff7a1, 3, 4, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 4, 1, 0xfff7a1, 4, 2, 0xfff7a1, 4, 3, 0xfff7a1, 4, 4, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 4, 8, 0xfff7a1, 5, 3, 0xfff7a1, 5, 4, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 5, 8, 0xfff7a1, 5, 9, 0xfff7a1, 6, 4, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 5, 0xfff7a1, 7, 6, 0xfff7a1, 7, 7, 0xfff7a1, 7, 8, 0xfff7a1, 7, 9, 0xfff7a1, 8, 6, 0xfff7a1, 8, 7, 0xfff7a1, 8, 8, 0xfff7a1
TREAT_LEN: .word 147
CHOCOLATE: .word 0, 1, 0x000000, 0, 2, 0x733717, 0, 3, 0x59210c, 0, 4, 0x59210c, 1, 0, 0x000000, 1, 1, 0x733717, 1, 2, 0x733717, 1, 3, 0x59210c, 1, 4, 0x59210c, 1, 5, 0x733717, 2, 0, 0x733717, 2, 1, 0x59210c, 2, 2, 0x59210c, 2, 3, 0x733717, 2, 4, 0x733717, 2, 5, 0x59210c, 2, 6, 0x59210c, 3, 0, 0x733717, 3, 1, 0x59210c, 3, 2, 0x59210c, 3, 3, 0x733717, 3, 4, 0x733717, 3, 5, 0x59210c, 3, 6, 0x5c5c5c, 3, 7, 0x5c5c5c, 3, 8, 0xb8b8b8, 4, 0, 0x59210c, 4, 1, 0x733717, 4, 2, 0x733717, 4, 3, 0x59210c, 4, 4, 0x59210c, 4, 5, 0x733717, 4, 6, 0xededed, 4, 7, 0xf27b7b, 4, 8, 0xf27b7b, 5, 1, 0x733717, 5, 2, 0x733717, 5, 3, 0x59210c, 5, 4, 0x5c5c5c, 5, 5, 0xededed, 5, 6, 0xededed, 5, 7, 0xf27b7b, 5, 8, 0xf27b7b, 5, 9, 0xf27b7b, 6, 2, 0x59210c, 6, 3, 0x733717, 6, 4, 0xededed, 6, 5, 0xf27b7b, 6, 6, 0xf27b7b, 6, 7, 0xf27b7b, 6, 8, 0xf27b7b, 6, 9, 0xf27b7b, 7, 3, 0x5c5c5c, 7, 4, 0xededed, 7, 5, 0xf27b7b, 7, 6, 0xf27b7b, 7, 7, 0xf27b7b, 7, 8, 0xf27b7b, 7, 9, 0xf27b7b, 8, 3, 0xb8b8b8, 8, 4, 0xf27b7b, 8, 5, 0xf27b7b, 8, 6, 0xf27b7b, 8, 7, 0xf27b7b, 8, 8, 0xf27b7b
CHOCOLATE_YELLOW: .word 0, 1, 0xfff7a1, 0, 2, 0xfff7a1, 0, 3, 0xfff7a1, 0, 4, 0xfff7a1, 1, 0, 0xfff7a1, 1, 1, 0xfff7a1, 1, 2, 0xfff7a1, 1, 3, 0xfff7a1, 1, 4, 0xfff7a1, 1, 5, 0xfff7a1, 2, 0, 0xfff7a1, 2, 1, 0xfff7a1, 2, 2, 0xfff7a1, 2, 3, 0xfff7a1, 2, 4, 0xfff7a1, 2, 5, 0xfff7a1, 2, 6, 0xfff7a1, 3, 0, 0xfff7a1, 3, 1, 0xfff7a1, 3, 2, 0xfff7a1, 3, 3, 0xfff7a1, 3, 4, 0xfff7a1, 3, 5, 0xfff7a1, 3, 6, 0xfff7a1, 3, 7, 0xfff7a1, 3, 8, 0xfff7a1, 4, 0, 0xfff7a1, 4, 1, 0xfff7a1, 4, 2, 0xfff7a1, 4, 3, 0xfff7a1, 4, 4, 0xfff7a1, 4, 5, 0xfff7a1, 4, 6, 0xfff7a1, 4, 7, 0xfff7a1, 4, 8, 0xfff7a1, 5, 1, 0xfff7a1, 5, 2, 0xfff7a1, 5, 3, 0xfff7a1, 5, 4, 0xfff7a1, 5, 5, 0xfff7a1, 5, 6, 0xfff7a1, 5, 7, 0xfff7a1, 5, 8, 0xfff7a1, 5, 9, 0xfff7a1, 6, 2, 0xfff7a1, 6, 3, 0xfff7a1, 6, 4, 0xfff7a1, 6, 5, 0xfff7a1, 6, 6, 0xfff7a1, 6, 7, 0xfff7a1, 6, 8, 0xfff7a1, 6, 9, 0xfff7a1, 7, 3, 0xfff7a1, 7, 4, 0xfff7a1, 7, 5, 0xfff7a1, 7, 6, 0xfff7a1, 7, 7, 0xfff7a1, 7, 8, 0xfff7a1, 7, 9, 0xfff7a1, 8, 3, 0xfff7a1, 8, 4, 0xfff7a1, 8, 5, 0xfff7a1, 8, 6, 0xfff7a1, 8, 7, 0xfff7a1, 8, 8, 0xfff7a1
CHOCOLATE_LEN: .word 195

ZERO: .word 0, 1, 0x000000, 0, 2, 0x000000, 0, 3, 0x000000, 0, 4, 0x000000, 0, 5, 0x000000, 1, 0, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 6, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000, 4, 3, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000
ZERO_LEN: .word 48
ONE: .word 0, 1, 0x000000, 0, 6, 0x000000, 1, 1, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 1, 0x000000, 2, 2, 0x000000, 2, 3, 0x000000, 2, 4, 0x000000, 2, 5, 0x000000, 2, 6, 0x000000, 3, 6, 0x000000, 4, 6, 0x000000
ONE_LEN: .word 39
TWO: .word 0, 1, 0x000000, 0, 5, 0x000000, 0, 6, 0x000000, 1, 0, 0x000000, 1, 4, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 2, 0x000000, 3, 6, 0x000000, 4, 1, 0x000000, 4, 6, 0x000000
TWO_LEN: .word 42
THREE: .word 0, 1, 0x000000, 0, 5, 0x000000, 1, 0, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 3, 6, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000, 4, 3, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000
THREE_LEN: .word 45
FOUR: .word 0, 3, 0x000000, 0, 4, 0x000000, 0, 5, 0x000000, 1, 2, 0x000000, 1, 5, 0x000000, 2, 1, 0x000000, 2, 5, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 1, 0x000000, 3, 2, 0x000000, 3, 3, 0x000000, 3, 4, 0x000000, 3, 5, 0x000000, 3, 6, 0x000000, 4, 5, 0x000000
FOUR_LEN: .word 48
FIVE: .word 0, 0, 0x000000, 0, 1, 0x000000, 0, 2, 0x000000, 0, 3, 0x000000, 0, 6, 0x000000, 1, 0, 0x000000, 1, 3, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 3, 6, 0x000000, 4, 0, 0x000000, 4, 3, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000, 4, 6, 0x000000
FIVE_LEN: .word 57
SIX: .word 0, 0, 0x000000, 0, 1, 0x000000, 0, 2, 0x000000, 0, 3, 0x000000, 0, 4, 0x000000, 0, 5, 0x000000, 0, 6, 0x000000, 1, 0, 0x000000, 1, 3, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 3, 6, 0x000000, 4, 0, 0x000000, 4, 3, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000, 4, 6, 0x000000
SIX_LEN: .word 63
SEVEN: .word 0, 0, 0x000000, 1, 0, 0x000000, 2, 0, 0x000000, 2, 4, 0x000000, 2, 5, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000
SEVEN_LEN: .word 30
EIGHT: .word 0, 1, 0x000000, 0, 2, 0x000000, 0, 4, 0x000000, 0, 5, 0x000000, 1, 0, 0x000000, 1, 3, 0x000000, 1, 6, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 3, 6, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000
EIGHT_LEN: .word 51
NINE: .word 0, 1, 0x000000, 0, 2, 0x000000, 1, 0, 0x000000, 1, 3, 0x000000, 2, 0, 0x000000, 2, 3, 0x000000, 3, 0, 0x000000, 3, 3, 0x000000, 4, 1, 0x000000, 4, 2, 0x000000, 4, 3, 0x000000, 4, 4, 0x000000, 4, 5, 0x000000, 4, 6, 0x000000
NINE_LEN: .word 42

TREATS_COLLECTED: .word 0, 0, 0x000000, 1, 0, 0x000000, 2, 0, 0x000000, 2, 1, 0x000000, 2, 2, 0x000000, 2, 3, 0x000000, 2, 4, 0x000000, 2, 5, 0x000000, 2, 6, 0x000000, 3, 0, 0x000000, 4, 0, 0x000000, 5, 0, 0x000000, 7, 0, 0x000000, 7, 1, 0x000000, 7, 2, 0x000000, 7, 3, 0x000000, 7, 4, 0x000000, 7, 5, 0x000000, 7, 6, 0x000000, 8, 0, 0x000000, 8, 3, 0x000000, 9, 0, 0x000000, 9, 3, 0x000000, 9, 4, 0x000000, 9, 5, 0x000000, 10, 1, 0x000000, 10, 2, 0x000000, 10, 6, 0x000000, 12, 0, 0x000000, 12, 1, 0x000000, 12, 2, 0x000000, 12, 3, 0x000000, 12, 4, 0x000000, 12, 5, 0x000000, 12, 6, 0x000000, 13, 0, 0x000000, 13, 3, 0x000000, 13, 6, 0x000000, 14, 0, 0x000000, 14, 3, 0x000000, 14, 6, 0x000000, 15, 0, 0x000000, 15, 3, 0x000000, 15, 6, 0x000000, 16, 0, 0x000000, 16, 6, 0x000000, 18, 1, 0x000000, 18, 2, 0x000000, 18, 3, 0x000000, 18, 4, 0x000000, 18, 5, 0x000000, 18, 6, 0x000000, 19, 0, 0x000000, 19, 3, 0x000000, 20, 0, 0x000000, 20, 3, 0x000000, 21, 1, 0x000000, 21, 2, 0x000000, 21, 3, 0x000000, 21, 4, 0x000000, 21, 5, 0x000000, 21, 6, 0x000000, 23, 0, 0x000000, 24, 0, 0x000000, 25, 0, 0x000000, 26, 0, 0x000000, 26, 1, 0x000000, 26, 2, 0x000000, 26, 3, 0x000000, 26, 4, 0x000000, 26, 5, 0x000000, 26, 6, 0x000000, 27, 0, 0x000000, 28, 0, 0x000000, 30, 1, 0x000000, 30, 2, 0x000000, 30, 6, 0x000000, 31, 0, 0x000000, 31, 3, 0x000000, 31, 6, 0x000000, 32, 0, 0x000000, 32, 3, 0x000000, 32, 6, 0x000000, 33, 0, 0x000000, 33, 3, 0x000000, 33, 6, 0x000000, 34, 0, 0x000000, 34, 4, 0x000000, 34, 5, 0x000000, 37, 1, 0x000000, 37, 2, 0x000000, 37, 4, 0x000000, 37, 5, 0x000000
TREATS_COLLECTED_LEN: .word 279

START_MENU: .word 6, 3, 0x000000, 6, 4, 0x000000, 6, 5, 0x000000, 6, 6, 0x000000, 6, 7, 0x000000, 6, 8, 0x000000, 6, 9, 0x000000, 6, 10, 0x000000, 6, 11, 0x000000, 7, 3, 0x000000, 7, 4, 0x000000, 7, 5, 0x000000, 7, 6, 0x000000, 7, 7, 0x000000, 7, 8, 0x000000, 7, 9, 0x000000, 7, 10, 0x000000, 7, 11, 0x000000, 8, 3, 0x000000, 8, 4, 0x000000, 8, 7, 0x000000, 9, 3, 0x000000, 9, 4, 0x000000, 9, 7, 0x000000, 10, 3, 0x000000, 10, 4, 0x000000, 10, 7, 0x000000, 11, 3, 0x000000, 11, 4, 0x000000, 11, 7, 0x000000, 11, 82, 0x663e01, 11, 83, 0x663e01, 11, 84, 0x663e01, 11, 85, 0x663e01, 11, 86, 0x663e01, 11, 87, 0x663e01, 11, 88, 0x663e01, 11, 89, 0x663e01, 12, 5, 0x000000, 12, 6, 0x000000, 12, 20, 0x000000, 12, 80, 0x663e01, 12, 81, 0x663e01, 12, 82, 0x663e01, 12, 83, 0x663e01, 12, 84, 0x663e01, 12, 85, 0x663e01, 12, 86, 0x663e01, 12, 87, 0x663e01, 12, 88, 0x663e01, 12, 89, 0x663e01, 12, 90, 0x915900, 12, 91, 0x915900, 12, 92, 0x915900, 12, 93, 0x915900, 12, 94, 0x915900, 12, 95, 0x915900, 12, 96, 0x915900, 12, 97, 0x915900, 13, 20, 0x000000, 13, 72, 0x663e01, 13, 73, 0x663e01, 13, 74, 0x663e01, 13, 75, 0x663e01, 13, 76, 0x663e01, 13, 77, 0x663e01, 13, 78, 0x663e01, 13, 80, 0x663e01, 13, 81, 0x663e01, 13, 82, 0x663e01, 13, 83, 0x663e01, 13, 84, 0x915900, 13, 85, 0x915900, 13, 86, 0x915900, 13, 87, 0x915900, 13, 88, 0x915900, 13, 89, 0x915900, 13, 90, 0x915900, 13, 91, 0x915900, 13, 92, 0x915900, 13, 93, 0x915900, 13, 94, 0x915900, 13, 95, 0x915900, 13, 96, 0x915900, 13, 97, 0x915900, 14, 21, 0x000000, 14, 22, 0x000000, 14, 41, 0x915900, 14, 42, 0x915900, 14, 43, 0x915900, 14, 44, 0x915900, 14, 45, 0x915900, 14, 46, 0x915900, 14, 47, 0x915900, 14, 48, 0x915900, 14, 49, 0x915900, 14, 50, 0x915900, 14, 51, 0x915900, 14, 52, 0x663e01, 14, 53, 0x663e01, 14, 54, 0x663e01, 14, 70, 0x663e01, 14, 71, 0x663e01, 14, 72, 0x663e01, 14, 73, 0x663e01, 14, 74, 0x663e01, 14, 75, 0x663e01, 14, 76, 0x663e01, 14, 77, 0x663e01, 14, 78, 0x663e01, 14, 79, 0x915900, 14, 80, 0x915900, 14, 81, 0x915900, 14, 82, 0x915900, 14, 83, 0x915900, 14, 84, 0x915900, 14, 85, 0x915900, 14, 86, 0x915900, 14, 87, 0x915900, 14, 88, 0x915900, 14, 89, 0x915900, 14, 90, 0x915900, 14, 91, 0x915900, 14, 92, 0x915900, 14, 93, 0x915900, 14, 94, 0x915900, 14, 95, 0x915900, 14, 96, 0x663e01, 14, 97, 0x663e01, 15, 10, 0x000000, 15, 11, 0x000000, 15, 21, 0x000000, 15, 22, 0x000000, 15, 38, 0x915900, 15, 39, 0x915900, 15, 40, 0x915900, 15, 41, 0x915900, 15, 42, 0x915900, 15, 43, 0x915900, 15, 44, 0x915900, 15, 45, 0x915900, 15, 46, 0x915900, 15, 47, 0x915900, 15, 48, 0x915900, 15, 49, 0x915900, 15, 50, 0x915900, 15, 51, 0x915900, 15, 52, 0x663e01, 15, 53, 0x663e01, 15, 54, 0x663e01, 15, 69, 0x663e01, 15, 70, 0x663e01, 15, 71, 0x663e01, 15, 72, 0x663e01, 15, 73, 0x663e01, 15, 74, 0x915900, 15, 75, 0x915900, 15, 76, 0x915900, 15, 77, 0x915900, 15, 78, 0x915900, 15, 79, 0x915900, 15, 80, 0x915900, 15, 81, 0x915900, 15, 82, 0x915900, 15, 83, 0x915900, 15, 84, 0x915900, 15, 85, 0x915900, 15, 86, 0x915900, 15, 87, 0x915900, 15, 88, 0x915900, 15, 89, 0x915900, 15, 90, 0x915900, 15, 91, 0x915900, 15, 92, 0x915900, 15, 93, 0x915900, 15, 94, 0x915900, 15, 95, 0x915900, 15, 96, 0x915900, 15, 97, 0x663e01, 16, 3, 0x000000, 16, 8, 0x000000, 16, 9, 0x000000, 16, 10, 0x000000, 16, 11, 0x000000, 16, 21, 0x000000, 16, 22, 0x000000, 16, 37, 0x915900, 16, 38, 0x915900, 16, 39, 0x915900, 16, 40, 0x915900, 16, 41, 0x915900, 16, 42, 0x915900, 16, 43, 0x915900, 16, 44, 0x915900, 16, 45, 0x915900, 16, 46, 0x915900, 16, 47, 0x915900, 16, 48, 0x915900, 16, 49, 0x915900, 16, 50, 0x915900, 16, 51, 0x915900, 16, 52, 0x915900, 16, 53, 0x663e01, 16, 54, 0x663e01, 16, 67, 0x663e01, 16, 68, 0x663e01, 16, 69, 0x663e01, 16, 70, 0x663e01, 16, 71, 0x663e01, 16, 72, 0x915900, 16, 73, 0x915900, 16, 74, 0x915900, 16, 75, 0x915900, 16, 76, 0x915900, 16, 77, 0x915900, 16, 78, 0x915900, 16, 79, 0x915900, 16, 80, 0x915900, 16, 81, 0x915900, 16, 82, 0x915900, 16, 83, 0x915900, 16, 84, 0x915900, 16, 85, 0x915900, 16, 86, 0x915900, 16, 87, 0x915900, 16, 88, 0x915900, 16, 89, 0x663e01, 16, 90, 0x663e01, 16, 91, 0x663e01, 16, 92, 0x663e01, 16, 93, 0x663e01, 16, 94, 0x663e01, 16, 95, 0x663e01, 16, 96, 0x663e01, 16, 97, 0x663e01, 16, 98, 0x663e01, 16, 99, 0x663e01, 17, 2, 0x000000, 17, 4, 0x000000, 17, 7, 0x000000, 17, 8, 0x000000, 17, 9, 0x000000, 17, 10, 0x000000, 17, 11, 0x000000, 17, 21, 0x000000, 17, 22, 0x000000, 17, 36, 0x915900, 17, 37, 0x915900, 17, 38, 0x915900, 17, 39, 0x915900, 17, 40, 0x915900, 17, 41, 0x915900, 17, 42, 0x915900, 17, 43, 0x915900, 17, 44, 0x915900, 17, 45, 0x915900, 17, 46, 0x915900, 17, 47, 0x915900, 17, 48, 0x915900, 17, 49, 0x915900, 17, 50, 0x915900, 17, 51, 0x915900, 17, 52, 0x915900, 17, 53, 0x915900, 17, 54, 0x915900, 17, 55, 0x915900, 17, 66, 0x663e01, 17, 67, 0x663e01, 17, 68, 0x663e01, 17, 69, 0x663e01, 17, 70, 0x663e01, 17, 71, 0x915900, 17, 72, 0x915900, 17, 73, 0x915900, 17, 74, 0x915900, 17, 75, 0x915900, 17, 76, 0x915900, 17, 77, 0x915900, 17, 78, 0x915900, 17, 79, 0x915900, 17, 80, 0x915900, 17, 81, 0x915900, 17, 82, 0x915900, 17, 83, 0x915900, 17, 84, 0x915900, 17, 85, 0x915900, 17, 86, 0x915900, 17, 87, 0x915900, 17, 88, 0x915900, 17, 89, 0x915900, 17, 90, 0x915900, 17, 91, 0x915900, 17, 92, 0x915900, 17, 93, 0x915900, 17, 94, 0x915900, 17, 95, 0x915900, 17, 96, 0x915900, 17, 97, 0x915900, 17, 98, 0x663e01, 17, 99, 0x663e01, 17, 100, 0x663e01, 18, 6, 0x000000, 18, 7, 0x000000, 18, 8, 0x000000, 18, 9, 0x000000, 18, 10, 0x000000, 18, 11, 0x000000, 18, 14, 0x000000, 18, 15, 0x000000, 18, 16, 0x000000, 18, 17, 0x000000, 18, 18, 0x000000, 18, 19, 0x000000, 18, 20, 0x000000, 18, 35, 0x915900, 18, 36, 0x915900, 18, 37, 0x915900, 18, 38, 0x915900, 18, 39, 0x915900, 18, 40, 0x915900, 18, 41, 0x915900, 18, 42, 0x915900, 18, 43, 0x915900, 18, 44, 0x915900, 18, 45, 0x915900, 18, 46, 0x915900, 18, 47, 0x915900, 18, 48, 0x915900, 18, 49, 0x915900, 18, 50, 0x915900, 18, 51, 0x915900, 18, 52, 0x915900, 18, 53, 0x663e01, 18, 54, 0x663e01, 18, 55, 0x663e01, 18, 66, 0x663e01, 18, 67, 0x663e01, 18, 68, 0x663e01, 18, 69, 0x915900, 18, 70, 0x915900, 18, 71, 0x915900, 18, 72, 0x915900, 18, 73, 0x915900, 18, 74, 0x915900, 18, 75, 0x915900, 18, 76, 0x915900, 18, 77, 0x915900, 18, 78, 0x915900, 18, 79, 0x915900, 18, 80, 0x915900, 18, 81, 0x915900, 18, 82, 0x915900, 18, 83, 0x915900, 18, 84, 0x915900, 18, 85, 0x915900, 18, 86, 0x915900, 18, 87, 0x915900, 18, 88, 0x915900, 18, 89, 0x915900, 18, 90, 0x915900, 18, 91, 0x915900, 18, 92, 0x915900, 18, 93, 0x915900, 18, 94, 0x915900, 18, 95, 0x915900, 18, 96, 0x915900, 18, 97, 0x915900, 18, 98, 0x663e01, 18, 99, 0x663e01, 18, 100, 0x663e01, 19, 3, 0x000000, 19, 7, 0x000000, 19, 8, 0x000000, 19, 9, 0x000000, 19, 10, 0x000000, 19, 11, 0x000000, 19, 14, 0x000000, 19, 15, 0x000000, 19, 16, 0x000000, 19, 17, 0x000000, 19, 18, 0x000000, 19, 19, 0x000000, 19, 20, 0x000000, 19, 33, 0x915900, 19, 34, 0x915900, 19, 35, 0x915900, 19, 36, 0x915900, 19, 37, 0x915900, 19, 38, 0x915900, 19, 39, 0x915900, 19, 40, 0x915900, 19, 41, 0x915900, 19, 42, 0x915900, 19, 43, 0x915900, 19, 44, 0x915900, 19, 45, 0x915900, 19, 46, 0x915900, 19, 47, 0x915900, 19, 48, 0x915900, 19, 49, 0x915900, 19, 50, 0x915900, 19, 51, 0x915900, 19, 52, 0x663e01, 19, 53, 0x663e01, 19, 54, 0x663e01, 19, 55, 0x663e01, 19, 65, 0x915900, 19, 66, 0x915900, 19, 67, 0x915900, 19, 68, 0x915900, 19, 69, 0x915900, 19, 70, 0x915900, 19, 71, 0x915900, 19, 72, 0x915900, 19, 73, 0x915900, 19, 74, 0x915900, 19, 75, 0x915900, 19, 76, 0x915900, 19, 77, 0x915900, 19, 78, 0x915900, 19, 79, 0x915900, 19, 80, 0x915900, 19, 81, 0x915900, 19, 82, 0x915900, 19, 83, 0x915900, 19, 84, 0x915900, 19, 85, 0x915900, 19, 86, 0x915900, 19, 87, 0x915900, 19, 88, 0x915900, 19, 89, 0x915900, 19, 90, 0x915900, 19, 91, 0x915900, 19, 92, 0x915900, 19, 93, 0x915900, 19, 94, 0x915900, 19, 95, 0x915900, 19, 96, 0x915900, 19, 97, 0x915900, 19, 98, 0x915900, 19, 99, 0x663e01, 19, 100, 0x663e01, 20, 2, 0x000000, 20, 4, 0x000000, 20, 8, 0x000000, 20, 9, 0x000000, 20, 10, 0x000000, 20, 11, 0x000000, 20, 32, 0x915900, 20, 33, 0x915900, 20, 34, 0x915900, 20, 35, 0x915900, 20, 36, 0x915900, 20, 37, 0x915900, 20, 38, 0x915900, 20, 39, 0x915900, 20, 40, 0x915900, 20, 41, 0x915900, 20, 42, 0x915900, 20, 43, 0x915900, 20, 44, 0x915900, 20, 45, 0x915900, 20, 46, 0x915900, 20, 47, 0x915900, 20, 48, 0x915900, 20, 49, 0x915900, 20, 50, 0x663e01, 20, 51, 0x663e01, 20, 52, 0x663e01, 20, 53, 0x663e01, 20, 54, 0x663e01, 20, 55, 0x663e01, 20, 64, 0x915900, 20, 65, 0x915900, 20, 66, 0x915900, 20, 67, 0x915900, 20, 68, 0x915900, 20, 69, 0x915900, 20, 70, 0x915900, 20, 71, 0x915900, 20, 72, 0x915900, 20, 73, 0x915900, 20, 74, 0x915900, 20, 75, 0x915900, 20, 76, 0x915900, 20, 77, 0x915900, 20, 78, 0x915900, 20, 79, 0x915900, 20, 80, 0x915900, 20, 81, 0x915900, 20, 82, 0x915900, 20, 83, 0x915900, 20, 84, 0x915900, 20, 85, 0x915900, 20, 86, 0x915900, 20, 87, 0x915900, 20, 88, 0x915900, 20, 89, 0x915900, 20, 90, 0x915900, 20, 91, 0x915900, 20, 92, 0x915900, 20, 93, 0x915900, 20, 94, 0x915900, 20, 95, 0x915900, 20, 96, 0x915900, 20, 97, 0x915900, 20, 98, 0x915900, 20, 99, 0x663e01, 20, 100, 0x663e01, 21, 10, 0x000000, 21, 11, 0x000000, 21, 30, 0x915900, 21, 31, 0x915900, 21, 32, 0x915900, 21, 33, 0x915900, 21, 34, 0x915900, 21, 35, 0x915900, 21, 36, 0x915900, 21, 37, 0x915900, 21, 38, 0x915900, 21, 39, 0x915900, 21, 40, 0x915900, 21, 41, 0x915900, 21, 42, 0x915900, 21, 43, 0x915900, 21, 44, 0x915900, 21, 45, 0x915900, 21, 46, 0x915900, 21, 47, 0x915900, 21, 48, 0x915900, 21, 49, 0x663e01, 21, 50, 0x663e01, 21, 51, 0x663e01, 21, 52, 0x663e01, 21, 53, 0x663e01, 21, 54, 0x915900, 21, 55, 0x915900, 21, 56, 0x915900, 21, 57, 0x915900, 21, 63, 0x915900, 21, 64, 0x915900, 21, 65, 0x915900, 21, 66, 0x915900, 21, 67, 0x915900, 21, 68, 0x915900, 21, 69, 0x915900, 21, 70, 0x915900, 21, 71, 0x915900, 21, 72, 0x915900, 21, 73, 0x915900, 21, 74, 0x915900, 21, 75, 0x915900, 21, 76, 0x915900, 21, 77, 0x915900, 21, 78, 0x915900, 21, 79, 0x915900, 21, 80, 0x915900, 21, 81, 0x915900, 21, 82, 0x915900, 21, 83, 0x915900, 21, 84, 0x915900, 21, 85, 0x915900, 21, 86, 0x915900, 21, 87, 0x915900, 21, 88, 0x915900, 21, 89, 0x915900, 21, 90, 0x915900, 21, 91, 0x915900, 21, 92, 0x915900, 21, 93, 0x915900, 21, 94, 0x915900, 21, 95, 0x915900, 21, 96, 0x915900, 21, 97, 0x915900, 21, 98, 0x915900, 21, 99, 0x663e01, 21, 100, 0x663e01, 22, 14, 0x000000, 22, 15, 0x000000, 22, 16, 0x000000, 22, 17, 0x000000, 22, 18, 0x000000, 22, 19, 0x000000, 22, 20, 0x000000, 22, 29, 0x915900, 22, 30, 0x915900, 22, 31, 0x915900, 22, 32, 0x915900, 22, 33, 0x915900, 22, 34, 0x915900, 22, 35, 0x915900, 22, 36, 0x915900, 22, 37, 0x915900, 22, 38, 0x915900, 22, 39, 0x915900, 22, 40, 0x000000, 22, 41, 0x000000, 22, 42, 0x915900, 22, 43, 0x915900, 22, 44, 0x915900, 22, 45, 0x915900, 22, 46, 0x915900, 22, 47, 0x915900, 22, 48, 0x915900, 22, 49, 0x663e01, 22, 50, 0x663e01, 22, 51, 0x663e01, 22, 52, 0x915900, 22, 53, 0x915900, 22, 54, 0x915900, 22, 55, 0x915900, 22, 56, 0x915900, 22, 57, 0x915900, 22, 58, 0x915900, 22, 59, 0x915900, 22, 63, 0x915900, 22, 64, 0x915900, 22, 65, 0x915900, 22, 66, 0x915900, 22, 67, 0x915900, 22, 68, 0x915900, 22, 69, 0x915900, 22, 70, 0x915900, 22, 71, 0x915900, 22, 72, 0x915900, 22, 73, 0x915900, 22, 74, 0x915900, 22, 75, 0x915900, 22, 76, 0x915900, 22, 77, 0x915900, 22, 78, 0x915900, 22, 79, 0x915900, 22, 80, 0x915900, 22, 81, 0x915900, 22, 82, 0x915900, 22, 83, 0x915900, 22, 84, 0x915900, 22, 85, 0x915900, 22, 86, 0x915900, 22, 87, 0x915900, 22, 88, 0x915900, 22, 89, 0x915900, 22, 90, 0x915900, 22, 91, 0x915900, 22, 92, 0x915900, 22, 93, 0x915900, 22, 94, 0x915900, 22, 95, 0x915900, 22, 96, 0x915900, 22, 97, 0x915900, 22, 98, 0x915900, 22, 99, 0x663e01, 22, 100, 0x663e01, 22, 101, 0x663e01, 23, 14, 0x000000, 23, 15, 0x000000, 23, 16, 0x000000, 23, 17, 0x000000, 23, 18, 0x000000, 23, 19, 0x000000, 23, 20, 0x000000, 23, 29, 0x915900, 23, 30, 0x915900, 23, 31, 0x915900, 23, 32, 0x915900, 23, 33, 0x915900, 23, 34, 0x915900, 23, 35, 0x915900, 23, 36, 0x915900, 23, 37, 0x915900, 23, 38, 0x915900, 23, 39, 0x000000, 23, 40, 0x000000, 23, 41, 0x000000, 23, 42, 0x000000, 23, 43, 0x915900, 23, 44, 0x915900, 23, 45, 0x915900, 23, 46, 0x915900, 23, 47, 0x915900, 23, 48, 0x915900, 23, 49, 0x915900, 23, 50, 0x915900, 23, 51, 0x915900, 23, 52, 0x915900, 23, 53, 0x915900, 23, 54, 0x915900, 23, 55, 0x915900, 23, 56, 0x915900, 23, 57, 0x915900, 23, 58, 0x915900, 23, 59, 0x915900, 23, 60, 0x915900, 23, 63, 0x915900, 23, 64, 0x915900, 23, 65, 0x915900, 23, 66, 0x915900, 23, 67, 0x915900, 23, 68, 0x915900, 23, 69, 0x915900, 23, 70, 0x915900, 23, 71, 0x915900, 23, 72, 0x915900, 23, 73, 0x915900, 23, 74, 0x915900, 23, 75, 0x915900, 23, 76, 0x915900, 23, 77, 0x915900, 23, 78, 0x915900, 23, 79, 0x915900, 23, 80, 0x915900, 23, 81, 0x915900, 23, 82, 0x915900, 23, 83, 0x915900, 23, 84, 0x915900, 23, 85, 0x915900, 23, 86, 0x915900, 23, 87, 0x915900, 23, 88, 0x915900, 23, 89, 0x915900, 23, 90, 0x915900, 23, 91, 0x915900, 23, 92, 0x915900, 23, 93, 0x915900, 23, 94, 0x915900, 23, 95, 0x915900, 23, 96, 0x915900, 23, 97, 0x915900, 23, 98, 0x915900, 23, 99, 0x663e01, 23, 100, 0x663e01, 23, 101, 0x663e01, 24, 10, 0x000000, 24, 11, 0x000000, 24, 21, 0x000000, 24, 22, 0x000000, 24, 29, 0x915900, 24, 30, 0x915900, 24, 31, 0x915900, 24, 32, 0x915900, 24, 33, 0x915900, 24, 34, 0x915900, 24, 35, 0x915900, 24, 36, 0x915900, 24, 37, 0x915900, 24, 38, 0x915900, 24, 39, 0x000000, 24, 40, 0x000000, 24, 41, 0x000000, 24, 42, 0x000000, 24, 43, 0x915900, 24, 44, 0x915900, 24, 45, 0x915900, 24, 46, 0x915900, 24, 47, 0x915900, 24, 48, 0x915900, 24, 49, 0x915900, 24, 50, 0x915900, 24, 51, 0x915900, 24, 52, 0x915900, 24, 53, 0x915900, 24, 54, 0x915900, 24, 55, 0x915900, 24, 56, 0x915900, 24, 57, 0x915900, 24, 58, 0x915900, 24, 59, 0x915900, 24, 60, 0x915900, 24, 62, 0x663e01, 24, 63, 0x663e01, 24, 64, 0x663e01, 24, 65, 0x915900, 24, 66, 0x915900, 24, 67, 0x915900, 24, 68, 0x915900, 24, 69, 0x915900, 24, 70, 0x915900, 24, 71, 0x915900, 24, 72, 0x915900, 24, 73, 0x915900, 24, 74, 0x915900, 24, 75, 0x915900, 24, 76, 0x915900, 24, 77, 0x915900, 24, 78, 0x915900, 24, 79, 0x915900, 24, 80, 0x915900, 24, 81, 0x915900, 24, 82, 0x915900, 24, 83, 0x915900, 24, 84, 0x915900, 24, 85, 0x915900, 24, 86, 0x915900, 24, 87, 0x915900, 24, 88, 0x915900, 24, 89, 0x915900, 24, 90, 0x915900, 24, 91, 0x915900, 24, 92, 0x915900, 24, 93, 0x915900, 24, 94, 0x915900, 24, 95, 0x915900, 24, 96, 0x915900, 24, 97, 0x915900, 24, 98, 0x915900, 24, 99, 0x915900, 24, 100, 0x663e01, 24, 101, 0x663e01, 25, 3, 0x000000, 25, 8, 0x000000, 25, 9, 0x000000, 25, 10, 0x000000, 25, 11, 0x000000, 25, 21, 0x000000, 25, 22, 0x000000, 25, 29, 0x915900, 25, 30, 0x915900, 25, 31, 0x915900, 25, 32, 0x915900, 25, 33, 0x915900, 25, 34, 0x915900, 25, 35, 0x915900, 25, 36, 0x915900, 25, 37, 0x915900, 25, 38, 0x915900, 25, 39, 0x000000, 25, 40, 0xffffff, 25, 41, 0x000000, 25, 42, 0x000000, 25, 43, 0x915900, 25, 44, 0x915900, 25, 45, 0x915900, 25, 46, 0x915900, 25, 47, 0x915900, 25, 48, 0x915900, 25, 49, 0x915900, 25, 50, 0x915900, 25, 51, 0x915900, 25, 52, 0x915900, 25, 53, 0x915900, 25, 54, 0x915900, 25, 55, 0x915900, 25, 56, 0x915900, 25, 57, 0x915900, 25, 58, 0x663e01, 25, 59, 0x663e01, 25, 60, 0x663e01, 25, 61, 0x663e01, 25, 62, 0x663e01, 25, 63, 0x663e01, 25, 64, 0x663e01, 25, 65, 0x663e01, 25, 66, 0x663e01, 25, 67, 0x915900, 25, 68, 0x915900, 25, 69, 0x915900, 25, 70, 0x915900, 25, 71, 0x915900, 25, 72, 0x915900, 25, 73, 0x915900, 25, 74, 0x915900, 25, 75, 0x915900, 25, 76, 0x915900, 25, 77, 0x915900, 25, 78, 0x915900, 25, 79, 0x915900, 25, 80, 0x915900, 25, 81, 0x915900, 25, 82, 0x915900, 25, 83, 0x915900, 25, 84, 0x915900, 25, 85, 0x915900, 25, 86, 0x915900, 25, 87, 0x915900, 25, 88, 0x915900, 25, 89, 0x915900, 25, 90, 0x915900, 25, 91, 0x915900, 25, 92, 0x915900, 25, 93, 0x915900, 25, 94, 0x915900, 25, 95, 0x915900, 25, 96, 0x915900, 25, 97, 0x915900, 25, 98, 0x915900, 25, 99, 0x915900, 25, 100, 0x663e01, 25, 101, 0x663e01, 26, 2, 0x000000, 26, 4, 0x000000, 26, 7, 0x000000, 26, 8, 0x000000, 26, 9, 0x000000, 26, 10, 0x000000, 26, 11, 0x000000, 26, 21, 0x000000, 26, 22, 0x000000, 26, 29, 0x915900, 26, 30, 0x915900, 26, 31, 0x915900, 26, 32, 0x915900, 26, 33, 0x915900, 26, 34, 0x915900, 26, 35, 0x915900, 26, 36, 0x915900, 26, 37, 0x915900, 26, 38, 0x915900, 26, 39, 0x000000, 26, 40, 0x000000, 26, 41, 0x000000, 26, 42, 0x915900, 26, 43, 0x915900, 26, 44, 0x915900, 26, 45, 0x915900, 26, 46, 0x915900, 26, 47, 0x915900, 26, 48, 0x915900, 26, 49, 0x915900, 26, 50, 0x915900, 26, 51, 0x915900, 26, 52, 0x915900, 26, 53, 0x915900, 26, 54, 0x915900, 26, 55, 0x915900, 26, 56, 0x915900, 26, 57, 0x663e01, 26, 58, 0x663e01, 26, 59, 0x663e01, 26, 60, 0x663e01, 26, 61, 0x663e01, 26, 62, 0x663e01, 26, 63, 0x663e01, 26, 64, 0x663e01, 26, 65, 0x663e01, 26, 66, 0x663e01, 26, 67, 0x915900, 26, 68, 0x915900, 26, 69, 0x915900, 26, 70, 0x915900, 26, 71, 0x915900, 26, 72, 0x915900, 26, 73, 0x915900, 26, 74, 0x915900, 26, 75, 0x915900, 26, 76, 0x915900, 26, 77, 0x915900, 26, 78, 0x915900, 26, 79, 0x915900, 26, 80, 0x915900, 26, 81, 0x915900, 26, 82, 0x915900, 26, 83, 0x915900, 26, 84, 0x915900, 26, 85, 0x915900, 26, 86, 0x915900, 26, 87, 0x915900, 26, 88, 0x915900, 26, 89, 0x915900, 26, 90, 0x915900, 26, 91, 0x915900, 26, 92, 0x915900, 26, 93, 0x915900, 26, 94, 0x915900, 26, 95, 0x915900, 26, 96, 0x915900, 26, 97, 0x915900, 26, 98, 0x915900, 26, 99, 0x663e01, 26, 100, 0x663e01, 26, 101, 0x663e01, 27, 6, 0x000000, 27, 7, 0x000000, 27, 8, 0x000000, 27, 9, 0x000000, 27, 10, 0x000000, 27, 11, 0x000000, 27, 21, 0x000000, 27, 22, 0x000000, 27, 29, 0x915900, 27, 30, 0x915900, 27, 31, 0x915900, 27, 32, 0x915900, 27, 33, 0x915900, 27, 34, 0x915900, 27, 35, 0x915900, 27, 36, 0x915900, 27, 37, 0x915900, 27, 38, 0x915900, 27, 39, 0x915900, 27, 40, 0x915900, 27, 41, 0x915900, 27, 42, 0x915900, 27, 43, 0x915900, 27, 44, 0x915900, 27, 45, 0x915900, 27, 46, 0x915900, 27, 47, 0x915900, 27, 48, 0x000000, 27, 49, 0x000000, 27, 50, 0x000000, 27, 51, 0x000000, 27, 52, 0x915900, 27, 53, 0x915900, 27, 54, 0x915900, 27, 55, 0x915900, 27, 56, 0x915900, 27, 57, 0x915900, 27, 58, 0x915900, 27, 59, 0x915900, 27, 60, 0x915900, 27, 61, 0x915900, 27, 62, 0x663e01, 27, 63, 0x663e01, 27, 64, 0x663e01, 27, 65, 0x663e01, 27, 66, 0x663e01, 27, 67, 0x915900, 27, 68, 0x915900, 27, 69, 0x915900, 27, 70, 0x915900, 27, 71, 0x915900, 27, 72, 0x915900, 27, 73, 0x915900, 27, 74, 0x915900, 27, 75, 0x915900, 27, 76, 0x915900, 27, 77, 0x915900, 27, 78, 0x915900, 27, 79, 0x915900, 27, 80, 0x915900, 27, 81, 0x915900, 27, 82, 0x915900, 27, 83, 0x915900, 27, 84, 0x915900, 27, 85, 0x915900, 27, 86, 0x915900, 27, 87, 0x915900, 27, 88, 0x915900, 27, 89, 0x915900, 27, 90, 0x915900, 27, 91, 0x915900, 27, 92, 0x915900, 27, 93, 0x915900, 27, 94, 0x915900, 27, 95, 0x915900, 27, 96, 0x915900, 27, 97, 0x915900, 27, 98, 0x915900, 27, 99, 0x663e01, 27, 100, 0x663e01, 27, 101, 0x663e01, 28, 3, 0x000000, 28, 7, 0x000000, 28, 8, 0x000000, 28, 9, 0x000000, 28, 10, 0x000000, 28, 11, 0x000000, 28, 14, 0x000000, 28, 15, 0x000000, 28, 16, 0x000000, 28, 17, 0x000000, 28, 18, 0x000000, 28, 19, 0x000000, 28, 20, 0x000000, 28, 28, 0x915900, 28, 29, 0x915900, 28, 30, 0x915900, 28, 31, 0x915900, 28, 32, 0x915900, 28, 33, 0x915900, 28, 34, 0x915900, 28, 35, 0x915900, 28, 36, 0x915900, 28, 37, 0x915900, 28, 38, 0x915900, 28, 39, 0x915900, 28, 40, 0x915900, 28, 41, 0x915900, 28, 42, 0x915900, 28, 43, 0x915900, 28, 44, 0x915900, 28, 45, 0x915900, 28, 46, 0x915900, 28, 47, 0x000000, 28, 48, 0x000000, 28, 49, 0x000000, 28, 50, 0x000000, 28, 51, 0x000000, 28, 52, 0x000000, 28, 53, 0x915900, 28, 54, 0x915900, 28, 55, 0x915900, 28, 56, 0x915900, 28, 57, 0x915900, 28, 58, 0x915900, 28, 59, 0x000000, 28, 60, 0x915900, 28, 61, 0x915900, 28, 62, 0x915900, 28, 63, 0x663e01, 28, 64, 0x663e01, 28, 65, 0x663e01, 28, 66, 0x663e01, 28, 67, 0x915900, 28, 68, 0x915900, 28, 69, 0x915900, 28, 70, 0x915900, 28, 71, 0x915900, 28, 72, 0x915900, 28, 73, 0x915900, 28, 74, 0x915900, 28, 75, 0x915900, 28, 76, 0x915900, 28, 77, 0x915900, 28, 78, 0x915900, 28, 79, 0x915900, 28, 80, 0x915900, 28, 81, 0x915900, 28, 82, 0x915900, 28, 83, 0x915900, 28, 84, 0x915900, 28, 85, 0x915900, 28, 86, 0x663e01, 28, 87, 0x663e01, 28, 88, 0x663e01, 28, 89, 0x915900, 28, 90, 0x915900, 28, 91, 0x915900, 28, 92, 0x915900, 28, 93, 0x915900, 28, 94, 0x915900, 28, 95, 0x915900, 28, 96, 0x915900, 28, 97, 0x915900, 28, 98, 0x915900, 28, 99, 0x663e01, 28, 100, 0x663e01, 29, 2, 0x000000, 29, 4, 0x000000, 29, 8, 0x000000, 29, 9, 0x000000, 29, 10, 0x000000, 29, 11, 0x000000, 29, 14, 0x000000, 29, 15, 0x000000, 29, 16, 0x000000, 29, 17, 0x000000, 29, 18, 0x000000, 29, 19, 0x000000, 29, 20, 0x000000, 29, 28, 0x915900, 29, 29, 0x915900, 29, 30, 0x915900, 29, 31, 0x915900, 29, 32, 0x915900, 29, 33, 0x915900, 29, 34, 0x915900, 29, 35, 0x915900, 29, 36, 0x915900, 29, 37, 0x915900, 29, 38, 0x915900, 29, 39, 0x915900, 29, 40, 0x915900, 29, 41, 0x915900, 29, 42, 0x915900, 29, 43, 0x915900, 29, 44, 0x915900, 29, 45, 0x915900, 29, 46, 0x915900, 29, 47, 0x000000, 29, 48, 0x000000, 29, 49, 0x000000, 29, 50, 0x000000, 29, 51, 0x000000, 29, 52, 0x000000, 29, 53, 0x915900, 29, 54, 0x915900, 29, 55, 0x915900, 29, 56, 0x915900, 29, 57, 0x915900, 29, 58, 0x915900, 29, 59, 0x000000, 29, 60, 0x915900, 29, 61, 0x915900, 29, 62, 0x663e01, 29, 63, 0x663e01, 29, 64, 0x663e01, 29, 65, 0x663e01, 29, 66, 0x663e01, 29, 67, 0x915900, 29, 68, 0x915900, 29, 69, 0x915900, 29, 70, 0x915900, 29, 71, 0x915900, 29, 72, 0x915900, 29, 73, 0x915900, 29, 74, 0x915900, 29, 75, 0x915900, 29, 76, 0x915900, 29, 77, 0x915900, 29, 78, 0x915900, 29, 79, 0x915900, 29, 80, 0x915900, 29, 81, 0x915900, 29, 82, 0x915900, 29, 83, 0x915900, 29, 84, 0x915900, 29, 85, 0x915900, 29, 86, 0x663e01, 29, 87, 0x663e01, 29, 88, 0x663e01, 29, 89, 0x663e01, 29, 90, 0x915900, 29, 91, 0x915900, 29, 92, 0x915900, 29, 93, 0x915900, 29, 94, 0x915900, 29, 95, 0x915900, 29, 96, 0x915900, 29, 97, 0x915900, 29, 98, 0x663e01, 29, 99, 0x663e01, 29, 100, 0x663e01, 30, 10, 0x000000, 30, 11, 0x000000, 30, 28, 0x915900, 30, 29, 0x915900, 30, 30, 0x915900, 30, 31, 0x915900, 30, 32, 0x915900, 30, 33, 0x915900, 30, 34, 0x915900, 30, 35, 0x915900, 30, 36, 0x915900, 30, 37, 0x915900, 30, 38, 0x915900, 30, 39, 0x915900, 30, 40, 0x915900, 30, 41, 0x915900, 30, 42, 0x915900, 30, 43, 0x915900, 30, 44, 0x915900, 30, 45, 0x915900, 30, 46, 0x915900, 30, 47, 0x915900, 30, 48, 0x000000, 30, 49, 0x000000, 30, 50, 0x000000, 30, 51, 0x000000, 30, 52, 0x000000, 30, 53, 0x915900, 30, 54, 0x915900, 30, 55, 0x915900, 30, 56, 0x915900, 30, 57, 0x915900, 30, 58, 0x915900, 30, 59, 0x000000, 30, 60, 0x915900, 30, 61, 0x915900, 30, 62, 0x663e01, 30, 63, 0x663e01, 30, 64, 0x663e01, 30, 65, 0x663e01, 30, 66, 0x663e01, 30, 67, 0x663e01, 30, 68, 0x915900, 30, 69, 0x915900, 30, 70, 0x915900, 30, 71, 0x915900, 30, 72, 0x915900, 30, 73, 0x915900, 30, 74, 0x915900, 30, 75, 0x915900, 30, 76, 0x915900, 30, 77, 0x915900, 30, 78, 0x915900, 30, 79, 0x915900, 30, 80, 0x915900, 30, 81, 0x915900, 30, 82, 0x915900, 30, 83, 0x915900, 30, 84, 0x915900, 30, 85, 0x915900, 30, 86, 0x915900, 30, 87, 0x663e01, 30, 88, 0x663e01, 30, 89, 0x663e01, 30, 90, 0x663e01, 30, 91, 0x915900, 30, 92, 0x915900, 30, 93, 0x915900, 30, 94, 0x915900, 30, 95, 0x915900, 30, 96, 0x915900, 30, 97, 0x915900, 30, 98, 0x663e01, 30, 99, 0x663e01, 30, 100, 0x663e01, 31, 14, 0x000000, 31, 15, 0x000000, 31, 16, 0x000000, 31, 17, 0x000000, 31, 18, 0x000000, 31, 19, 0x000000, 31, 20, 0x000000, 31, 21, 0x000000, 31, 22, 0x000000, 31, 28, 0x915900, 31, 29, 0x915900, 31, 30, 0x915900, 31, 31, 0x915900, 31, 32, 0x915900, 31, 33, 0x915900, 31, 34, 0x915900, 31, 35, 0x915900, 31, 36, 0x915900, 31, 37, 0x915900, 31, 38, 0x915900, 31, 39, 0x915900, 31, 40, 0x915900, 31, 41, 0x915900, 31, 42, 0x915900, 31, 43, 0x915900, 31, 44, 0x915900, 31, 45, 0x915900, 31, 46, 0x915900, 31, 47, 0x915900, 31, 48, 0x000000, 31, 49, 0x000000, 31, 50, 0x000000, 31, 51, 0x000000, 31, 52, 0x000000, 31, 53, 0x915900, 31, 54, 0x915900, 31, 55, 0x915900, 31, 56, 0x915900, 31, 57, 0x915900, 31, 58, 0x915900, 31, 59, 0x000000, 31, 60, 0x915900, 31, 61, 0x915900, 31, 62, 0x663e01, 31, 63, 0x663e01, 31, 64, 0x663e01, 31, 65, 0x663e01, 31, 66, 0x663e01, 31, 67, 0x663e01, 31, 68, 0x915900, 31, 69, 0x915900, 31, 70, 0x915900, 31, 71, 0x915900, 31, 72, 0x915900, 31, 73, 0x915900, 31, 74, 0x915900, 31, 75, 0x915900, 31, 76, 0x915900, 31, 77, 0x915900, 31, 78, 0x915900, 31, 79, 0x915900, 31, 80, 0x915900, 31, 81, 0x915900, 31, 82, 0x915900, 31, 83, 0x915900, 31, 84, 0x915900, 31, 85, 0x915900, 31, 86, 0x915900, 31, 87, 0x915900, 31, 88, 0x663e01, 31, 89, 0x663e01, 31, 90, 0x663e01, 31, 91, 0x663e01, 31, 92, 0x663e01, 31, 93, 0x663e01, 31, 94, 0x663e01, 31, 95, 0x663e01, 31, 96, 0x663e01, 31, 97, 0x663e01, 31, 98, 0x663e01, 31, 99, 0x663e01, 31, 100, 0x663e01, 32, 14, 0x000000, 32, 15, 0x000000, 32, 16, 0x000000, 32, 17, 0x000000, 32, 18, 0x000000, 32, 19, 0x000000, 32, 20, 0x000000, 32, 21, 0x000000, 32, 22, 0x000000, 32, 28, 0x915900, 32, 29, 0x915900, 32, 30, 0x915900, 32, 31, 0x915900, 32, 32, 0x915900, 32, 33, 0x915900, 32, 34, 0x915900, 32, 35, 0x915900, 32, 36, 0x915900, 32, 37, 0x915900, 32, 38, 0x915900, 32, 39, 0x915900, 32, 40, 0x915900, 32, 41, 0x915900, 32, 42, 0x915900, 32, 43, 0x915900, 32, 44, 0x915900, 32, 45, 0x915900, 32, 46, 0x915900, 32, 47, 0x915900, 32, 48, 0x000000, 32, 49, 0xffffff, 32, 50, 0x000000, 32, 51, 0x000000, 32, 52, 0x000000, 32, 53, 0x915900, 32, 54, 0x915900, 32, 55, 0x915900, 32, 56, 0x915900, 32, 57, 0x915900, 32, 58, 0x915900, 32, 59, 0x000000, 32, 60, 0x915900, 32, 61, 0x915900, 32, 62, 0x663e01, 32, 63, 0x663e01, 32, 64, 0x663e01, 32, 65, 0x663e01, 32, 66, 0x663e01, 32, 67, 0x663e01, 32, 68, 0x915900, 32, 69, 0x915900, 32, 70, 0x915900, 32, 71, 0x915900, 32, 72, 0x915900, 32, 73, 0x915900, 32, 74, 0x915900, 32, 75, 0x915900, 32, 76, 0x915900, 32, 77, 0x915900, 32, 78, 0x915900, 32, 79, 0x915900, 32, 80, 0x915900, 32, 81, 0x915900, 32, 82, 0x915900, 32, 83, 0x915900, 32, 84, 0x915900, 32, 85, 0x915900, 32, 86, 0x915900, 32, 87, 0x915900, 32, 88, 0x915900, 32, 89, 0x663e01, 32, 90, 0x663e01, 32, 91, 0x663e01, 32, 92, 0x663e01, 32, 93, 0x663e01, 32, 94, 0x663e01, 32, 95, 0x663e01, 32, 96, 0x663e01, 32, 97, 0x663e01, 32, 98, 0x915900, 32, 99, 0x663e01, 32, 100, 0x663e01, 33, 3, 0x000000, 33, 4, 0x000000, 33, 5, 0x000000, 33, 6, 0x000000, 33, 7, 0x000000, 33, 8, 0x000000, 33, 9, 0x000000, 33, 10, 0x000000, 33, 11, 0x000000, 33, 16, 0x000000, 33, 17, 0x000000, 33, 28, 0x915900, 33, 29, 0x915900, 33, 30, 0x915900, 33, 31, 0x915900, 33, 32, 0x915900, 33, 33, 0x915900, 33, 34, 0x915900, 33, 35, 0x915900, 33, 36, 0x915900, 33, 37, 0x915900, 33, 38, 0x915900, 33, 39, 0x915900, 33, 40, 0x915900, 33, 41, 0x915900, 33, 42, 0x915900, 33, 43, 0x915900, 33, 44, 0x915900, 33, 45, 0x915900, 33, 46, 0x915900, 33, 47, 0x915900, 33, 48, 0x000000, 33, 49, 0x000000, 33, 50, 0x000000, 33, 51, 0x000000, 33, 52, 0x915900, 33, 53, 0x915900, 33, 54, 0x915900, 33, 55, 0x915900, 33, 56, 0x915900, 33, 57, 0x915900, 33, 58, 0x915900, 33, 59, 0x000000, 33, 60, 0x915900, 33, 61, 0x915900, 33, 62, 0x663e01, 33, 63, 0x663e01, 33, 64, 0x663e01, 33, 65, 0x663e01, 33, 66, 0x663e01, 33, 67, 0x663e01, 33, 68, 0x915900, 33, 69, 0x915900, 33, 70, 0x915900, 33, 71, 0x915900, 33, 72, 0x915900, 33, 73, 0x915900, 33, 74, 0x915900, 33, 75, 0x915900, 33, 76, 0x915900, 33, 77, 0x915900, 33, 78, 0x915900, 33, 79, 0x915900, 33, 80, 0x915900, 33, 81, 0x915900, 33, 82, 0x915900, 33, 83, 0x915900, 33, 84, 0x915900, 33, 85, 0x915900, 33, 86, 0x915900, 33, 87, 0x915900, 33, 88, 0x915900, 33, 89, 0x915900, 33, 90, 0x915900, 33, 91, 0x915900, 33, 92, 0x915900, 33, 93, 0x663e01, 33, 94, 0x663e01, 33, 95, 0x663e01, 33, 96, 0x663e01, 33, 97, 0x663e01, 34, 3, 0x000000, 34, 4, 0x000000, 34, 5, 0x000000, 34, 6, 0x000000, 34, 7, 0x000000, 34, 8, 0x000000, 34, 9, 0x000000, 34, 10, 0x000000, 34, 11, 0x000000, 34, 16, 0x000000, 34, 17, 0x000000, 34, 28, 0x915900, 34, 29, 0x915900, 34, 30, 0x915900, 34, 31, 0x915900, 34, 32, 0x915900, 34, 33, 0x915900, 34, 34, 0x915900, 34, 35, 0x915900, 34, 36, 0x915900, 34, 37, 0x915900, 34, 38, 0x915900, 34, 39, 0x000000, 34, 40, 0x000000, 34, 41, 0x000000, 34, 42, 0x915900, 34, 43, 0x915900, 34, 44, 0x915900, 34, 45, 0x915900, 34, 46, 0x915900, 34, 47, 0x915900, 34, 48, 0x915900, 34, 49, 0x000000, 34, 50, 0x000000, 34, 51, 0x915900, 34, 52, 0x915900, 34, 53, 0x915900, 34, 54, 0x915900, 34, 55, 0x915900, 34, 56, 0x915900, 34, 57, 0x915900, 34, 58, 0x915900, 34, 59, 0x000000, 34, 60, 0x915900, 34, 61, 0x915900, 34, 62, 0x915900, 34, 63, 0x663e01, 34, 64, 0x663e01, 34, 65, 0x663e01, 34, 66, 0x663e01, 34, 67, 0x663e01, 34, 68, 0x915900, 34, 69, 0x915900, 34, 70, 0x915900, 34, 71, 0x915900, 34, 72, 0x915900, 34, 73, 0x915900, 34, 74, 0x915900, 34, 75, 0x915900, 34, 76, 0x915900, 34, 77, 0x915900, 34, 78, 0x915900, 34, 79, 0x915900, 34, 80, 0x915900, 34, 81, 0x915900, 34, 82, 0x915900, 34, 83, 0x915900, 34, 84, 0x915900, 34, 85, 0x915900, 34, 86, 0x915900, 34, 87, 0x915900, 34, 88, 0x663e01, 34, 89, 0x663e01, 34, 90, 0x663e01, 34, 91, 0x663e01, 34, 92, 0x663e01, 34, 93, 0x663e01, 34, 94, 0x663e01, 34, 95, 0x663e01, 34, 96, 0x663e01, 34, 97, 0x663e01, 34, 98, 0x663e01, 34, 99, 0x663e01, 35, 3, 0x000000, 35, 4, 0x000000, 35, 10, 0x000000, 35, 11, 0x000000, 35, 18, 0x000000, 35, 19, 0x000000, 35, 28, 0x915900, 35, 29, 0x915900, 35, 30, 0x915900, 35, 31, 0x915900, 35, 32, 0x915900, 35, 33, 0x915900, 35, 34, 0x915900, 35, 35, 0x915900, 35, 36, 0x915900, 35, 37, 0x915900, 35, 38, 0x915900, 35, 39, 0x000000, 35, 40, 0x000000, 35, 41, 0x000000, 35, 42, 0x000000, 35, 43, 0x915900, 35, 44, 0x915900, 35, 45, 0x915900, 35, 46, 0x915900, 35, 47, 0x915900, 35, 48, 0x915900, 35, 49, 0x915900, 35, 50, 0x915900, 35, 51, 0x915900, 35, 52, 0x915900, 35, 53, 0x915900, 35, 54, 0x915900, 35, 55, 0x915900, 35, 56, 0x915900, 35, 57, 0x915900, 35, 58, 0x000000, 35, 59, 0x000000, 35, 60, 0x915900, 35, 61, 0x915900, 35, 62, 0x915900, 35, 63, 0x663e01, 35, 64, 0x663e01, 35, 65, 0x663e01, 35, 66, 0x663e01, 35, 67, 0x915900, 35, 68, 0x915900, 35, 69, 0x915900, 35, 70, 0x915900, 35, 71, 0x915900, 35, 72, 0x915900, 35, 73, 0x915900, 35, 74, 0x915900, 35, 75, 0x915900, 35, 76, 0x915900, 35, 77, 0x915900, 35, 78, 0x915900, 35, 79, 0x915900, 35, 80, 0x915900, 35, 81, 0x915900, 35, 82, 0x915900, 35, 83, 0x915900, 35, 84, 0x915900, 35, 85, 0x915900, 35, 86, 0x663e01, 35, 87, 0x663e01, 35, 88, 0x663e01, 35, 89, 0x663e01, 35, 90, 0x663e01, 35, 91, 0x663e01, 35, 92, 0x663e01, 35, 93, 0x663e01, 35, 94, 0x663e01, 35, 95, 0x663e01, 35, 96, 0x663e01, 35, 97, 0x663e01, 35, 98, 0x663e01, 35, 99, 0x663e01, 36, 3, 0x000000, 36, 4, 0x000000, 36, 10, 0x000000, 36, 11, 0x000000, 36, 18, 0x000000, 36, 19, 0x000000, 36, 28, 0x915900, 36, 29, 0x915900, 36, 30, 0x915900, 36, 31, 0x915900, 36, 32, 0x915900, 36, 33, 0x915900, 36, 34, 0x915900, 36, 35, 0x915900, 36, 36, 0x915900, 36, 37, 0x915900, 36, 38, 0x915900, 36, 39, 0x000000, 36, 40, 0xffffff, 36, 41, 0x000000, 36, 42, 0x000000, 36, 43, 0x915900, 36, 44, 0x915900, 36, 45, 0x915900, 36, 46, 0x915900, 36, 47, 0x915900, 36, 48, 0x915900, 36, 49, 0x915900, 36, 50, 0x915900, 36, 51, 0x915900, 36, 52, 0x915900, 36, 53, 0x915900, 36, 54, 0x915900, 36, 55, 0x915900, 36, 56, 0x915900, 36, 57, 0x915900, 36, 58, 0x915900, 36, 59, 0x915900, 36, 60, 0x915900, 36, 61, 0x915900, 36, 62, 0x663e01, 36, 63, 0x663e01, 36, 64, 0x663e01, 36, 65, 0x663e01, 36, 66, 0x663e01, 36, 67, 0x915900, 36, 68, 0x915900, 36, 69, 0x915900, 36, 70, 0x915900, 36, 71, 0x915900, 36, 72, 0x915900, 36, 73, 0x915900, 36, 74, 0x915900, 36, 75, 0x915900, 36, 76, 0x915900, 36, 77, 0x915900, 36, 78, 0x915900, 36, 79, 0x915900, 36, 80, 0x915900, 36, 81, 0x915900, 36, 82, 0x915900, 36, 83, 0x915900, 36, 84, 0x915900, 36, 85, 0x915900, 36, 86, 0x663e01, 36, 87, 0x663e01, 36, 88, 0x663e01, 36, 89, 0x663e01, 36, 90, 0x663e01, 36, 91, 0x915900, 36, 92, 0x915900, 36, 93, 0x663e01, 36, 94, 0x663e01, 36, 95, 0x663e01, 36, 96, 0x915900, 36, 97, 0x915900, 36, 98, 0x663e01, 36, 99, 0x663e01, 37, 3, 0x000000, 37, 4, 0x000000, 37, 10, 0x000000, 37, 11, 0x000000, 37, 16, 0x000000, 37, 17, 0x000000, 37, 29, 0x915900, 37, 30, 0x915900, 37, 31, 0x915900, 37, 32, 0x915900, 37, 33, 0x915900, 37, 34, 0x915900, 37, 35, 0x915900, 37, 36, 0x915900, 37, 37, 0x915900, 37, 38, 0x915900, 37, 39, 0x000000, 37, 40, 0x000000, 37, 41, 0x000000, 37, 42, 0x000000, 37, 43, 0x915900, 37, 44, 0x915900, 37, 45, 0x915900, 37, 46, 0x915900, 37, 47, 0x915900, 37, 48, 0x915900, 37, 49, 0x915900, 37, 50, 0x915900, 37, 51, 0x915900, 37, 52, 0x915900, 37, 53, 0x915900, 37, 54, 0x915900, 37, 55, 0x915900, 37, 56, 0x915900, 37, 57, 0x915900, 37, 58, 0x915900, 37, 59, 0x915900, 37, 60, 0x915900, 37, 61, 0x915900, 37, 62, 0x663e01, 37, 63, 0x663e01, 37, 64, 0x663e01, 37, 65, 0x663e01, 37, 66, 0x915900, 37, 67, 0x915900, 37, 68, 0x915900, 37, 69, 0x915900, 37, 70, 0x915900, 37, 71, 0x915900, 37, 72, 0x915900, 37, 73, 0x915900, 37, 74, 0x915900, 37, 75, 0x915900, 37, 76, 0x915900, 37, 77, 0x915900, 37, 78, 0x915900, 37, 79, 0x915900, 37, 80, 0x915900, 37, 81, 0x915900, 37, 82, 0x915900, 37, 83, 0x915900, 37, 84, 0x915900, 37, 85, 0x915900, 37, 86, 0x915900, 37, 87, 0x915900, 37, 88, 0x915900, 37, 89, 0x915900, 37, 90, 0x915900, 37, 91, 0x915900, 37, 92, 0x915900, 37, 93, 0x915900, 37, 94, 0x915900, 37, 95, 0x915900, 37, 96, 0x915900, 37, 97, 0x915900, 37, 98, 0x663e01, 37, 99, 0x663e01, 38, 5, 0x000000, 38, 6, 0x000000, 38, 7, 0x000000, 38, 8, 0x000000, 38, 9, 0x000000, 38, 16, 0x000000, 38, 17, 0x000000, 38, 29, 0x915900, 38, 30, 0x915900, 38, 31, 0x915900, 38, 32, 0x915900, 38, 33, 0x915900, 38, 34, 0x915900, 38, 35, 0x915900, 38, 36, 0x915900, 38, 37, 0x915900, 38, 38, 0x915900, 38, 39, 0x000000, 38, 40, 0x000000, 38, 41, 0x000000, 38, 42, 0x915900, 38, 43, 0x915900, 38, 44, 0x915900, 38, 45, 0x915900, 38, 46, 0x915900, 38, 47, 0x915900, 38, 48, 0x915900, 38, 49, 0x915900, 38, 50, 0x915900, 38, 51, 0x915900, 38, 52, 0x915900, 38, 53, 0x915900, 38, 54, 0x915900, 38, 55, 0x915900, 38, 56, 0x915900, 38, 57, 0x915900, 38, 58, 0x915900, 38, 59, 0x915900, 38, 60, 0x915900, 38, 61, 0x915900, 38, 62, 0x915900, 38, 63, 0x915900, 38, 64, 0x663e01, 38, 65, 0x663e01, 38, 66, 0x915900, 38, 67, 0x915900, 38, 68, 0x915900, 38, 69, 0x915900, 38, 70, 0x915900, 38, 71, 0x915900, 38, 72, 0x915900, 38, 73, 0x915900, 38, 74, 0x915900, 38, 75, 0x915900, 38, 76, 0x915900, 38, 77, 0x915900, 38, 78, 0x915900, 38, 79, 0x915900, 38, 80, 0x915900, 38, 81, 0x915900, 38, 82, 0x915900, 38, 83, 0x915900, 38, 84, 0x915900, 38, 85, 0x915900, 38, 86, 0x915900, 38, 87, 0x915900, 38, 88, 0x915900, 38, 89, 0x915900, 38, 90, 0x915900, 38, 91, 0x915900, 38, 92, 0x915900, 38, 93, 0x915900, 38, 94, 0x915900, 38, 95, 0x915900, 38, 96, 0x915900, 38, 97, 0x915900, 38, 98, 0x663e01, 38, 99, 0x663e01, 38, 100, 0x663e01, 39, 5, 0x000000, 39, 6, 0x000000, 39, 7, 0x000000, 39, 8, 0x000000, 39, 9, 0x000000, 39, 14, 0x000000, 39, 15, 0x000000, 39, 16, 0x000000, 39, 17, 0x000000, 39, 18, 0x000000, 39, 19, 0x000000, 39, 20, 0x000000, 39, 21, 0x000000, 39, 22, 0x000000, 39, 29, 0x915900, 39, 30, 0x915900, 39, 31, 0x915900, 39, 32, 0x915900, 39, 33, 0x915900, 39, 34, 0x915900, 39, 35, 0x915900, 39, 36, 0x915900, 39, 37, 0x915900, 39, 38, 0x915900, 39, 39, 0x915900, 39, 40, 0x915900, 39, 41, 0x915900, 39, 42, 0x915900, 39, 43, 0x915900, 39, 44, 0x915900, 39, 45, 0x915900, 39, 46, 0x915900, 39, 47, 0x915900, 39, 48, 0x915900, 39, 49, 0x663e01, 39, 50, 0x663e01, 39, 51, 0x663e01, 39, 52, 0x663e01, 39, 53, 0x915900, 39, 54, 0x915900, 39, 55, 0x915900, 39, 56, 0x915900, 39, 57, 0x915900, 39, 58, 0x915900, 39, 59, 0x915900, 39, 60, 0x915900, 39, 61, 0x915900, 39, 62, 0x915900, 39, 63, 0x915900, 39, 64, 0x915900, 39, 65, 0x915900, 39, 66, 0x915900, 39, 67, 0x915900, 39, 68, 0x915900, 39, 69, 0x915900, 39, 70, 0x915900, 39, 71, 0x915900, 39, 72, 0x915900, 39, 73, 0x915900, 39, 74, 0x915900, 39, 75, 0x915900, 39, 76, 0x915900, 39, 77, 0x915900, 39, 78, 0x915900, 39, 79, 0x915900, 39, 80, 0x915900, 39, 81, 0x915900, 39, 82, 0x915900, 39, 83, 0x915900, 39, 84, 0x915900, 39, 85, 0x915900, 39, 86, 0x915900, 39, 87, 0x915900, 39, 88, 0x915900, 39, 89, 0x915900, 39, 90, 0x915900, 39, 91, 0x915900, 39, 92, 0x915900, 39, 93, 0x915900, 39, 94, 0x915900, 39, 95, 0x915900, 39, 96, 0x915900, 39, 97, 0x915900, 39, 98, 0x663e01, 39, 99, 0x663e01, 39, 100, 0x663e01, 40, 14, 0x000000, 40, 15, 0x000000, 40, 16, 0x000000, 40, 17, 0x000000, 40, 18, 0x000000, 40, 19, 0x000000, 40, 20, 0x000000, 40, 21, 0x000000, 40, 22, 0x000000, 40, 29, 0x915900, 40, 30, 0x915900, 40, 31, 0x915900, 40, 32, 0x915900, 40, 33, 0x915900, 40, 34, 0x915900, 40, 35, 0x915900, 40, 36, 0x915900, 40, 37, 0x915900, 40, 38, 0x915900, 40, 39, 0x915900, 40, 40, 0x915900, 40, 41, 0x915900, 40, 42, 0x915900, 40, 43, 0x915900, 40, 44, 0x915900, 40, 45, 0x915900, 40, 46, 0x915900, 40, 47, 0x915900, 40, 48, 0x915900, 40, 49, 0x663e01, 40, 50, 0x663e01, 40, 51, 0x663e01, 40, 52, 0x663e01, 40, 53, 0x663e01, 40, 54, 0x663e01, 40, 55, 0x915900, 40, 56, 0x915900, 40, 57, 0x915900, 40, 58, 0x915900, 40, 59, 0x915900, 40, 63, 0x915900, 40, 64, 0x915900, 40, 65, 0x915900, 40, 66, 0x915900, 40, 67, 0x915900, 40, 68, 0x915900, 40, 69, 0x915900, 40, 70, 0x915900, 40, 71, 0x915900, 40, 72, 0x915900, 40, 73, 0x915900, 40, 74, 0x915900, 40, 75, 0x915900, 40, 76, 0x915900, 40, 77, 0x915900, 40, 78, 0x915900, 40, 79, 0x915900, 40, 80, 0x915900, 40, 81, 0x915900, 40, 82, 0x915900, 40, 83, 0x915900, 40, 84, 0x915900, 40, 85, 0x915900, 40, 86, 0x915900, 40, 87, 0x915900, 40, 88, 0x915900, 40, 89, 0x915900, 40, 90, 0x915900, 40, 91, 0x915900, 40, 92, 0x915900, 40, 93, 0x915900, 40, 94, 0x915900, 40, 95, 0x915900, 40, 96, 0x915900, 40, 97, 0x915900, 40, 98, 0x915900, 40, 99, 0x663e01, 40, 100, 0x663e01, 41, 30, 0x915900, 41, 31, 0x915900, 41, 32, 0x915900, 41, 33, 0x915900, 41, 34, 0x915900, 41, 35, 0x915900, 41, 36, 0x915900, 41, 37, 0x915900, 41, 38, 0x915900, 41, 39, 0x915900, 41, 40, 0x915900, 41, 41, 0x915900, 41, 42, 0x915900, 41, 43, 0x915900, 41, 44, 0x915900, 41, 45, 0x915900, 41, 46, 0x915900, 41, 47, 0x915900, 41, 48, 0x915900, 41, 49, 0x915900, 41, 50, 0x663e01, 41, 51, 0x663e01, 41, 52, 0x663e01, 41, 53, 0x663e01, 41, 54, 0x663e01, 41, 55, 0x663e01, 41, 63, 0x915900, 41, 64, 0x915900, 41, 65, 0x915900, 41, 66, 0x915900, 41, 67, 0x915900, 41, 68, 0x915900, 41, 69, 0x915900, 41, 70, 0x915900, 41, 71, 0x915900, 41, 72, 0x915900, 41, 73, 0x915900, 41, 74, 0x915900, 41, 75, 0x915900, 41, 76, 0x915900, 41, 77, 0x915900, 41, 78, 0x915900, 41, 79, 0x915900, 41, 80, 0x915900, 41, 81, 0x915900, 41, 82, 0x915900, 41, 83, 0x915900, 41, 84, 0x915900, 41, 85, 0x915900, 41, 86, 0x915900, 41, 87, 0x915900, 41, 88, 0x915900, 41, 89, 0x915900, 41, 90, 0x915900, 41, 91, 0x915900, 41, 92, 0x915900, 41, 93, 0x915900, 41, 94, 0x915900, 41, 95, 0x915900, 41, 96, 0x915900, 41, 97, 0x915900, 41, 98, 0x915900, 41, 99, 0x663e01, 41, 100, 0x663e01, 42, 3, 0x000000, 42, 4, 0x000000, 42, 5, 0x000000, 42, 6, 0x000000, 42, 7, 0x000000, 42, 8, 0x000000, 42, 9, 0x000000, 42, 10, 0x000000, 42, 11, 0x000000, 42, 30, 0x915900, 42, 31, 0x915900, 42, 32, 0x915900, 42, 33, 0x915900, 42, 34, 0x915900, 42, 35, 0x915900, 42, 36, 0x915900, 42, 37, 0x915900, 42, 38, 0x915900, 42, 39, 0x915900, 42, 40, 0x915900, 42, 41, 0x915900, 42, 42, 0x915900, 42, 43, 0x915900, 42, 44, 0x915900, 42, 45, 0x915900, 42, 46, 0x915900, 42, 47, 0x915900, 42, 48, 0x915900, 42, 49, 0x915900, 42, 50, 0x915900, 42, 51, 0x915900, 42, 52, 0x663e01, 42, 53, 0x663e01, 42, 54, 0x663e01, 42, 55, 0x663e01, 42, 63, 0x915900, 42, 64, 0x915900, 42, 65, 0x915900, 42, 66, 0x915900, 42, 67, 0x915900, 42, 68, 0x915900, 42, 69, 0x915900, 42, 70, 0x915900, 42, 71, 0x915900, 42, 72, 0x915900, 42, 73, 0x915900, 42, 74, 0x915900, 42, 75, 0x915900, 42, 76, 0x915900, 42, 77, 0x915900, 42, 78, 0x915900, 42, 79, 0x915900, 42, 80, 0x915900, 42, 81, 0x915900, 42, 82, 0x915900, 42, 83, 0x915900, 42, 84, 0x915900, 42, 85, 0x915900, 42, 86, 0x915900, 42, 87, 0x915900, 42, 88, 0x915900, 42, 89, 0x915900, 42, 90, 0x915900, 42, 91, 0x915900, 42, 92, 0x915900, 42, 93, 0x915900, 42, 94, 0x915900, 42, 95, 0x915900, 42, 96, 0x915900, 42, 97, 0x915900, 42, 98, 0x915900, 42, 99, 0x663e01, 42, 100, 0x663e01, 43, 3, 0x000000, 43, 4, 0x000000, 43, 5, 0x000000, 43, 6, 0x000000, 43, 7, 0x000000, 43, 8, 0x000000, 43, 9, 0x000000, 43, 10, 0x000000, 43, 11, 0x000000, 43, 14, 0x000000, 43, 15, 0x000000, 43, 16, 0x000000, 43, 17, 0x000000, 43, 18, 0x000000, 43, 19, 0x000000, 43, 20, 0x000000, 43, 21, 0x000000, 43, 22, 0x000000, 43, 33, 0x915900, 43, 34, 0x915900, 43, 35, 0x915900, 43, 36, 0x915900, 43, 37, 0x915900, 43, 38, 0x915900, 43, 39, 0x915900, 43, 40, 0x915900, 43, 41, 0x915900, 43, 42, 0x915900, 43, 43, 0x915900, 43, 44, 0x915900, 43, 45, 0x915900, 43, 46, 0x915900, 43, 47, 0x915900, 43, 48, 0x915900, 43, 49, 0x915900, 43, 50, 0x915900, 43, 51, 0x915900, 43, 52, 0x915900, 43, 53, 0x915900, 43, 54, 0x915900, 43, 55, 0x915900, 43, 64, 0x915900, 43, 65, 0x915900, 43, 66, 0x663e01, 43, 67, 0x663e01, 43, 68, 0x663e01, 43, 69, 0x915900, 43, 70, 0x915900, 43, 71, 0x915900, 43, 72, 0x915900, 43, 73, 0x915900, 43, 74, 0x915900, 43, 75, 0x915900, 43, 76, 0x915900, 43, 77, 0x915900, 43, 78, 0x915900, 43, 79, 0x915900, 43, 80, 0x915900, 43, 81, 0x915900, 43, 82, 0x915900, 43, 83, 0x915900, 43, 84, 0x915900, 43, 85, 0x915900, 43, 86, 0x915900, 43, 87, 0x915900, 43, 88, 0x915900, 43, 89, 0x915900, 43, 90, 0x915900, 43, 91, 0x915900, 43, 92, 0x915900, 43, 93, 0x915900, 43, 94, 0x915900, 43, 95, 0x915900, 43, 96, 0x915900, 43, 97, 0x915900, 43, 98, 0x915900, 43, 99, 0x663e01, 43, 100, 0x663e01, 44, 10, 0x000000, 44, 11, 0x000000, 44, 14, 0x000000, 44, 15, 0x000000, 44, 16, 0x000000, 44, 17, 0x000000, 44, 18, 0x000000, 44, 19, 0x000000, 44, 20, 0x000000, 44, 21, 0x000000, 44, 22, 0x000000, 44, 35, 0x915900, 44, 36, 0x915900, 44, 37, 0x915900, 44, 38, 0x915900, 44, 39, 0x915900, 44, 40, 0x915900, 44, 41, 0x915900, 44, 42, 0x915900, 44, 43, 0x915900, 44, 44, 0x915900, 44, 45, 0x915900, 44, 46, 0x915900, 44, 47, 0x915900, 44, 48, 0x915900, 44, 49, 0x915900, 44, 50, 0x915900, 44, 51, 0x915900, 44, 52, 0x915900, 44, 53, 0x915900, 44, 54, 0x915900, 44, 55, 0x915900, 44, 66, 0x663e01, 44, 67, 0x663e01, 44, 68, 0x663e01, 44, 69, 0x663e01, 44, 70, 0x663e01, 44, 71, 0x663e01, 44, 72, 0x915900, 44, 73, 0x915900, 44, 74, 0x915900, 44, 75, 0x915900, 44, 76, 0x915900, 44, 77, 0x915900, 44, 78, 0x915900, 44, 79, 0x915900, 44, 80, 0x663e01, 44, 81, 0x915900, 44, 82, 0x915900, 44, 83, 0x915900, 44, 84, 0x915900, 44, 85, 0x915900, 44, 86, 0x915900, 44, 87, 0x915900, 44, 88, 0x915900, 44, 89, 0x915900, 44, 90, 0x915900, 44, 91, 0x915900, 44, 92, 0x915900, 44, 93, 0x915900, 44, 94, 0x915900, 44, 95, 0x915900, 44, 96, 0x915900, 44, 97, 0x915900, 44, 98, 0x915900, 44, 99, 0x663e01, 44, 100, 0x663e01, 45, 10, 0x000000, 45, 11, 0x000000, 45, 14, 0x000000, 45, 15, 0x000000, 45, 18, 0x000000, 45, 19, 0x000000, 45, 35, 0x915900, 45, 36, 0x915900, 45, 37, 0x915900, 45, 38, 0x915900, 45, 39, 0x915900, 45, 40, 0x915900, 45, 41, 0x915900, 45, 42, 0x915900, 45, 43, 0x915900, 45, 44, 0x915900, 45, 45, 0x915900, 45, 46, 0x915900, 45, 47, 0x915900, 45, 48, 0x915900, 45, 49, 0x915900, 45, 50, 0x915900, 45, 51, 0x915900, 45, 52, 0x915900, 45, 53, 0x663e01, 45, 54, 0x663e01, 45, 55, 0x663e01, 45, 67, 0x663e01, 45, 68, 0x663e01, 45, 69, 0x663e01, 45, 70, 0x663e01, 45, 71, 0x663e01, 45, 72, 0x663e01, 45, 73, 0x663e01, 45, 74, 0x663e01, 45, 75, 0x663e01, 45, 76, 0x663e01, 45, 77, 0x663e01, 45, 78, 0x663e01, 45, 79, 0x915900, 45, 80, 0x663e01, 45, 81, 0x915900, 45, 82, 0x915900, 45, 83, 0x915900, 45, 84, 0x915900, 45, 85, 0x915900, 45, 86, 0x915900, 45, 87, 0x915900, 45, 88, 0x915900, 45, 89, 0x915900, 45, 90, 0x915900, 45, 91, 0x915900, 45, 92, 0x915900, 45, 93, 0x915900, 45, 94, 0x915900, 45, 95, 0x915900, 45, 96, 0x915900, 45, 97, 0x915900, 45, 98, 0x663e01, 45, 99, 0x663e01, 45, 100, 0x663e01, 46, 10, 0x000000, 46, 11, 0x000000, 46, 14, 0x000000, 46, 15, 0x000000, 46, 18, 0x000000, 46, 19, 0x000000, 46, 35, 0x915900, 46, 36, 0x915900, 46, 37, 0x915900, 46, 38, 0x915900, 46, 39, 0x915900, 46, 40, 0x915900, 46, 41, 0x915900, 46, 42, 0x915900, 46, 43, 0x915900, 46, 44, 0x915900, 46, 45, 0x915900, 46, 46, 0x915900, 46, 47, 0x915900, 46, 48, 0x915900, 46, 49, 0x915900, 46, 50, 0x915900, 46, 51, 0x915900, 46, 52, 0x663e01, 46, 53, 0x663e01, 46, 54, 0x663e01, 46, 55, 0x663e01, 46, 70, 0x663e01, 46, 71, 0x663e01, 46, 72, 0x663e01, 46, 73, 0x663e01, 46, 74, 0x663e01, 46, 75, 0x663e01, 46, 76, 0x663e01, 46, 77, 0x663e01, 46, 78, 0x663e01, 46, 79, 0x915900, 46, 80, 0x663e01, 46, 81, 0x915900, 46, 82, 0x915900, 46, 83, 0x915900, 46, 84, 0x915900, 46, 85, 0x915900, 46, 86, 0x915900, 46, 87, 0x915900, 46, 88, 0x915900, 46, 89, 0x915900, 46, 90, 0x915900, 46, 91, 0x915900, 46, 92, 0x915900, 46, 93, 0x915900, 46, 94, 0x915900, 46, 95, 0x915900, 46, 96, 0x915900, 46, 97, 0x663e01, 46, 98, 0x663e01, 46, 99, 0x663e01, 46, 100, 0x663e01, 47, 10, 0x000000, 47, 11, 0x000000, 47, 14, 0x000000, 47, 15, 0x000000, 47, 18, 0x000000, 47, 19, 0x000000, 47, 37, 0x915900, 47, 38, 0x915900, 47, 39, 0x915900, 47, 40, 0x915900, 47, 41, 0x915900, 47, 42, 0x915900, 47, 43, 0x915900, 47, 44, 0x915900, 47, 45, 0x915900, 47, 46, 0x915900, 47, 47, 0x915900, 47, 48, 0x915900, 47, 49, 0x915900, 47, 50, 0x915900, 47, 51, 0x915900, 47, 52, 0x663e01, 47, 53, 0x663e01, 47, 54, 0x663e01, 47, 55, 0x663e01, 47, 80, 0x663e01, 47, 81, 0x663e01, 47, 82, 0x915900, 47, 83, 0x915900, 47, 84, 0x915900, 47, 85, 0x915900, 47, 86, 0x915900, 47, 87, 0x915900, 47, 88, 0x915900, 47, 89, 0x915900, 47, 90, 0x915900, 47, 91, 0x915900, 47, 92, 0x915900, 47, 93, 0x915900, 47, 94, 0x915900, 47, 95, 0x915900, 47, 96, 0x915900, 47, 97, 0x663e01, 47, 98, 0x663e01, 47, 99, 0x663e01, 48, 10, 0x000000, 48, 11, 0x000000, 48, 14, 0x000000, 48, 15, 0x000000, 48, 18, 0x000000, 48, 19, 0x000000, 48, 39, 0x915900, 48, 40, 0x915900, 48, 41, 0x915900, 48, 42, 0x915900, 48, 43, 0x915900, 48, 44, 0x915900, 48, 45, 0x915900, 48, 46, 0x915900, 48, 47, 0x915900, 48, 48, 0x915900, 48, 49, 0x915900, 48, 50, 0x915900, 48, 51, 0x915900, 48, 52, 0x663e01, 48, 53, 0x663e01, 48, 80, 0x663e01, 48, 81, 0x663e01, 48, 82, 0x915900, 48, 83, 0x915900, 48, 84, 0x915900, 48, 85, 0x915900, 48, 86, 0x915900, 48, 87, 0x915900, 48, 88, 0x915900, 48, 89, 0x915900, 48, 90, 0x663e01, 48, 91, 0x663e01, 48, 92, 0x663e01, 48, 93, 0x663e01, 48, 94, 0x663e01, 48, 95, 0x663e01, 49, 16, 0x000000, 49, 17, 0x000000, 49, 80, 0x663e01, 49, 81, 0x663e01, 49, 82, 0x663e01, 49, 83, 0x663e01, 49, 84, 0x663e01, 49, 85, 0x663e01, 49, 86, 0x663e01, 49, 87, 0x663e01, 49, 88, 0x663e01, 49, 89, 0x663e01, 49, 90, 0x663e01, 49, 91, 0x663e01, 49, 92, 0x663e01, 49, 93, 0x663e01, 49, 94, 0x663e01, 49, 95, 0x663e01, 50, 16, 0x000000, 50, 17, 0x000000, 50, 81, 0x663e01, 50, 82, 0x663e01, 50, 83, 0x663e01, 50, 84, 0x663e01, 50, 85, 0x663e01, 50, 86, 0x663e01, 50, 87, 0x663e01, 50, 88, 0x663e01, 50, 89, 0x663e01, 50, 90, 0x663e01, 50, 91, 0x663e01, 51, 3, 0x000000, 51, 4, 0x000000, 51, 5, 0x000000, 51, 6, 0x000000, 51, 7, 0x000000, 51, 8, 0x000000, 51, 9, 0x000000, 51, 10, 0x000000, 51, 11, 0x000000, 52, 3, 0x000000, 52, 4, 0x000000, 52, 7, 0x000000, 52, 10, 0x000000, 52, 11, 0x000000, 53, 3, 0x000000, 53, 4, 0x000000, 53, 7, 0x000000, 53, 10, 0x000000, 53, 11, 0x000000, 54, 3, 0x000000, 54, 4, 0x000000, 54, 7, 0x000000, 54, 10, 0x000000, 54, 11, 0x000000, 55, 3, 0x000000, 55, 4, 0x000000, 55, 7, 0x000000, 55, 10, 0x000000, 55, 11, 0x000000, 56, 3, 0x000000, 56, 4, 0x000000, 56, 10, 0x000000, 56, 11, 0x000000, 57, 3, 0x000000, 57, 4, 0x000000, 57, 10, 0x000000, 57, 11, 0x000000
START_MENU_LEN: .word 7959

START: .word 12, 108, 0xd9d9d9, 12, 109, 0xd9d9d9, 12, 110, 0xd9d9d9, 12, 111, 0xd9d9d9, 12, 112, 0xd9d9d9, 12, 113, 0xd9d9d9, 12, 114, 0xd9d9d9, 13, 107, 0xd9d9d9, 13, 108, 0xd9d9d9, 13, 109, 0xd9d9d9, 13, 110, 0xd9d9d9, 13, 111, 0xd9d9d9, 13, 112, 0xd9d9d9, 13, 113, 0xd9d9d9, 13, 114, 0xd9d9d9, 13, 115, 0xd9d9d9, 14, 107, 0xd9d9d9, 14, 108, 0xd9d9d9, 14, 109, 0xd9d9d9, 14, 110, 0xd9d9d9, 14, 111, 0xd9d9d9, 14, 112, 0xd9d9d9, 14, 113, 0xd9d9d9, 14, 114, 0xd9d9d9, 14, 115, 0xd9d9d9, 15, 107, 0xd9d9d9, 15, 108, 0xd9d9d9, 15, 109, 0xd9d9d9, 15, 110, 0xd9d9d9, 15, 111, 0xd9d9d9, 15, 112, 0xd9d9d9, 15, 113, 0xd9d9d9, 15, 114, 0xd9d9d9, 15, 115, 0xd9d9d9, 16, 107, 0xd9d9d9, 16, 108, 0xd9d9d9, 16, 109, 0xd9d9d9, 16, 110, 0xd9d9d9, 16, 111, 0xd9d9d9, 16, 112, 0xd9d9d9, 16, 113, 0xd9d9d9, 16, 114, 0xd9d9d9, 16, 115, 0xd9d9d9, 17, 107, 0xd9d9d9, 17, 108, 0xd9d9d9, 17, 109, 0xd9d9d9, 17, 110, 0xd9d9d9, 17, 111, 0xd9d9d9, 17, 112, 0xd9d9d9, 17, 113, 0xd9d9d9, 17, 114, 0xd9d9d9, 17, 115, 0xd9d9d9, 18, 107, 0xd9d9d9, 18, 108, 0xd9d9d9, 18, 109, 0xd9d9d9, 18, 110, 0xd9d9d9, 18, 111, 0xd9d9d9, 18, 112, 0xd9d9d9, 18, 113, 0xd9d9d9, 18, 114, 0xd9d9d9, 18, 115, 0xd9d9d9, 19, 107, 0xd9d9d9, 19, 108, 0xd9d9d9, 19, 109, 0xd9d9d9, 19, 110, 0x000000, 19, 111, 0xd9d9d9, 19, 112, 0xd9d9d9, 19, 113, 0x000000, 19, 114, 0xd9d9d9, 19, 115, 0xd9d9d9, 20, 107, 0xd9d9d9, 20, 108, 0xd9d9d9, 20, 109, 0x000000, 20, 110, 0xd9d9d9, 20, 111, 0x000000, 20, 112, 0xd9d9d9, 20, 113, 0x000000, 20, 114, 0xd9d9d9, 20, 115, 0xd9d9d9, 21, 107, 0xd9d9d9, 21, 108, 0xd9d9d9, 21, 109, 0x000000, 21, 110, 0xd9d9d9, 21, 111, 0x000000, 21, 112, 0xd9d9d9, 21, 113, 0x000000, 21, 114, 0xd9d9d9, 21, 115, 0xd9d9d9, 22, 107, 0xd9d9d9, 22, 108, 0xd9d9d9, 22, 109, 0x000000, 22, 110, 0xd9d9d9, 22, 111, 0xd9d9d9, 22, 112, 0x000000, 22, 113, 0xd9d9d9, 22, 114, 0xd9d9d9, 22, 115, 0xd9d9d9, 23, 107, 0xd9d9d9, 23, 108, 0xd9d9d9, 23, 109, 0xd9d9d9, 23, 110, 0xd9d9d9, 23, 111, 0xd9d9d9, 23, 112, 0xd9d9d9, 23, 113, 0xd9d9d9, 23, 114, 0xd9d9d9, 23, 115, 0xd9d9d9, 24, 107, 0xd9d9d9, 24, 108, 0xd9d9d9, 24, 109, 0x000000, 24, 110, 0xd9d9d9, 24, 111, 0xd9d9d9, 24, 112, 0xd9d9d9, 24, 113, 0xd9d9d9, 24, 114, 0xd9d9d9, 24, 115, 0xd9d9d9, 25, 107, 0xd9d9d9, 25, 108, 0xd9d9d9, 25, 109, 0x000000, 25, 110, 0xd9d9d9, 25, 111, 0xd9d9d9, 25, 112, 0xd9d9d9, 25, 113, 0xd9d9d9, 25, 114, 0xd9d9d9, 25, 115, 0xd9d9d9, 26, 107, 0xd9d9d9, 26, 108, 0xd9d9d9, 26, 109, 0x000000, 26, 110, 0x000000, 26, 111, 0x000000, 26, 112, 0x000000, 26, 113, 0x000000, 26, 114, 0xd9d9d9, 26, 115, 0xd9d9d9, 27, 107, 0xd9d9d9, 27, 108, 0xd9d9d9, 27, 109, 0x000000, 27, 110, 0xd9d9d9, 27, 111, 0xd9d9d9, 27, 112, 0xd9d9d9, 27, 113, 0xd9d9d9, 27, 114, 0xd9d9d9, 27, 115, 0xd9d9d9, 28, 107, 0xd9d9d9, 28, 108, 0xd9d9d9, 28, 109, 0x000000, 28, 110, 0xd9d9d9, 28, 111, 0xd9d9d9, 28, 112, 0xd9d9d9, 28, 113, 0xd9d9d9, 28, 114, 0xd9d9d9, 28, 115, 0xd9d9d9, 29, 107, 0xd9d9d9, 29, 108, 0xd9d9d9, 29, 109, 0xd9d9d9, 29, 110, 0xd9d9d9, 29, 111, 0xd9d9d9, 29, 112, 0xd9d9d9, 29, 113, 0xd9d9d9, 29, 114, 0xd9d9d9, 29, 115, 0xd9d9d9, 30, 107, 0xd9d9d9, 30, 108, 0xd9d9d9, 30, 109, 0xd9d9d9, 30, 110, 0x000000, 30, 111, 0x000000, 30, 112, 0x000000, 30, 113, 0x000000, 30, 114, 0xd9d9d9, 30, 115, 0xd9d9d9, 31, 107, 0xd9d9d9, 31, 108, 0xd9d9d9, 31, 109, 0x000000, 31, 110, 0xd9d9d9, 31, 111, 0x000000, 31, 112, 0xd9d9d9, 31, 113, 0xd9d9d9, 31, 114, 0xd9d9d9, 31, 115, 0xd9d9d9, 32, 107, 0xd9d9d9, 32, 108, 0xd9d9d9, 32, 109, 0x000000, 32, 110, 0xd9d9d9, 32, 111, 0x000000, 32, 112, 0xd9d9d9, 32, 113, 0xd9d9d9, 32, 114, 0xd9d9d9, 32, 115, 0xd9d9d9, 33, 107, 0xd9d9d9, 33, 108, 0xd9d9d9, 33, 109, 0xd9d9d9, 33, 110, 0x000000, 33, 111, 0x000000, 33, 112, 0x000000, 33, 113, 0x000000, 33, 114, 0xd9d9d9, 33, 115, 0xd9d9d9, 34, 107, 0xd9d9d9, 34, 108, 0xd9d9d9, 34, 109, 0xd9d9d9, 34, 110, 0xd9d9d9, 34, 111, 0xd9d9d9, 34, 112, 0xd9d9d9, 34, 113, 0xd9d9d9, 34, 114, 0xd9d9d9, 34, 115, 0xd9d9d9, 35, 107, 0xd9d9d9, 35, 108, 0xd9d9d9, 35, 109, 0x000000, 35, 110, 0x000000, 35, 111, 0x000000, 35, 112, 0x000000, 35, 113, 0x000000, 35, 114, 0xd9d9d9, 35, 115, 0xd9d9d9, 36, 107, 0xd9d9d9, 36, 108, 0xd9d9d9, 36, 109, 0x000000, 36, 110, 0xd9d9d9, 36, 111, 0x000000, 36, 112, 0xd9d9d9, 36, 113, 0xd9d9d9, 36, 114, 0xd9d9d9, 36, 115, 0xd9d9d9, 37, 107, 0xd9d9d9, 37, 108, 0xd9d9d9, 37, 109, 0x000000, 37, 110, 0xd9d9d9, 37, 111, 0x000000, 37, 112, 0x000000, 37, 113, 0xd9d9d9, 37, 114, 0xd9d9d9, 37, 115, 0xd9d9d9, 38, 107, 0xd9d9d9, 38, 108, 0xd9d9d9, 38, 109, 0xd9d9d9, 38, 110, 0x000000, 38, 111, 0xd9d9d9, 38, 112, 0xd9d9d9, 38, 113, 0x000000, 38, 114, 0xd9d9d9, 38, 115, 0xd9d9d9, 39, 107, 0xd9d9d9, 39, 108, 0xd9d9d9, 39, 109, 0xd9d9d9, 39, 110, 0xd9d9d9, 39, 111, 0xd9d9d9, 39, 112, 0xd9d9d9, 39, 113, 0xd9d9d9, 39, 114, 0xd9d9d9, 39, 115, 0xd9d9d9, 40, 107, 0xd9d9d9, 40, 108, 0xd9d9d9, 40, 109, 0x000000, 40, 110, 0xd9d9d9, 40, 111, 0xd9d9d9, 40, 112, 0xd9d9d9, 40, 113, 0xd9d9d9, 40, 114, 0xd9d9d9, 40, 115, 0xd9d9d9, 41, 107, 0xd9d9d9, 41, 108, 0xd9d9d9, 41, 109, 0x000000, 41, 110, 0xd9d9d9, 41, 111, 0xd9d9d9, 41, 112, 0xd9d9d9, 41, 113, 0xd9d9d9, 41, 114, 0xd9d9d9, 41, 115, 0xd9d9d9, 42, 107, 0xd9d9d9, 42, 108, 0xd9d9d9, 42, 109, 0x000000, 42, 110, 0x000000, 42, 111, 0x000000, 42, 112, 0x000000, 42, 113, 0x000000, 42, 114, 0xd9d9d9, 42, 115, 0xd9d9d9, 43, 107, 0xd9d9d9, 43, 108, 0xd9d9d9, 43, 109, 0x000000, 43, 110, 0xd9d9d9, 43, 111, 0xd9d9d9, 43, 112, 0xd9d9d9, 43, 113, 0xd9d9d9, 43, 114, 0xd9d9d9, 43, 115, 0xd9d9d9, 44, 107, 0xd9d9d9, 44, 108, 0xd9d9d9, 44, 109, 0x000000, 44, 110, 0xd9d9d9, 44, 111, 0xd9d9d9, 44, 112, 0xd9d9d9, 44, 113, 0xd9d9d9, 44, 114, 0xd9d9d9, 44, 115, 0xd9d9d9, 45, 107, 0xd9d9d9, 45, 108, 0xd9d9d9, 45, 109, 0xd9d9d9, 45, 110, 0xd9d9d9, 45, 111, 0xd9d9d9, 45, 112, 0xd9d9d9, 45, 113, 0xd9d9d9, 45, 114, 0xd9d9d9, 45, 115, 0xd9d9d9, 46, 107, 0xd9d9d9, 46, 108, 0xd9d9d9, 46, 109, 0xd9d9d9, 46, 110, 0xd9d9d9, 46, 111, 0xd9d9d9, 46, 112, 0xd9d9d9, 46, 113, 0xd9d9d9, 46, 114, 0xd9d9d9, 46, 115, 0xd9d9d9, 47, 107, 0xd9d9d9, 47, 108, 0xd9d9d9, 47, 109, 0xd9d9d9, 47, 110, 0xd9d9d9, 47, 111, 0xd9d9d9, 47, 112, 0xd9d9d9, 47, 113, 0xd9d9d9, 47, 114, 0xd9d9d9, 47, 115, 0xd9d9d9, 48, 107, 0xd9d9d9, 48, 108, 0xd9d9d9, 48, 109, 0xd9d9d9, 48, 110, 0xd9d9d9, 48, 111, 0xd9d9d9, 48, 112, 0xd9d9d9, 48, 113, 0xd9d9d9, 48, 114, 0xd9d9d9, 48, 115, 0xd9d9d9, 49, 107, 0xd9d9d9, 49, 108, 0xd9d9d9, 49, 109, 0xd9d9d9, 49, 110, 0xd9d9d9, 49, 111, 0xd9d9d9, 49, 112, 0xd9d9d9, 49, 113, 0xd9d9d9, 49, 114, 0xd9d9d9, 49, 115, 0xd9d9d9, 50, 108, 0xd9d9d9, 50, 109, 0xd9d9d9, 50, 110, 0xd9d9d9, 50, 111, 0xd9d9d9, 50, 112, 0xd9d9d9, 50, 113, 0xd9d9d9, 50, 114, 0xd9d9d9
START_LEN: .word 1041
START_SEL: .word 12, 108, 0xd9d9d9, 12, 109, 0xd9d9d9, 12, 110, 0xd9d9d9, 12, 111, 0xd9d9d9, 12, 112, 0xd9d9d9, 12, 113, 0xd9d9d9, 12, 114, 0xd9d9d9, 13, 107, 0xd9d9d9, 13, 108, 0xd9d9d9, 13, 109, 0xd9d9d9, 13, 110, 0xd9d9d9, 13, 111, 0xd9d9d9, 13, 112, 0xd9d9d9, 13, 113, 0xd9d9d9, 13, 114, 0xd9d9d9, 13, 115, 0xd9d9d9, 14, 107, 0xd9d9d9, 14, 108, 0xd9d9d9, 14, 109, 0xd9d9d9, 14, 110, 0xd9d9d9, 14, 111, 0xd9d9d9, 14, 112, 0xd9d9d9, 14, 113, 0xd9d9d9, 14, 114, 0xd9d9d9, 14, 115, 0xd9d9d9, 15, 107, 0xd9d9d9, 15, 108, 0xd9d9d9, 15, 109, 0xd9d9d9, 15, 110, 0xd9d9d9, 15, 111, 0xd9d9d9, 15, 112, 0xd9d9d9, 15, 113, 0xd9d9d9, 15, 114, 0xd9d9d9, 15, 115, 0xd9d9d9, 16, 107, 0xd9d9d9, 16, 108, 0xd9d9d9, 16, 109, 0xd9d9d9, 16, 110, 0xd9d9d9, 16, 111, 0xd9d9d9, 16, 112, 0xd9d9d9, 16, 113, 0xd9d9d9, 16, 114, 0xd9d9d9, 16, 115, 0xd9d9d9, 17, 107, 0xd9d9d9, 17, 108, 0xd9d9d9, 17, 109, 0xd9d9d9, 17, 110, 0xd9d9d9, 17, 111, 0xd9d9d9, 17, 112, 0xd9d9d9, 17, 113, 0xd9d9d9, 17, 114, 0xd9d9d9, 17, 115, 0xd9d9d9, 18, 107, 0xd9d9d9, 18, 108, 0xd9d9d9, 18, 109, 0xd9d9d9, 18, 110, 0xd9d9d9, 18, 111, 0xd9d9d9, 18, 112, 0xd9d9d9, 18, 113, 0xd9d9d9, 18, 114, 0xd9d9d9, 18, 115, 0xd9d9d9, 19, 107, 0xd9d9d9, 19, 108, 0xd9d9d9, 19, 109, 0xd9d9d9, 19, 110, 0x000000, 19, 111, 0xd9d9d9, 19, 112, 0xd9d9d9, 19, 113, 0x000000, 19, 114, 0xd9d9d9, 19, 115, 0xd9d9d9, 20, 107, 0xd9d9d9, 20, 108, 0xd9d9d9, 20, 109, 0x000000, 20, 110, 0xd9d9d9, 20, 111, 0x000000, 20, 112, 0xd9d9d9, 20, 113, 0x000000, 20, 114, 0xd9d9d9, 20, 115, 0xd9d9d9, 21, 107, 0xd9d9d9, 21, 108, 0xd9d9d9, 21, 109, 0x000000, 21, 110, 0xd9d9d9, 21, 111, 0x000000, 21, 112, 0xd9d9d9, 21, 113, 0x000000, 21, 114, 0xd9d9d9, 21, 115, 0xd9d9d9, 22, 107, 0xd9d9d9, 22, 108, 0xd9d9d9, 22, 109, 0x000000, 22, 110, 0xd9d9d9, 22, 111, 0xd9d9d9, 22, 112, 0x000000, 22, 113, 0xd9d9d9, 22, 114, 0xd9d9d9, 22, 115, 0xd9d9d9, 23, 107, 0xd9d9d9, 23, 108, 0xd9d9d9, 23, 109, 0xd9d9d9, 23, 110, 0xd9d9d9, 23, 111, 0xd9d9d9, 23, 112, 0xd9d9d9, 23, 113, 0xd9d9d9, 23, 114, 0xd9d9d9, 23, 115, 0xd9d9d9, 24, 107, 0xd9d9d9, 24, 108, 0xd9d9d9, 24, 109, 0x000000, 24, 110, 0xd9d9d9, 24, 111, 0xd9d9d9, 24, 112, 0xd9d9d9, 24, 113, 0xd9d9d9, 24, 114, 0xd9d9d9, 24, 115, 0xd9d9d9, 25, 107, 0xd9d9d9, 25, 108, 0xd9d9d9, 25, 109, 0x000000, 25, 110, 0xd9d9d9, 25, 111, 0xd9d9d9, 25, 112, 0xd9d9d9, 25, 113, 0xd9d9d9, 25, 114, 0xd9d9d9, 25, 115, 0xd9d9d9, 26, 107, 0xd9d9d9, 26, 108, 0xd9d9d9, 26, 109, 0x000000, 26, 110, 0x000000, 26, 111, 0x000000, 26, 112, 0x000000, 26, 113, 0x000000, 26, 114, 0xd9d9d9, 26, 115, 0xd9d9d9, 27, 107, 0xd9d9d9, 27, 108, 0xd9d9d9, 27, 109, 0x000000, 27, 110, 0xd9d9d9, 27, 111, 0xd9d9d9, 27, 112, 0xd9d9d9, 27, 113, 0xd9d9d9, 27, 114, 0xd9d9d9, 27, 115, 0xd9d9d9, 28, 107, 0xd9d9d9, 28, 108, 0xd9d9d9, 28, 109, 0x000000, 28, 110, 0xd9d9d9, 28, 111, 0xd9d9d9, 28, 112, 0xd9d9d9, 28, 113, 0xd9d9d9, 28, 114, 0xd9d9d9, 28, 115, 0xd9d9d9, 29, 107, 0xd9d9d9, 29, 108, 0xd9d9d9, 29, 109, 0xd9d9d9, 29, 110, 0xd9d9d9, 29, 111, 0xd9d9d9, 29, 112, 0xd9d9d9, 29, 113, 0xd9d9d9, 29, 114, 0xd9d9d9, 29, 115, 0xd9d9d9, 30, 107, 0xd9d9d9, 30, 108, 0xd9d9d9, 30, 109, 0xd9d9d9, 30, 110, 0x000000, 30, 111, 0x000000, 30, 112, 0x000000, 30, 113, 0x000000, 30, 114, 0xd9d9d9, 30, 115, 0xd9d9d9, 31, 107, 0xd9d9d9, 31, 108, 0xd9d9d9, 31, 109, 0x000000, 31, 110, 0xd9d9d9, 31, 111, 0x000000, 31, 112, 0xd9d9d9, 31, 113, 0xd9d9d9, 31, 114, 0xd9d9d9, 31, 115, 0xd9d9d9, 32, 107, 0xd9d9d9, 32, 108, 0xd9d9d9, 32, 109, 0x000000, 32, 110, 0xd9d9d9, 32, 111, 0x000000, 32, 112, 0xd9d9d9, 32, 113, 0xd9d9d9, 32, 114, 0xd9d9d9, 32, 115, 0xd9d9d9, 33, 107, 0xd9d9d9, 33, 108, 0xd9d9d9, 33, 109, 0xd9d9d9, 33, 110, 0x000000, 33, 111, 0x000000, 33, 112, 0x000000, 33, 113, 0x000000, 33, 114, 0xd9d9d9, 33, 115, 0xd9d9d9, 34, 107, 0xd9d9d9, 34, 108, 0xd9d9d9, 34, 109, 0xd9d9d9, 34, 110, 0xd9d9d9, 34, 111, 0xd9d9d9, 34, 112, 0xd9d9d9, 34, 113, 0xd9d9d9, 34, 114, 0xd9d9d9, 34, 115, 0xd9d9d9, 35, 107, 0xd9d9d9, 35, 108, 0xd9d9d9, 35, 109, 0x000000, 35, 110, 0x000000, 35, 111, 0x000000, 35, 112, 0x000000, 35, 113, 0x000000, 35, 114, 0xd9d9d9, 35, 115, 0xd9d9d9, 36, 107, 0xd9d9d9, 36, 108, 0xd9d9d9, 36, 109, 0x000000, 36, 110, 0xd9d9d9, 36, 111, 0x000000, 36, 112, 0xd9d9d9, 36, 113, 0xd9d9d9, 36, 114, 0xd9d9d9, 36, 115, 0xd9d9d9, 37, 107, 0xd9d9d9, 37, 108, 0xd9d9d9, 37, 109, 0x000000, 37, 110, 0xd9d9d9, 37, 111, 0x000000, 37, 112, 0x000000, 37, 113, 0xd9d9d9, 37, 114, 0xd9d9d9, 37, 115, 0xd9d9d9, 38, 107, 0xd9d9d9, 38, 108, 0xd9d9d9, 38, 109, 0xd9d9d9, 38, 110, 0x000000, 38, 111, 0xd9d9d9, 38, 112, 0xd9d9d9, 38, 113, 0x000000, 38, 114, 0xd9d9d9, 38, 115, 0xd9d9d9, 39, 107, 0xd9d9d9, 39, 108, 0xd9d9d9, 39, 109, 0xd9d9d9, 39, 110, 0xd9d9d9, 39, 111, 0xd9d9d9, 39, 112, 0xd9d9d9, 39, 113, 0xd9d9d9, 39, 114, 0xd9d9d9, 39, 115, 0xd9d9d9, 40, 107, 0xd9d9d9, 40, 108, 0xd9d9d9, 40, 109, 0x000000, 40, 110, 0xd9d9d9, 40, 111, 0xd9d9d9, 40, 112, 0xd9d9d9, 40, 113, 0xd9d9d9, 40, 114, 0xd9d9d9, 40, 115, 0xd9d9d9, 41, 107, 0xd9d9d9, 41, 108, 0xd9d9d9, 41, 109, 0x000000, 41, 110, 0xd9d9d9, 41, 111, 0xd9d9d9, 41, 112, 0xd9d9d9, 41, 113, 0xd9d9d9, 41, 114, 0xd9d9d9, 41, 115, 0xd9d9d9, 42, 107, 0xd9d9d9, 42, 108, 0xd9d9d9, 42, 109, 0x000000, 42, 110, 0x000000, 42, 111, 0x000000, 42, 112, 0x000000, 42, 113, 0x000000, 42, 114, 0xd9d9d9, 42, 115, 0xd9d9d9, 43, 107, 0xd9d9d9, 43, 108, 0xd9d9d9, 43, 109, 0x000000, 43, 110, 0xd9d9d9, 43, 111, 0xd9d9d9, 43, 112, 0xd9d9d9, 43, 113, 0xd9d9d9, 43, 114, 0xd9d9d9, 43, 115, 0xd9d9d9, 44, 107, 0xd9d9d9, 44, 108, 0xd9d9d9, 44, 109, 0x000000, 44, 110, 0xd9d9d9, 44, 111, 0xd9d9d9, 44, 112, 0xd9d9d9, 44, 113, 0xd9d9d9, 44, 114, 0xd9d9d9, 44, 115, 0xd9d9d9, 45, 107, 0xd9d9d9, 45, 108, 0xd9d9d9, 45, 109, 0xd9d9d9, 45, 110, 0xd9d9d9, 45, 111, 0xd9d9d9, 45, 112, 0xd9d9d9, 45, 113, 0xd9d9d9, 45, 114, 0xd9d9d9, 45, 115, 0xd9d9d9, 46, 107, 0xd9d9d9, 46, 108, 0xd9d9d9, 46, 109, 0xd9d9d9, 46, 110, 0xd9d9d9, 46, 111, 0xd9d9d9, 46, 112, 0xd9d9d9, 46, 113, 0xd9d9d9, 46, 114, 0xd9d9d9, 46, 115, 0xd9d9d9, 47, 107, 0xd9d9d9, 47, 108, 0xd9d9d9, 47, 109, 0xd9d9d9, 47, 110, 0xd9d9d9, 47, 111, 0xd9d9d9, 47, 112, 0xd9d9d9, 47, 113, 0xd9d9d9, 47, 114, 0xd9d9d9, 47, 115, 0xd9d9d9, 48, 107, 0xd9d9d9, 48, 108, 0xd9d9d9, 48, 109, 0xd9d9d9, 48, 110, 0xd9d9d9, 48, 111, 0xd9d9d9, 48, 112, 0xd9d9d9, 48, 113, 0xd9d9d9, 48, 114, 0xd9d9d9, 48, 115, 0xd9d9d9, 49, 107, 0xd9d9d9, 49, 108, 0xd9d9d9, 49, 109, 0xd9d9d9, 49, 110, 0xd9d9d9, 49, 111, 0xd9d9d9, 49, 112, 0xd9d9d9, 49, 113, 0xd9d9d9, 49, 114, 0xd9d9d9, 49, 115, 0xd9d9d9, 50, 108, 0xd9d9d9, 50, 109, 0xd9d9d9, 50, 110, 0xd9d9d9, 50, 111, 0xd9d9d9, 50, 112, 0xd9d9d9, 50, 113, 0xd9d9d9, 50, 114, 0xd9d9d9, 52, 111, 0xe8b02e, 53, 110, 0xe8b02e, 53, 111, 0xe8b02e, 53, 112, 0xe8b02e, 54, 109, 0xe8b02e, 54, 110, 0xe8b02e, 54, 111, 0xe8b02e, 54, 112, 0xe8b02e, 54, 113, 0xe8b02e, 55, 108, 0xe8b02e, 55, 109, 0xe8b02e, 55, 110, 0xe8b02e, 55, 111, 0xe8b02e, 55, 112, 0xe8b02e, 55, 113, 0xe8b02e, 55, 114, 0xe8b02e, 56, 107, 0xe8b02e, 56, 108, 0xe8b02e, 56, 109, 0xe8b02e, 56, 110, 0xe8b02e, 56, 111, 0xe8b02e, 56, 112, 0xe8b02e, 56, 113, 0xe8b02e, 56, 114, 0xe8b02e, 56, 115, 0xe8b02e, 57, 111, 0xe8b02e, 58, 111, 0xe8b02e, 59, 111, 0xe8b02e, 60, 111, 0xe8b02e, 61, 111, 0xe8b02e
START_SEL_LEN: .word 1131
EXIT: .word 12, 108, 0xd9d9d9, 12, 109, 0xd9d9d9, 12, 110, 0xd9d9d9, 12, 111, 0xd9d9d9, 12, 112, 0xd9d9d9, 12, 113, 0xd9d9d9, 12, 114, 0xd9d9d9, 13, 107, 0xd9d9d9, 13, 108, 0xd9d9d9, 13, 109, 0xd9d9d9, 13, 110, 0xd9d9d9, 13, 111, 0xd9d9d9, 13, 112, 0xd9d9d9, 13, 113, 0xd9d9d9, 13, 114, 0xd9d9d9, 13, 115, 0xd9d9d9, 14, 107, 0xd9d9d9, 14, 108, 0xd9d9d9, 14, 109, 0xd9d9d9, 14, 110, 0xd9d9d9, 14, 111, 0xd9d9d9, 14, 112, 0xd9d9d9, 14, 113, 0xd9d9d9, 14, 114, 0xd9d9d9, 14, 115, 0xd9d9d9, 15, 107, 0xd9d9d9, 15, 108, 0xd9d9d9, 15, 109, 0xd9d9d9, 15, 110, 0xd9d9d9, 15, 111, 0xd9d9d9, 15, 112, 0xd9d9d9, 15, 113, 0xd9d9d9, 15, 114, 0xd9d9d9, 15, 115, 0xd9d9d9, 16, 107, 0xd9d9d9, 16, 108, 0xd9d9d9, 16, 109, 0xd9d9d9, 16, 110, 0xd9d9d9, 16, 111, 0xd9d9d9, 16, 112, 0xd9d9d9, 16, 113, 0xd9d9d9, 16, 114, 0xd9d9d9, 16, 115, 0xd9d9d9, 17, 107, 0xd9d9d9, 17, 108, 0xd9d9d9, 17, 109, 0xd9d9d9, 17, 110, 0xd9d9d9, 17, 111, 0xd9d9d9, 17, 112, 0xd9d9d9, 17, 113, 0xd9d9d9, 17, 114, 0xd9d9d9, 17, 115, 0xd9d9d9, 18, 107, 0xd9d9d9, 18, 108, 0xd9d9d9, 18, 109, 0xd9d9d9, 18, 110, 0xd9d9d9, 18, 111, 0xd9d9d9, 18, 112, 0xd9d9d9, 18, 113, 0xd9d9d9, 18, 114, 0xd9d9d9, 18, 115, 0xd9d9d9, 19, 107, 0xd9d9d9, 19, 108, 0xd9d9d9, 19, 109, 0xd9d9d9, 19, 110, 0xd9d9d9, 19, 111, 0xd9d9d9, 19, 112, 0xd9d9d9, 19, 113, 0xd9d9d9, 19, 114, 0xd9d9d9, 19, 115, 0xd9d9d9, 20, 107, 0xd9d9d9, 20, 108, 0xd9d9d9, 20, 109, 0xd9d9d9, 20, 110, 0xd9d9d9, 20, 111, 0xd9d9d9, 20, 112, 0xd9d9d9, 20, 113, 0xd9d9d9, 20, 114, 0xd9d9d9, 20, 115, 0xd9d9d9, 21, 107, 0xd9d9d9, 21, 108, 0xd9d9d9, 21, 109, 0xd9d9d9, 21, 110, 0xd9d9d9, 21, 111, 0xd9d9d9, 21, 112, 0xd9d9d9, 21, 113, 0xd9d9d9, 21, 114, 0xd9d9d9, 21, 115, 0xd9d9d9, 22, 107, 0xd9d9d9, 22, 108, 0xd9d9d9, 22, 109, 0xd9d9d9, 22, 110, 0xd9d9d9, 22, 111, 0xd9d9d9, 22, 112, 0xd9d9d9, 22, 113, 0xd9d9d9, 22, 114, 0xd9d9d9, 22, 115, 0xd9d9d9, 23, 107, 0xd9d9d9, 23, 108, 0xd9d9d9, 23, 109, 0x000000, 23, 110, 0x000000, 23, 111, 0x000000, 23, 112, 0x000000, 23, 113, 0x000000, 23, 114, 0xd9d9d9, 23, 115, 0xd9d9d9, 24, 107, 0xd9d9d9, 24, 108, 0xd9d9d9, 24, 109, 0x000000, 24, 110, 0xd9d9d9, 24, 111, 0x000000, 24, 112, 0xd9d9d9, 24, 113, 0x000000, 24, 114, 0xd9d9d9, 24, 115, 0xd9d9d9, 25, 107, 0xd9d9d9, 25, 108, 0xd9d9d9, 25, 109, 0x000000, 25, 110, 0xd9d9d9, 25, 111, 0x000000, 25, 112, 0xd9d9d9, 25, 113, 0x000000, 25, 114, 0xd9d9d9, 25, 115, 0xd9d9d9, 26, 107, 0xd9d9d9, 26, 108, 0xd9d9d9, 26, 109, 0x000000, 26, 110, 0xd9d9d9, 26, 111, 0xd9d9d9, 26, 112, 0xd9d9d9, 26, 113, 0x000000, 26, 114, 0xd9d9d9, 26, 115, 0xd9d9d9, 27, 107, 0xd9d9d9, 27, 108, 0xd9d9d9, 27, 109, 0xd9d9d9, 27, 110, 0xd9d9d9, 27, 111, 0xd9d9d9, 27, 112, 0xd9d9d9, 27, 113, 0xd9d9d9, 27, 114, 0xd9d9d9, 27, 115, 0xd9d9d9, 28, 107, 0xd9d9d9, 28, 108, 0xd9d9d9, 28, 109, 0x000000, 28, 110, 0x000000, 28, 111, 0xd9d9d9, 28, 112, 0x000000, 28, 113, 0x000000, 28, 114, 0xd9d9d9, 28, 115, 0xd9d9d9, 29, 107, 0xd9d9d9, 29, 108, 0xd9d9d9, 29, 109, 0xd9d9d9, 29, 110, 0xd9d9d9, 29, 111, 0x000000, 29, 112, 0xd9d9d9, 29, 113, 0xd9d9d9, 29, 114, 0xd9d9d9, 29, 115, 0xd9d9d9, 30, 107, 0xd9d9d9, 30, 108, 0xd9d9d9, 30, 109, 0xd9d9d9, 30, 110, 0xd9d9d9, 30, 111, 0x000000, 30, 112, 0xd9d9d9, 30, 113, 0xd9d9d9, 30, 114, 0xd9d9d9, 30, 115, 0xd9d9d9, 31, 107, 0xd9d9d9, 31, 108, 0xd9d9d9, 31, 109, 0x000000, 31, 110, 0x000000, 31, 111, 0xd9d9d9, 31, 112, 0x000000, 31, 113, 0x000000, 31, 114, 0xd9d9d9, 31, 115, 0xd9d9d9, 32, 107, 0xd9d9d9, 32, 108, 0xd9d9d9, 32, 109, 0xd9d9d9, 32, 110, 0xd9d9d9, 32, 111, 0xd9d9d9, 32, 112, 0xd9d9d9, 32, 113, 0xd9d9d9, 32, 114, 0xd9d9d9, 32, 115, 0xd9d9d9, 33, 107, 0xd9d9d9, 33, 108, 0xd9d9d9, 33, 109, 0x000000, 33, 110, 0xd9d9d9, 33, 111, 0xd9d9d9, 33, 112, 0xd9d9d9, 33, 113, 0x000000, 33, 114, 0xd9d9d9, 33, 115, 0xd9d9d9, 34, 107, 0xd9d9d9, 34, 108, 0xd9d9d9, 34, 109, 0x000000, 34, 110, 0x000000, 34, 111, 0x000000, 34, 112, 0x000000, 34, 113, 0x000000, 34, 114, 0xd9d9d9, 34, 115, 0xd9d9d9, 35, 107, 0xd9d9d9, 35, 108, 0xd9d9d9, 35, 109, 0x000000, 35, 110, 0xd9d9d9, 35, 111, 0xd9d9d9, 35, 112, 0xd9d9d9, 35, 113, 0x000000, 35, 114, 0xd9d9d9, 35, 115, 0xd9d9d9, 36, 107, 0xd9d9d9, 36, 108, 0xd9d9d9, 36, 109, 0xd9d9d9, 36, 110, 0xd9d9d9, 36, 111, 0xd9d9d9, 36, 112, 0xd9d9d9, 36, 113, 0xd9d9d9, 36, 114, 0xd9d9d9, 36, 115, 0xd9d9d9, 37, 107, 0xd9d9d9, 37, 108, 0xd9d9d9, 37, 109, 0x000000, 37, 110, 0xd9d9d9, 37, 111, 0xd9d9d9, 37, 112, 0xd9d9d9, 37, 113, 0xd9d9d9, 37, 114, 0xd9d9d9, 37, 115, 0xd9d9d9, 38, 107, 0xd9d9d9, 38, 108, 0xd9d9d9, 38, 109, 0x000000, 38, 110, 0xd9d9d9, 38, 111, 0xd9d9d9, 38, 112, 0xd9d9d9, 38, 113, 0xd9d9d9, 38, 114, 0xd9d9d9, 38, 115, 0xd9d9d9, 39, 107, 0xd9d9d9, 39, 108, 0xd9d9d9, 39, 109, 0x000000, 39, 110, 0x000000, 39, 111, 0x000000, 39, 112, 0x000000, 39, 113, 0x000000, 39, 114, 0xd9d9d9, 39, 115, 0xd9d9d9, 40, 107, 0xd9d9d9, 40, 108, 0xd9d9d9, 40, 109, 0x000000, 40, 110, 0xd9d9d9, 40, 111, 0xd9d9d9, 40, 112, 0xd9d9d9, 40, 113, 0xd9d9d9, 40, 114, 0xd9d9d9, 40, 115, 0xd9d9d9, 41, 107, 0xd9d9d9, 41, 108, 0xd9d9d9, 41, 109, 0x000000, 41, 110, 0xd9d9d9, 41, 111, 0xd9d9d9, 41, 112, 0xd9d9d9, 41, 113, 0xd9d9d9, 41, 114, 0xd9d9d9, 41, 115, 0xd9d9d9, 42, 107, 0xd9d9d9, 42, 108, 0xd9d9d9, 42, 109, 0xd9d9d9, 42, 110, 0xd9d9d9, 42, 111, 0xd9d9d9, 42, 112, 0xd9d9d9, 42, 113, 0xd9d9d9, 42, 114, 0xd9d9d9, 42, 115, 0xd9d9d9, 43, 107, 0xd9d9d9, 43, 108, 0xd9d9d9, 43, 109, 0xd9d9d9, 43, 110, 0xd9d9d9, 43, 111, 0xd9d9d9, 43, 112, 0xd9d9d9, 43, 113, 0xd9d9d9, 43, 114, 0xd9d9d9, 43, 115, 0xd9d9d9, 44, 107, 0xd9d9d9, 44, 108, 0xd9d9d9, 44, 109, 0xd9d9d9, 44, 110, 0xd9d9d9, 44, 111, 0xd9d9d9, 44, 112, 0xd9d9d9, 44, 113, 0xd9d9d9, 44, 114, 0xd9d9d9, 44, 115, 0xd9d9d9, 45, 107, 0xd9d9d9, 45, 108, 0xd9d9d9, 45, 109, 0xd9d9d9, 45, 110, 0xd9d9d9, 45, 111, 0xd9d9d9, 45, 112, 0xd9d9d9, 45, 113, 0xd9d9d9, 45, 114, 0xd9d9d9, 45, 115, 0xd9d9d9, 46, 107, 0xd9d9d9, 46, 108, 0xd9d9d9, 46, 109, 0xd9d9d9, 46, 110, 0xd9d9d9, 46, 111, 0xd9d9d9, 46, 112, 0xd9d9d9, 46, 113, 0xd9d9d9, 46, 114, 0xd9d9d9, 46, 115, 0xd9d9d9, 47, 107, 0xd9d9d9, 47, 108, 0xd9d9d9, 47, 109, 0xd9d9d9, 47, 110, 0xd9d9d9, 47, 111, 0xd9d9d9, 47, 112, 0xd9d9d9, 47, 113, 0xd9d9d9, 47, 114, 0xd9d9d9, 47, 115, 0xd9d9d9, 48, 107, 0xd9d9d9, 48, 108, 0xd9d9d9, 48, 109, 0xd9d9d9, 48, 110, 0xd9d9d9, 48, 111, 0xd9d9d9, 48, 112, 0xd9d9d9, 48, 113, 0xd9d9d9, 48, 114, 0xd9d9d9, 48, 115, 0xd9d9d9, 49, 107, 0xd9d9d9, 49, 108, 0xd9d9d9, 49, 109, 0xd9d9d9, 49, 110, 0xd9d9d9, 49, 111, 0xd9d9d9, 49, 112, 0xd9d9d9, 49, 113, 0xd9d9d9, 49, 114, 0xd9d9d9, 49, 115, 0xd9d9d9, 50, 108, 0xd9d9d9, 50, 109, 0xd9d9d9, 50, 110, 0xd9d9d9, 50, 111, 0xd9d9d9, 50, 112, 0xd9d9d9, 50, 113, 0xd9d9d9, 50, 114, 0xd9d9d9
EXIT_LEN: .word 1041
EXIT_SEL: .word 12, 108, 0xd9d9d9, 12, 109, 0xd9d9d9, 12, 110, 0xd9d9d9, 12, 111, 0xd9d9d9, 12, 112, 0xd9d9d9, 12, 113, 0xd9d9d9, 12, 114, 0xd9d9d9, 13, 107, 0xd9d9d9, 13, 108, 0xd9d9d9, 13, 109, 0xd9d9d9, 13, 110, 0xd9d9d9, 13, 111, 0xd9d9d9, 13, 112, 0xd9d9d9, 13, 113, 0xd9d9d9, 13, 114, 0xd9d9d9, 13, 115, 0xd9d9d9, 14, 107, 0xd9d9d9, 14, 108, 0xd9d9d9, 14, 109, 0xd9d9d9, 14, 110, 0xd9d9d9, 14, 111, 0xd9d9d9, 14, 112, 0xd9d9d9, 14, 113, 0xd9d9d9, 14, 114, 0xd9d9d9, 14, 115, 0xd9d9d9, 15, 107, 0xd9d9d9, 15, 108, 0xd9d9d9, 15, 109, 0xd9d9d9, 15, 110, 0xd9d9d9, 15, 111, 0xd9d9d9, 15, 112, 0xd9d9d9, 15, 113, 0xd9d9d9, 15, 114, 0xd9d9d9, 15, 115, 0xd9d9d9, 16, 107, 0xd9d9d9, 16, 108, 0xd9d9d9, 16, 109, 0xd9d9d9, 16, 110, 0xd9d9d9, 16, 111, 0xd9d9d9, 16, 112, 0xd9d9d9, 16, 113, 0xd9d9d9, 16, 114, 0xd9d9d9, 16, 115, 0xd9d9d9, 17, 107, 0xd9d9d9, 17, 108, 0xd9d9d9, 17, 109, 0xd9d9d9, 17, 110, 0xd9d9d9, 17, 111, 0xd9d9d9, 17, 112, 0xd9d9d9, 17, 113, 0xd9d9d9, 17, 114, 0xd9d9d9, 17, 115, 0xd9d9d9, 18, 107, 0xd9d9d9, 18, 108, 0xd9d9d9, 18, 109, 0xd9d9d9, 18, 110, 0xd9d9d9, 18, 111, 0xd9d9d9, 18, 112, 0xd9d9d9, 18, 113, 0xd9d9d9, 18, 114, 0xd9d9d9, 18, 115, 0xd9d9d9, 19, 107, 0xd9d9d9, 19, 108, 0xd9d9d9, 19, 109, 0xd9d9d9, 19, 110, 0xd9d9d9, 19, 111, 0xd9d9d9, 19, 112, 0xd9d9d9, 19, 113, 0xd9d9d9, 19, 114, 0xd9d9d9, 19, 115, 0xd9d9d9, 20, 107, 0xd9d9d9, 20, 108, 0xd9d9d9, 20, 109, 0xd9d9d9, 20, 110, 0xd9d9d9, 20, 111, 0xd9d9d9, 20, 112, 0xd9d9d9, 20, 113, 0xd9d9d9, 20, 114, 0xd9d9d9, 20, 115, 0xd9d9d9, 21, 107, 0xd9d9d9, 21, 108, 0xd9d9d9, 21, 109, 0xd9d9d9, 21, 110, 0xd9d9d9, 21, 111, 0xd9d9d9, 21, 112, 0xd9d9d9, 21, 113, 0xd9d9d9, 21, 114, 0xd9d9d9, 21, 115, 0xd9d9d9, 22, 107, 0xd9d9d9, 22, 108, 0xd9d9d9, 22, 109, 0xd9d9d9, 22, 110, 0xd9d9d9, 22, 111, 0xd9d9d9, 22, 112, 0xd9d9d9, 22, 113, 0xd9d9d9, 22, 114, 0xd9d9d9, 22, 115, 0xd9d9d9, 23, 107, 0xd9d9d9, 23, 108, 0xd9d9d9, 23, 109, 0x000000, 23, 110, 0x000000, 23, 111, 0x000000, 23, 112, 0x000000, 23, 113, 0x000000, 23, 114, 0xd9d9d9, 23, 115, 0xd9d9d9, 24, 107, 0xd9d9d9, 24, 108, 0xd9d9d9, 24, 109, 0x000000, 24, 110, 0xd9d9d9, 24, 111, 0x000000, 24, 112, 0xd9d9d9, 24, 113, 0x000000, 24, 114, 0xd9d9d9, 24, 115, 0xd9d9d9, 25, 107, 0xd9d9d9, 25, 108, 0xd9d9d9, 25, 109, 0x000000, 25, 110, 0xd9d9d9, 25, 111, 0x000000, 25, 112, 0xd9d9d9, 25, 113, 0x000000, 25, 114, 0xd9d9d9, 25, 115, 0xd9d9d9, 26, 107, 0xd9d9d9, 26, 108, 0xd9d9d9, 26, 109, 0x000000, 26, 110, 0xd9d9d9, 26, 111, 0xd9d9d9, 26, 112, 0xd9d9d9, 26, 113, 0x000000, 26, 114, 0xd9d9d9, 26, 115, 0xd9d9d9, 27, 107, 0xd9d9d9, 27, 108, 0xd9d9d9, 27, 109, 0xd9d9d9, 27, 110, 0xd9d9d9, 27, 111, 0xd9d9d9, 27, 112, 0xd9d9d9, 27, 113, 0xd9d9d9, 27, 114, 0xd9d9d9, 27, 115, 0xd9d9d9, 28, 107, 0xd9d9d9, 28, 108, 0xd9d9d9, 28, 109, 0x000000, 28, 110, 0x000000, 28, 111, 0xd9d9d9, 28, 112, 0x000000, 28, 113, 0x000000, 28, 114, 0xd9d9d9, 28, 115, 0xd9d9d9, 29, 107, 0xd9d9d9, 29, 108, 0xd9d9d9, 29, 109, 0xd9d9d9, 29, 110, 0xd9d9d9, 29, 111, 0x000000, 29, 112, 0xd9d9d9, 29, 113, 0xd9d9d9, 29, 114, 0xd9d9d9, 29, 115, 0xd9d9d9, 30, 107, 0xd9d9d9, 30, 108, 0xd9d9d9, 30, 109, 0xd9d9d9, 30, 110, 0xd9d9d9, 30, 111, 0x000000, 30, 112, 0xd9d9d9, 30, 113, 0xd9d9d9, 30, 114, 0xd9d9d9, 30, 115, 0xd9d9d9, 31, 107, 0xd9d9d9, 31, 108, 0xd9d9d9, 31, 109, 0x000000, 31, 110, 0x000000, 31, 111, 0xd9d9d9, 31, 112, 0x000000, 31, 113, 0x000000, 31, 114, 0xd9d9d9, 31, 115, 0xd9d9d9, 32, 107, 0xd9d9d9, 32, 108, 0xd9d9d9, 32, 109, 0xd9d9d9, 32, 110, 0xd9d9d9, 32, 111, 0xd9d9d9, 32, 112, 0xd9d9d9, 32, 113, 0xd9d9d9, 32, 114, 0xd9d9d9, 32, 115, 0xd9d9d9, 33, 107, 0xd9d9d9, 33, 108, 0xd9d9d9, 33, 109, 0x000000, 33, 110, 0xd9d9d9, 33, 111, 0xd9d9d9, 33, 112, 0xd9d9d9, 33, 113, 0x000000, 33, 114, 0xd9d9d9, 33, 115, 0xd9d9d9, 34, 107, 0xd9d9d9, 34, 108, 0xd9d9d9, 34, 109, 0x000000, 34, 110, 0x000000, 34, 111, 0x000000, 34, 112, 0x000000, 34, 113, 0x000000, 34, 114, 0xd9d9d9, 34, 115, 0xd9d9d9, 35, 107, 0xd9d9d9, 35, 108, 0xd9d9d9, 35, 109, 0x000000, 35, 110, 0xd9d9d9, 35, 111, 0xd9d9d9, 35, 112, 0xd9d9d9, 35, 113, 0x000000, 35, 114, 0xd9d9d9, 35, 115, 0xd9d9d9, 36, 107, 0xd9d9d9, 36, 108, 0xd9d9d9, 36, 109, 0xd9d9d9, 36, 110, 0xd9d9d9, 36, 111, 0xd9d9d9, 36, 112, 0xd9d9d9, 36, 113, 0xd9d9d9, 36, 114, 0xd9d9d9, 36, 115, 0xd9d9d9, 37, 107, 0xd9d9d9, 37, 108, 0xd9d9d9, 37, 109, 0x000000, 37, 110, 0xd9d9d9, 37, 111, 0xd9d9d9, 37, 112, 0xd9d9d9, 37, 113, 0xd9d9d9, 37, 114, 0xd9d9d9, 37, 115, 0xd9d9d9, 38, 107, 0xd9d9d9, 38, 108, 0xd9d9d9, 38, 109, 0x000000, 38, 110, 0xd9d9d9, 38, 111, 0xd9d9d9, 38, 112, 0xd9d9d9, 38, 113, 0xd9d9d9, 38, 114, 0xd9d9d9, 38, 115, 0xd9d9d9, 39, 107, 0xd9d9d9, 39, 108, 0xd9d9d9, 39, 109, 0x000000, 39, 110, 0x000000, 39, 111, 0x000000, 39, 112, 0x000000, 39, 113, 0x000000, 39, 114, 0xd9d9d9, 39, 115, 0xd9d9d9, 40, 107, 0xd9d9d9, 40, 108, 0xd9d9d9, 40, 109, 0x000000, 40, 110, 0xd9d9d9, 40, 111, 0xd9d9d9, 40, 112, 0xd9d9d9, 40, 113, 0xd9d9d9, 40, 114, 0xd9d9d9, 40, 115, 0xd9d9d9, 41, 107, 0xd9d9d9, 41, 108, 0xd9d9d9, 41, 109, 0x000000, 41, 110, 0xd9d9d9, 41, 111, 0xd9d9d9, 41, 112, 0xd9d9d9, 41, 113, 0xd9d9d9, 41, 114, 0xd9d9d9, 41, 115, 0xd9d9d9, 42, 107, 0xd9d9d9, 42, 108, 0xd9d9d9, 42, 109, 0xd9d9d9, 42, 110, 0xd9d9d9, 42, 111, 0xd9d9d9, 42, 112, 0xd9d9d9, 42, 113, 0xd9d9d9, 42, 114, 0xd9d9d9, 42, 115, 0xd9d9d9, 43, 107, 0xd9d9d9, 43, 108, 0xd9d9d9, 43, 109, 0xd9d9d9, 43, 110, 0xd9d9d9, 43, 111, 0xd9d9d9, 43, 112, 0xd9d9d9, 43, 113, 0xd9d9d9, 43, 114, 0xd9d9d9, 43, 115, 0xd9d9d9, 44, 107, 0xd9d9d9, 44, 108, 0xd9d9d9, 44, 109, 0xd9d9d9, 44, 110, 0xd9d9d9, 44, 111, 0xd9d9d9, 44, 112, 0xd9d9d9, 44, 113, 0xd9d9d9, 44, 114, 0xd9d9d9, 44, 115, 0xd9d9d9, 45, 107, 0xd9d9d9, 45, 108, 0xd9d9d9, 45, 109, 0xd9d9d9, 45, 110, 0xd9d9d9, 45, 111, 0xd9d9d9, 45, 112, 0xd9d9d9, 45, 113, 0xd9d9d9, 45, 114, 0xd9d9d9, 45, 115, 0xd9d9d9, 46, 107, 0xd9d9d9, 46, 108, 0xd9d9d9, 46, 109, 0xd9d9d9, 46, 110, 0xd9d9d9, 46, 111, 0xd9d9d9, 46, 112, 0xd9d9d9, 46, 113, 0xd9d9d9, 46, 114, 0xd9d9d9, 46, 115, 0xd9d9d9, 47, 107, 0xd9d9d9, 47, 108, 0xd9d9d9, 47, 109, 0xd9d9d9, 47, 110, 0xd9d9d9, 47, 111, 0xd9d9d9, 47, 112, 0xd9d9d9, 47, 113, 0xd9d9d9, 47, 114, 0xd9d9d9, 47, 115, 0xd9d9d9, 48, 107, 0xd9d9d9, 48, 108, 0xd9d9d9, 48, 109, 0xd9d9d9, 48, 110, 0xd9d9d9, 48, 111, 0xd9d9d9, 48, 112, 0xd9d9d9, 48, 113, 0xd9d9d9, 48, 114, 0xd9d9d9, 48, 115, 0xd9d9d9, 49, 107, 0xd9d9d9, 49, 108, 0xd9d9d9, 49, 109, 0xd9d9d9, 49, 110, 0xd9d9d9, 49, 111, 0xd9d9d9, 49, 112, 0xd9d9d9, 49, 113, 0xd9d9d9, 49, 114, 0xd9d9d9, 49, 115, 0xd9d9d9, 50, 108, 0xd9d9d9, 50, 109, 0xd9d9d9, 50, 110, 0xd9d9d9, 50, 111, 0xd9d9d9, 50, 112, 0xd9d9d9, 50, 113, 0xd9d9d9, 50, 114, 0xd9d9d9, 52, 111, 0xe8b02e, 53, 110, 0xe8b02e, 53, 111, 0xe8b02e, 53, 112, 0xe8b02e, 54, 109, 0xe8b02e, 54, 110, 0xe8b02e, 54, 111, 0xe8b02e, 54, 112, 0xe8b02e, 54, 113, 0xe8b02e, 55, 108, 0xe8b02e, 55, 109, 0xe8b02e, 55, 110, 0xe8b02e, 55, 111, 0xe8b02e, 55, 112, 0xe8b02e, 55, 113, 0xe8b02e, 55, 114, 0xe8b02e, 56, 107, 0xe8b02e, 56, 108, 0xe8b02e, 56, 109, 0xe8b02e, 56, 110, 0xe8b02e, 56, 111, 0xe8b02e, 56, 112, 0xe8b02e, 56, 113, 0xe8b02e, 56, 114, 0xe8b02e, 56, 115, 0xe8b02e, 57, 111, 0xe8b02e, 58, 111, 0xe8b02e, 59, 111, 0xe8b02e, 60, 111, 0xe8b02e, 61, 111, 0xe8b02e
EXIT_SEL_LEN: .word 1131
SELECTED: .word 0

#ignore platform on pressing s
IGNORE_PLAT: .word 0

.eqv BASE_ADDRESS 0x10008000
.eqv SCRN_WAIT 17 #screen sleep time
.eqv WIDTH 64
.eqv HEIGHT 128 #Since unit width = 2. Imagine display as 64*128
.eqv BGCOLOR 0xfff7a1
.eqv PLATCOLOR 0x9dd162
.eqv PLATCOLORMV 0x9dd163
.eqv PLATWIDTH 20
.eqv PLATHEIGHT 1
.eqv GRAVITY -1
.eqv MAX_SCORE 30
.eqv JUMP_HEIGHT 7
.eqv CHOCOLATE_JUMP_HEIGHT 20
.eqv PLAYER_UP_CTR_FRAMES 7
.eqv PLAYER_UP_CTR_FRAMES_CHOCOLATE 20

.text
.globl start_screen

start_screen:
	jal fill_background
	#call draw sprite
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	sw $a0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, START_MENU	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, START_MENU_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	jal start_screen_draw_buttons 
	
start_screen_loop: #listen for keypress
	li $t9, 0xffff0000
	lw $t8, 0($t9)
	bne $t8, 1, start_screen_loop
	lw $t2, 4($t9) #key value is in next reg in mem after 0xffff0000
	beq $t2, 112, handle_p #p
	
	beq $t2, 119, selector_toggle #w
	beq $t2, 115, selector_toggle #s
	beq $t2, 101, selector_select #e

selector_select:
	la $t0, SELECTED
	lw $t0, ($t0)
	beqz $t0, startup
	j END

selector_toggle:
	la $t0, SELECTED
	lw $t1, ($t0)
	beqz $t1, selector_toggle_0
	#s == 1
	li $t1, 0
	sw $t1, ($t0)
	jal start_screen_draw_buttons
	j start_screen_loop
selector_toggle_0:
	li $t1, 1
	sw $t1, ($t0)
	jal start_screen_draw_buttons_ex
	j start_screen_loop

start_screen_draw_buttons: #start selected
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#Overwrite previous buttons
	addi $sp, $sp, -4
	li $t0, 0 	
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	li $t0, 112
	addi $t0, $t0, -10	 
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	li $t0, WIDTH 	
	sw $t0, ($sp)	#width
	
	addi $sp, $sp, -4
	li $t0, 25
	sw $t0, ($sp)	#height
	
	addi $sp, $sp, -4
	li $t0, BGCOLOR 
	sw $t0, ($sp)	#color
	jal fill_rect

	#call draw sprite
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, START_SEL
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, START_SEL_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#call draw sprite
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	li $a0, 10
	sw $a0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, EXIT
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, EXIT_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

start_screen_draw_buttons_ex: #exit selected
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#Overwrite previous buttons
	addi $sp, $sp, -4
	li $t0, 0 	
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	li $t0, 112
	addi $t0, $t0, -10	 
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	li $t0, WIDTH 	
	sw $t0, ($sp)	#width
	
	addi $sp, $sp, -4
	li $t0, 25	
	sw $t0, ($sp)	#height
	
	addi $sp, $sp, -4
	li $t0, BGCOLOR 
	sw $t0, ($sp)	#color
	jal fill_rect

	#call draw sprite
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, START
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, START_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#call draw sprite
	addi $sp, $sp, -4
	li $a0, 0
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	li $a0, 10
	sw $a0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, EXIT_SEL
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, EXIT_SEL_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

startup:
	jal fill_background
	j game_loop

restart:
	#reset starting values and jump to startup
	la $t0, PLAYERX
	li $t1, 22
	sw $t1, ($t0)
	la $t0, PLAYERY
	li $t1, 108
	sw $t1, ($t0)
	la $t0, VERTVELOCITY
	li $t1, 0
	sw $t1, ($t0)
	la $t0, SCORE
	sw $t1, ($t0)
	la $t0, PLAYER_FACING
	li $t1, -1
	sw $t1, ($t0)
	la $t0, PLAYER_STATE
	li $t1, 0
	sw $t1, ($t0)
	la $t0, CHOCOLATE_ARR_LEN
	li $t1, 2
	sw $t1, ($t0)
	
	#reload platform array
	la $t0, PLATFORM_ARR
	la $t8, PLATFORM_ARR_ORIGINAL
	la $t1, PLATFORM_ARR_LEN
	lw $t1, ($t1) #len	
	li $t2, 0 #offset
restart_platform_loop:
	bge $t2, $t1, restart_platform_loop_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	add $t9, $t8, $t2
	
	lw $a0, ($t9)
	lw $a1, 4($t9)
	sw $a0, ($t3)
	sw $a1, 4($t3)
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j restart_platform_loop
restart_platform_loop_end:
	#reload moving platform loop

	la $t0, PLATFORM_ARR_MOVING
	la $t8, PLATFORM_ARR_MOVING_ORIGINAL
	la $t1, PLATFORM_ARR_MOVING_LEN
	lw $t1, ($t1) #len	
	li $t2, 0 #offset
restart_platform_mooving_loop:
	bge $t2, $t1, restart_platform_moving_loop_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	add $t9, $t8, $t2
	
	lw $a0, ($t9)
	lw $a1, 4($t9)
	sw $a0, ($t3)
	sw $a1, 4($t3)
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j restart_platform_mooving_loop

restart_platform_moving_loop_end:
	#reload treat array
	la $t0, TREAT_ARR
	la $t8, TREAT_ARR_ORIGINAL
	la $t1, TREAT_ARR_LEN
	lw $t1, ($t1) #len	
	li $t2, 0 #offset
restart_treat_loop:
	bge $t2, $t1, restart_treat_loop_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	add $t9, $t8, $t2
	
	lw $a0, ($t9)
	lw $a1, 4($t9)
	sw $a0, ($t3)
	sw $a1, 4($t3)
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j restart_treat_loop
restart_treat_loop_end:
	#reload chocolate array
	la $t0, CHOCOLATE_ARR
	la $t8, CHOCOLATE_ARR_ORIGINAL
	la $t1, CHOCOLATE_ARR_LEN
	lw $t1, ($t1) #len	
	li $t2, 0 #offset
restart_chocolate_loop:
	bge $t2, $t1, restart_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	add $t9, $t8, $t2
	
	lw $a0, ($t9)
	lw $a1, 4($t9)
	sw $a0, ($t3)
	sw $a1, 4($t3)
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j restart_chocolate_loop

restart_end:
	j startup
	
#Fill in background	
fill_background:
	li $t0, BASE_ADDRESS
	addi $t1, $zero, 0 #i=0
	li $t2, WIDTH
	li $t3, HEIGHT
	mult $t2, $t3
	mflo $t2
	sll $t2, $t2, 2 #for incrementing by 4
	li $t3, BGCOLOR
fill_background_loop:	
	bgt $t1, $t2, fill_background_end
	add $t5, $t0, $t1 #calc offset
	sw $t3, ($t5)
	addi $t1, $t1, 4 #i += 1
	j fill_background_loop
fill_background_end:	
	jr $ra

#Fill a rectangle. Requires 5 args on stack: (height, width at least 1)
#x, y, width, height, color
fill_rect:
	#get args into t0-4
	lw $t4, ($sp) #color
	lw $t3, 4($sp) #h
	lw $t2, 8($sp) #w
	lw $t1, 12($sp) #y
	lw $t0, 16($sp) #x
	addi $sp, $sp, 20
	
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#fill logic
	add $t5, $t0, $t2 #max width
	add $t6, $t1, $t3 #max height
fill_rect_forx:
	beq $t0, $t5, fill_rect_next_row
	#call fill_pixel
	addi $a1, $t0, 0
	addi $a2, $t1, 0
	addi $a3, $t4, 0
	jal fill_pixel
	addi $t0, $t0, 1
	j fill_rect_forx
	
fill_rect_next_row:
	addi $t1, $t1, 1
	sub $t0, $t0, $t2 
	beq $t1, $t6, fill_rect_end
	j fill_rect_forx
fill_rect_end:
	#restore $ra from stack
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5
	
#a1 = x, a2 = y, a3 = color
fill_pixel:
	#Update a2 to hold offset
	li $a0, WIDTH
	mult $a0, $a2
	mflo $a2
	add $a2, $a1, $a2
	sll $a2, $a2, 2
	#Find address of pixel and color
	li $a0, BASE_ADDRESS
	add $a0, $a0, $a2
	sw $a3, ($a0)
	jr $ra

#stack: x, y, sprite array address, sprite length
draw_sprite:
	#get args into t0-3
	lw $t3, ($sp) #len
	lw $t2, 4($sp) #arr
	lw $t1, 8($sp) #y
	lw $t0, 12($sp) #x
	addi $sp, $sp, 16
	
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	addi $t4, $zero, 0 #i = 0
draw_sprite_loop:
	bge $t4, $t3, draw_sprite_end
	sll $t5, $t4, 2 #offset to find x
	add $t5, $t5, $t2 #addr of arr[i]
	lw $t6, 0($t5) #x
	lw $t7, 4($t5) #y
	lw $t8, 8($t5) #color
	addi $t4, $t4, 3 #Update i
	#call fill_pizel
	add $a1, $t6, $t0
	add $a2, $t7, $t1
	addi $a3, $t8, 0
	jal fill_pixel
	#loop
	j draw_sprite_loop
draw_sprite_end:	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

draw_player:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#add player sprite drawing vars to stack
	addi $sp, $sp, -4
	la $t0, PLAYERX
	lw $t0, ($t0)	
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	la $t0, PLAYERY
	lw $t0, ($t0)
	sw $t0, ($sp)	#y
	
	#Skipping vertical jump animations, as implemented wrong
	la $t0, PLAYER_UP_CTR
	lw $t0, ($t0)
	blez $t0, draw_player_no_vert
	
draw_player_up_l:
	la $t0, PLAYER_STATE
	li $t1, 4
	sw $t1, ($t0)
	la $t0, PLAYER_UP_DIR
	lw $t0, ($t0)

	beq $t0, 1, draw_player_up_r
	la $t1, PLAYER_UP_L
	la $t2, PLAYER_UP_L_LEN
	lw $t2, ($t2)
	j draw_player_load_sprite
draw_player_up_r:
	la $t0, PLAYER_STATE
	li $t1, 4
	sw $t1, ($t0)
	
	la $t1, PLAYER_UP_R
	la $t2, PLAYER_UP_R_LEN
	lw $t2, ($t2)
	j draw_player_load_sprite

draw_player_no_vert:
	la $t0, PLAYER_FACING
	lw $t0, ($t0)
	beq $t0, 1, draw_player_right
draw_player_left:
	la $t0, PLAYER_STATE
	lw $t1, ($t0)
	beq $t1, 1, draw_player_left_1
	li $t1, 0
	sw $t1, ($t0)
	la $t1, PLAYER_SPRITE
	la $t2, PLAYER_SPRITE_LEN
	lw $t2, ($t2)
	j draw_player_load_sprite
draw_player_left_1:
	la $t1, PLAYER_L_1
	la $t2, PLAYER_L_1_LEN
	lw $t2, ($t2)
	j draw_player_load_sprite
draw_player_right:
	la $t0, PLAYER_STATE
	lw $t1, ($t0)
	beq $t1, 3, draw_player_right_1
	li $t1, 2
	sw $t1, ($t0)
	la $t1, PLAYER_R
	la $t2, PLAYER_R_LEN
	lw $t2, ($t2)
	j draw_player_load_sprite
draw_player_right_1:
	la $t1, PLAYER_R_1
	la $t2, PLAYER_R_1_LEN
	lw $t2, ($t2)
draw_player_load_sprite:
	addi $sp, $sp, -4
	#la $t0, PLAYER_SPRITE 	
	sw $t1, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	#la $t0, PLAYER_SPRITE_LEN
	#lw $t0, ($t0)
	sw $t2, ($sp)	#sprite length
	
	jal draw_sprite
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

#draw a background color player
overwrite_player:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#add player sprite drawing vars to stack
	addi $sp, $sp, -4
	la $t0, PLAYERX
	lw $t0, ($t0)	
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	la $t0, PLAYERY
	lw $t0, ($t0)
	sw $t0, ($sp)	#y
	
	#width
	li $t5, 9
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#height
	li $t5, 10
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#color
	#li $t5, PLATCOLOR
	li $a2, BGCOLOR
	addi $sp, $sp, -4
	sw $a2, ($sp)
	
	jal fill_rect
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# (a0: x, a1: y, a2:color)
draw_platform:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#x
	addi $sp, $sp, -4
	sw $a0, ($sp)
	
	#y
	addi $sp, $sp, -4
	sw $a1, ($sp)
	
	#width
	li $t5, PLATWIDTH
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#height
	li $t5, PLATHEIGHT
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#color
	#li $t5, PLATCOLOR
	addi $sp, $sp, -4
	sw $a2, ($sp)
	
	jal fill_rect
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Return color at a given pixel
# (a0: x, a1: y) -> (v0: color)
# like fill_color, only operates using $a0-3. So no worry about overwriting registers in parent call.
get_color:
	#Update a1 to hold offset
	li $a3, WIDTH
	mult $a3, $a1
	mflo $a1
	add $a1, $a0, $a1
	sll $a1, $a1, 2
	#Find address of pixel and color
	li $a3, BASE_ADDRESS
	add $a3, $a3, $a1
	lw $v0, ($a3) #load color into v0
	jr $ra	

# Check for platform. Updates global vars:
# PLATFORM_D: Platform in the 10px below the player (since max neg velocity is -10). Used so acceleration changed so user lands on it.
# PLATFORM_S: user is standing directly on a platform.
# PLATFORM_M: user is above a moving platform.
# -> ($v0 - distance to platform (positive))
check_platform:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, PLAYERX
	lw $t1, ($t0) #x
	la $t2, PLAYERY
	lw $t3, ($t2) #y
	#Check in 9x10 block below the player
	#Calc initial (x,y) and final (x,y) to search:
	addi $t3, $t3, 10 #starting y
	addi $t4, $t3, 10 #max y
	addi $t5, $t1, 9 #max x
	
	#reset platform detection
	la $t9, PLATFORM_S
	li $t8, 0
	sw $t8, ($t9)
	la $t9, PLATFORM_D
	sw $t8, ($t9)
	la $t9, PLATFORM_M
	sw $t8, ($t9)
check_platform_loop:
	li $t9, HEIGHT
	bge $t3, HEIGHT, check_platform_false #branch if out of screen
	addi $a0, $t1, 0
	addi $a1, $t3 0
	jal get_color
	beq $v0, PLATCOLOR, check_platform_true
	beq $v0, PLATCOLORMV, check_platform_true_mv
	#No platform at this pixel
	addi $t1, $t1, 1
	beq $t1, $t5, check_platform_max_x
	j check_platform_loop
check_platform_max_x:
	addi $t1, $t1, -9
	addi $t3, $t3, 1
	beq $t3, $t4, check_platform_false
	j check_platform_loop
check_platform_true_mv:
	la $t9, PLATFORM_M
	li $t8, 1
	sw $t8, ($t9)
check_platform_true:
	#if still in first row, set PLATFORM_S to true
	lw $t9, ($t2)
	addi $t9, $t9, 10
	sub $v0, $t3, $t9 #record distance from player to plat for use outside of this func
	bne $t9, $t3, check_platform_true_not_first_row
	la $t9, PLATFORM_S
	li $t8, 1
	sw $t8, ($t9)
check_platform_true_not_first_row:
	#set platform D true
	la $t9, PLATFORM_D
	li $t8, 1
	sw $t8, ($t9)
	j check_platform_end
check_platform_false: #platform not detected
	la $t9, PLATFORM_S
	li $t8, 0
	sw $t8, ($t9)
	la $t9, PLATFORM_D
	sw $t8, ($t9)
	la $t9, PLATFORM_M
	sw $t8, ($t9)
check_platform_end:	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Draw list of all platforms
draw_platform_list:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, PLATFORM_ARR
	la $t1, PLATFORM_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
draw_platform_list_loop:	
	bge $t2, $t1, draw_platform_list_end

	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
	#save $t0, $t1, $t2 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	
	lw $a0, ($t3)
	lw $a1, 4($t3)
	li $a2, PLATCOLOR
	jal draw_platform
	
	#load t2, t1, t0 after func call
	lw $t2, ($sp)
	lw $t1, 4($sp)
	lw $t0, 8($sp)
	addi $sp, $sp, 12
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j draw_platform_list_loop
	
draw_platform_list_end:	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5


# Draw list of all moving platforms
draw_platform_mv_list:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, PLATFORM_ARR_MOVING
	la $t1, PLATFORM_ARR_MOVING_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
draw_platform_mv_list_loop:	
	bge $t2, $t1, draw_platform_mv_list_end

	sll $t2, $t2, 2
	add $t3, $t0, $t2
	lw $t4, ($t3) #old x
	la $t5, PLATFORM_ARR_MOVING_DIR
	lw $t5, ($t5) #dir offset
	add $t6, $t4, $t5 #new x
	#upper limit
	li $t7, PLATWIDTH
	li $t8, WIDTH
	sub $t9, $t8, $t7
	bgt $t6, $t9, draw_platform_mv_shift_dir_g
	blt $t6, 0, draw_platform_mv_shift_dir_l
	j draw_platform_mv_list_loop_2
draw_platform_mv_shift_dir_g:
	la $t5, PLATFORM_ARR_MOVING_DIR
	li $t7, -1
	sw $t7, ($t5)
	move $t6, $t9
	addi $t6, $t6, -1
	j draw_platform_mv_list_loop_2
draw_platform_mv_shift_dir_l:
	la $t5, PLATFORM_ARR_MOVING_DIR
	li $t7, 1
	sw $t7, ($t5)
	li $t6, 1
draw_platform_mv_list_loop_2:
	#save new x
	sw $t6, ($t3)

	#save $t0, $t1, $t2, $t3 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	
	#overwrite old platform pos
	move $a0, $t4
	lw $a1, 4($t3)
	li $a2, BGCOLOR
	jal draw_platform
	
	#draw new platform
	lw $t3 ($sp)
	lw $a0, ($t3)
	lw $a1, 4($t3)
	li $a2, PLATCOLORMV
	jal draw_platform
	
	#load t3, t2, t1, t0 after func calls
	lw $t3, ($sp)
	lw $t2, 4($sp)
	lw $t1, 8($sp)
	lw $t0, 12($sp)
	addi $sp, $sp, 16

	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j draw_platform_mv_list_loop
	
draw_platform_mv_list_end:	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Draw list of all treats
draw_treats_list:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, TREAT_ARR
	la $t1, TREAT_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
draw_treats_list_loop:
	bge $t2, $t1, draw_treats_list_end

	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
	#save $t0, $t1, $t2 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	
	#call draw sprite
	addi $sp, $sp, -4
	lw $t0, ($t3)
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	lw $t0, 4($t3)
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, TREAT	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, TREAT_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#load t2, t1, t0 after func call
	lw $t2, ($sp)
	lw $t1, 4($sp)
	lw $t0, 8($sp)
	addi $sp, $sp, 12
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j draw_treats_list_loop
	
draw_treats_list_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Draw list of all treats
draw_chocolates_list:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, CHOCOLATE_ARR
	la $t1, CHOCOLATE_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
draw_chocolates_list_loop:
	bge $t2, $t1, draw_chocolates_list_end

	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
	#save $t0, $t1, $t2 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	
	#call draw sprite
	addi $sp, $sp, -4
	lw $t0, ($t3)
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	lw $t0, 4($t3)
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, CHOCOLATE	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, CHOCOLATE_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#load t2, t1, t0 after func call
	lw $t2, ($sp)
	lw $t1, 4($sp)
	lw $t0, 8($sp)
	addi $sp, $sp, 12
	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j draw_chocolates_list_loop
	
draw_chocolates_list_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

#Checks if a platform is out of screen after this loop iteration. If so, generates new position for it
check_out_of_screen_platforms:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, PLATFORM_ARR
	la $t1, PLATFORM_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
check_out_of_screen_platforms_loop:
	bge $t2, $t1, check_out_of_screen_platforms_mv
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
	lw $t4, 4($t3) #t4 = y
	li $t5, HEIGHT
	
	blt $t4, $t5, check_out_of_screen_platforms_loop_next
	#Here platform is out of screen. Set platform height to 0, generate random x between 7 and WIDTH - 27 (platform is 20px long)
	sw $zero, 4($t3)
	li $t5, WIDTH
	#Service $v0 = 42 produces rand int within range. Put 0 into $a0 (id of rand generator). Max val int into $a1 for s42. After completion result in $a0
	li $v0, 42
	li $a0, 0
	addi, $t5, $t5, -34 #generate rand num from 0 to WIDTH -34. Then add 7 to result
	move $a1, $t5
	syscall
	addi $a0, $a0, 7
	sw $a0, ($t3)
check_out_of_screen_platforms_loop_next:
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j check_out_of_screen_platforms_loop

check_out_of_screen_platforms_mv:
	la $t0, PLATFORM_ARR_MOVING
	la $t1, PLATFORM_ARR_MOVING_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset
check_out_of_screen_platforms_mv_loop:
	bge $t2, $t1, check_out_of_screen_platforms_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
	lw $t4, 4($t3) #t4 = y
	li $t5, HEIGHT
	
	blt $t4, $t5, check_out_of_screen_platforms_mv_loop_next
	#Here platform is out of screen. Set platform height to 0, generate random x between 7 and WIDTH - 27 (platform is 20px long)
	sw $zero, 4($t3)
	li $t5, WIDTH
	#Service $v0 = 42 produces rand int within range. Put 0 into $a0 (id of rand generator). Max val int into $a1 for s42. After completion result in $a0
	li $v0, 42
	li $a0, 0
	addi, $t5, $t5, -34 #generate rand num from 0 to WIDTH -34. Then add 7 to result
	move $a1, $t5
	syscall
	addi $a0, $a0, 7
	sw $a0, ($t3)
	
check_out_of_screen_platforms_mv_loop_next:
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j check_out_of_screen_platforms_mv_loop

check_out_of_screen_platforms_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Check if a treat is being picked up or out of screen. Update score and generate new position.
check_treat_collision:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, TREAT_ARR
	la $t1, TREAT_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset

check_treat_collision_loop:
	bge $t2, $t1, check_treat_collision_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
# check for out of bounds
	lw $t4, 4($t3) #t4 = y
	li $t5, HEIGHT
	blt $t4, $t5, check_treat_collision_loop_next 
check_treat_collision_regen:
	#Here treat needs reloading. Set treat height to 0, generate random x between 7 and WIDTH - 16 (treat is 9px wide)
	sw $zero, 4($t3)
	li $t5, WIDTH
	#Service $v0 = 42 produces rand int within range. Put 0 into $a0 (id of rand generator). Max val int into $a1 for s42. After completion result in $a0
	li $v0, 42
	li $a0, 0
	addi, $t5, $t5, -23 #generate rand num from 0 to WIDTH -23. Then add 7 to result
	move $a1, $t5
	syscall
	addi $a0, $a0, 7
	sw $a0, ($t3)
	j check_treat_collision_loop_next_iterate
	
check_treat_collision_loop_next: #check for collision
	# Here treat is on-screen. Check if touching player
	la $t8, PLAYERX
	lw $t8, ($t8)
	la $t9, PLAYERY
	lw $t9, ($t9)
	
	#save t0-3 to stack
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	
	#call check square collision
	addi $sp, $sp, -4
	lw $t4, ($t3) #t3 has curr address in array
	sw $t4, ($sp)	#x1
	
	addi $sp, $sp, -4
	lw $t4, 4($t3)
	sw $t4, ($sp)	#y1
	
	addi $sp, $sp, -4	
	sw $t8, ($sp)	#x2
	
	addi $sp, $sp, -4
	sw $t9, ($sp)	#y2
	
	jal check_square_collision
	
	#load t0-3 from stack
	lw $t3, ($sp)
	lw $t2, 4($sp)
	lw $t1, 8($sp)
	lw $t0, 12($sp)
	addi $sp, $sp, 16
	
	beq $v0, 0, check_treat_collision_loop_next_iterate
	# Collision detected, increase score by one, overwrite pixels, and regen position
	la $t4, SCORE
	lw $t5, ($t4)
	addi $t5, $t5, 1
	sw $t5, ($t4) #Save new score 
	
	#save $t0-3 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	
	lw $a0, ($t3)
	lw $a1, 4($t3)
	jal overwrite_treat
	
	#load t2, t1, t0 after func call
	lw $t3, ($sp)
	lw $t2, 4($sp)
	lw $t1, 8($sp)
	lw $t0, 12($sp)
	addi $sp, $sp, 16
	
	j check_treat_collision_regen
	
check_treat_collision_loop_next_iterate:	
	srl $t2, $t2, 2
	addi $t2, $t2, 2
	j check_treat_collision_loop

check_treat_collision_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# Check if a treat is being picked up or out of screen. Update score and generate new position.
check_chocolate_collision:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	la $t0, CHOCOLATE_ARR
	la $t1, CHOCOLATE_ARR_LEN
	lw $t1, ($t1) #len
	li $t2, 0 #offset

check_chocolate_collision_loop:
	bge $t2, $t1, check_chocolate_collision_end
	sll $t2, $t2, 2
	add $t3, $t0, $t2
	
# check for out of bounds
	lw $t4, 4($t3) #t4 = y
	li $t5, HEIGHT
	blt $t4, $t5, check_chocolate_collision_loop_next 
check_chocolate_collision_regen:
	#Here choco out of screen. Chocolate only to be rendered once, so set arr length to 0 (one chocolate max in array)
	la $t1, CHOCOLATE_ARR_LEN
	sw $zero, ($t1)
	j check_chocolate_collision_end
	
check_chocolate_collision_loop_next: #check for collision
	# Here chocolate is on-screen. Check if touching player
	la $t8, PLAYERX
	lw $t8, ($t8)
	la $t9, PLAYERY
	lw $t9, ($t9)
	
	#save t0-3 to stack
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	
	#call check square collision
	addi $sp, $sp, -4
	lw $t4, ($t3) #t3 has curr address in array
	sw $t4, ($sp)	#x1
	
	addi $sp, $sp, -4
	lw $t4, 4($t3)
	sw $t4, ($sp)	#y1
	
	addi $sp, $sp, -4	
	sw $t8, ($sp)	#x2
	
	addi $sp, $sp, -4
	sw $t9, ($sp)	#y2
	
	jal check_square_collision
	
	#load t0-3 from stack
	lw $t3, ($sp)
	lw $t2, 4($sp)
	lw $t1, 8($sp)
	lw $t0, 12($sp)
	addi $sp, $sp, 16
	
	beq $v0, 0, check_chocolate_collision_end
	# Collision detected, overwrite pixels, set vertical velocity, set len to 0

	#save $t0-3 before fun call
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	
	lw $a0, ($t3)
	lw $a1, 4($t3)
	jal overwrite_chocolate
	
	#load t2, t1, t0 after func call
	lw $t3, ($sp)
	lw $t2, 4($sp)
	lw $t1, 8($sp)
	lw $t0, 12($sp)
	addi $sp, $sp, 16
	
	la $t0, VERTVELOCITY
	la $t2, JUMPS_REM
	li $t3, CHOCOLATE_JUMP_HEIGHT
	sw $t3, ($t0)
	sw $zero, ($t2)
	la $t0, PLAYER_UP_CTR
	li $t1, PLAYER_UP_CTR_FRAMES_CHOCOLATE
	sw $t1, ($t0)
	la $t4, PLAYER_UP_DIR
	la $t5, PLAYER_FACING
	lw $t5, ($t5)
	sw $t5, ($t4)
	
	la $t1, CHOCOLATE_ARR_LEN
	sw $zero, ($t1)
check_chocolate_collision_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

check_death:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#if player touching out of bounds, branch to game end
	la $t0, PLAYERY
	lw $t0, ($t0)
	li $t1, HEIGHT
	sub $t2, $t1, $t0
	blt $t2, 10, game_end
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5


#Check if two 10x9 squares are colliding. Stack variables required:
#x1, y1, x2, y2 ==> (v0: 1 if colliding, 0 if not colliding)
check_square_collision:
	lw $t3, ($sp) #y2
	lw $t2, 4($sp) #x2
	lw $t1, 8($sp) #y1
	lw $t0, 12($sp) #x1
	addi $sp, $sp, 16
	
	#Check if x2y2 in x1y1
	sub $t4, $t2, $t0
	bge $t4, 9, check_square_collision_false
	ble $t4, -9, check_square_collision_false
	
	sub $t4, $t3, $t1
	bge $t4, 10, check_square_collision_false
	ble $t4, -10, check_square_collision_false
	j check_square_collision_true
check_square_collision_true:
	li $v0, 1
	jr $ra
check_square_collision_false:
	li $v0, 0
	jr $ra

# a0: x, a1: y
overwrite_treat:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#call draw sprite (Overwrite with yellow treat)
	addi $sp, $sp, -4
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	sw $a1, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, TREAT_YELLOW	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, TREAT_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# a0: x, a1: y
overwrite_chocolate:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#call draw sprite (Overwrite with yellow treat)
	addi $sp, $sp, -4
	sw $a0, ($sp)	#x
	addi $sp, $sp, -4
	sw $a1, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, CHOCOLATE_YELLOW	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, CHOCOLATE_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

# draw scorecard
# a2: starting x for second digit (ones)
# a3: y
draw_score:
	#store $ra in stack
	addi $t5, $ra, 0
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	move $s6, $a2
	move $s7, $a3
	
	#draw plain background 7x11 pixels for score display at (x-6, y)
	#fill stack for fill_rect
	#x
	addi $sp, $sp, -4
	addi $t0, $a2, -6
	sw $t0, ($sp)
	
	#y
	addi $sp, $sp, -4
	#li $t1, 1
	sw $a3, ($sp)
	
	#width
	li $t5, 11
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#height
	li $t5, 7
	addi $sp, $sp, -4
	sw $t5, ($sp)
	
	#color
	addi $sp, $sp, -4
	li $t5, BGCOLOR
	sw $t5, ($sp)
	
	jal fill_rect
	
	#calculate which numbers to draw
	la $t0, SCORE
	lw $t0, ($t0)
	li $t1, 10 #10
	li $t3, -1 #digit (first is 1, second is 0, draw right to left)
	move $t4, $s6 #x
draw_score_next:
	addi $t3, $t3, 1	
	div $t0, $t1
	mfhi $t2 # remainder (ones digit)
	mflo $t0 # remaining score
	beq $t2, 0, draw_score_0
	beq $t2, 1, draw_score_1
	beq $t2, 2, draw_score_2
	beq $t2, 3, draw_score_3
	beq $t2, 4, draw_score_4
	beq $t2, 5, draw_score_5
	beq $t2, 6, draw_score_6
	beq $t2, 7, draw_score_7
	beq $t2, 8, draw_score_8
	beq $t2, 9, draw_score_9
draw_score_0:
	la $a0, ZERO
	la $a1, ZERO_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_1:
	la $a0, ONE
	la $a1, ONE_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_2:
	la $a0, TWO
	la $a1, TWO_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_3:
	la $a0, THREE
	la $a1, THREE_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_4:
	la $a0, FOUR
	la $a1, FOUR_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_5:
	la $a0, FIVE
	la $a1, FIVE_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_6:
	la $a0, SIX
	la $a1, SIX_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_7:
	la $a0, SEVEN
	la $a1, SEVEN_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_8:
	la $a0, EIGHT
	la $a1, EIGHT_LEN
	lw $a1, ($a1)
	j draw_score_draw
draw_score_9:
	la $a0, NINE
	la $a1, NINE_LEN
	lw $a1, ($a1)
draw_score_draw:
	# Save $t0-4 to stack
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	addi $sp, $sp, -4
	sw $t4, ($sp)
	
	#call draw sprite
	addi $sp, $sp, -4
	sw $t4, ($sp)	#x
	addi $sp, $sp, -4
	sw $s7, ($sp)	#y
	addi $sp, $sp, -4	
	sw $a0, ($sp)	#sprite array address
	addi $sp, $sp, -4
	sw $a1, ($sp)	#sprite length
	
	jal draw_sprite
	
	#reload t0-4
	lw $t4, ($sp)
	lw $t3, 4($sp)
	lw $t2, 8($sp)
	lw $t1, 12($sp)
	lw $t0, 16($sp)
	addi $sp, $sp, 20
	
	addi $t4, $t4, -6 #update x
	beq, $t3, 0, draw_score_next

draw_score_end:
	#restore $ra from stack and jump
	lw $t5, ($sp)
	addi $sp, $sp, 4
	jr $t5

#generate a new chocolate every time score is a multiple of 10
check_chocolate_score:
	la $t0, CHOCOLATE_ARR_LEN
	lw $t1, ($t0)
	bgtz $t1, check_chocolate_score_end
	la $t1, SCORE
	lw $t1, ($t1)
	li $t2, 10
	div $t1, $t2
	mfhi $t2
	bnez $t2, check_chocolate_score_end

	li $t2, 2
	sw $t2, ($t0)
	la $t3, CHOCOLATE_ARR	
	#Here chocolate needs reloading. Set chococlate height to 0, generate random x between 7 and WIDTH - 16 (chocolate is 9px wide)
	sw $zero, 4($t3)
	li $t5, WIDTH
	#Service $v0 = 42 produces rand int within range. Put 0 into $a0 (id of rand generator). Max val int into $a1 for s42. After completion result in $a0
	li $v0, 42
	li $a0, 1
	addi, $t5, $t5, -23 #generate rand num from 0 to WIDTH -23. Then add 7 to result
	move $a1, $t5
	syscall
	addi $a0, $a0, 7
	sw $a0, ($t3)
check_chocolate_score_end:
	jr $ra
################################# GAME LOOP #########################################
game_loop:
	la $t0, PLAYER_UP_CTR
	lw $t1, ($t0)
	bltz $t1, game_loop_draw
	addi $t1, $t1, -1
	sw $t1, ($t0)

game_loop_draw:
	jal draw_player
	jal draw_platform_list
	jal draw_platform_mv_list
	jal draw_treats_list
	jal draw_chocolates_list
	jal check_chocolate_score
	
	li $a2, 32
	li $a3, 1
	jal draw_score
	
	# Checks for player death. If dead ends game
	jal check_death
	
	#Check if player won
	la $t0, SCORE
	lw $t0, ($t0)
	li $t1, MAX_SCORE
	bge $t0, $t1, game_won
	
	la $t0, IGNORE_PLAT
	sw $zero, ($t0)
	
	
	#Pause screen after drawing complete for this iteration (frame limiter)
	li $v0, 32
	li $a0, SCRN_WAIT
	syscall
	
handle_keypress:
	li $t9, 0xffff0000
	lw $t8, 0($t9)
	bne $t8, 1, after_key_game_loop
	lw $t2, 4($t9) #key value is in next reg in mem after 0xffff0000
	
	beq $t2, 100, handle_d #ASCII code of 'd' is 100
	beq $t2, 97, handle_a
	beq $t2, 119, handle_w
	beq $t2, 112, handle_p
	beq $t2, 115, handle_s
	j after_key_game_loop
	
handle_d:
	#Check if player not out of bounds
	la $t0, PLAYERX
	lw $t0, ($t0)
	addi $t1, $t0, 9 #sprite width is 9
	li $t2, WIDTH
	bge $t1, $t2, after_key_game_loop
	
	jal overwrite_player #since player moved
	la $t0, PLAYER_FACING
	li $t1, 1
	sw $t1, ($t0)
	la $t0, PLAYER_STATE
	lw $t1, ($t0)
	bne $t1, 2, handle_d_2
	#was prev in animation state 2 so set to state 3
	li $t1, 3
	sw $t1, ($t0)
	j handle_d_3
handle_d_2:
	bne $t1, 3, handle_d_3
	#was prev in animation state 3
	li $t1, 2
	sw $t1, ($t0)
handle_d_3:
	la $t0, PLAYERX
	lw $t1, ($t0) #update PLAYERX
	addi $t1, $t1, 3
	sw $t1, ($t0)
	j after_key_game_loop
handle_a:
	#Check if player not out of bounds
	la $t0, PLAYERX
	lw $t0, ($t0)
	li $t2, 1
	ble $t0, $t2, after_key_game_loop
	
	jal overwrite_player #since player moved
	la $t0, PLAYER_FACING
	li $t1, -1
	sw $t1, ($t0)
	la $t0, PLAYER_STATE
	lw $t1, ($t0)
	bne $t1, 0, handle_a_2
	#was prev in animation state 0 so set to state 1
	li $t1, 1
	sw $t1, ($t0)
	j handle_a_3
handle_a_2:
	bne $t1, 1, handle_a_3
	#was prev in animation state 1
	li $t1, 0
	sw $t1, ($t0)
handle_a_3:
	la $t0, PLAYERX
	lw $t1, ($t0) #update PLAYERX
	addi $t1, $t1, -3
	sw $t1, ($t0)
	j after_key_game_loop
handle_w:
	jal overwrite_player #since player moved
	#add vertical velocity if the player is grounded (i.e. veloicty already 0)
	la $t0, VERTVELOCITY
	lw $t1, ($t0)
	la $t2, JUMPS_REM
	lw $t3, ($t2) #jumps remaining
	la $s2, PLATFORM_S
	lw $s3, ($s2) # $s3: Platform under player
	
	beq $s3, 0, handle_w_2
	li $t3, 2 #reset jumps rem to 2 if on platform (s3 == 1)
handle_w_2:
	ble $t3, 0, after_key_game_loop #if no jumps can't jump 
	
	la $t4, PLAYER_UP_DIR
	la $t5, PLAYER_FACING
	lw $t5, ($t5)
	sw $t5, ($t4)
	li $t4, PLAYER_UP_CTR_FRAMES
	la $t5, PLAYER_UP_CTR
	sw $t4, ($t5)
	
	addi $t3, $t3, -1
	li $t1, JUMP_HEIGHT
	sw $t1, ($t0)
	sw $t3, ($t2)
	j after_key_game_loop

handle_s:
	la $t0, IGNORE_PLAT
	li $t1, 1
	sw $t1, ($t0)
	j after_key_game_loop

handle_p:
	#handle restart button
	j restart

after_key_game_loop:
	#j after_velocity_game_loop #skip velocity logic
	#update platform check vars
	jal check_platform
	
	la $s0, PLATFORM_D
	lw $s1, ($s0) # $s1: Platform within 10px
	la $s2, PLATFORM_S
	lw $s3, ($s2) # $s3: Platform under player
	la $s4, PLATFORM_M
	lw $s5, ($s4) # s5: Platform detected is a moving platform
	
	la $t0, VERTVELOCITY
	lw $t1, ($t0) # $t1: velocity
	la $t2, IGNORE_PLAT
	lw $t2, ($t2)
	
	bgtz $t1, handle_velocity # positive velocity ignores platforms
	beq $s1, 0, handle_velocity # no platform within 10px
	beq $t2, 1, handle_velocity_drop_plat # skip platform check after pressing s

	#velocity 0 or neg here, and platform within 10px
	beq $s3, 1, on_platform
	#not on top of platform, set velocity to offset so can land on platform
	sub $t1, $zero, $v0 #v0 was set by check_platform
	sw $t1, ($t0)
	j handle_velocity
	
on_platform:
	li $t1, 0 #set velocity to 0
	sw $t1, ($t0)
	beq $s5, 0, after_velocity_game_loop
	
	#Here on moving platform, need to move player with platform
	jal overwrite_player
	
	#update player x
	la $t9, PLAYERX
	lw $t0, ($t9)
	la $t1, PLATFORM_ARR_MOVING_DIR
	lw $t1, ($t1)
	add $t0, $t0, $t1
	
	#make sure player is in bounds
	ble $t0, 0, after_velocity_game_loop
	addi $t2, $t0, 9 #sprite width is 9
	li $t3, WIDTH
	bge $t2, $t3, after_velocity_game_loop
	
	sw $t0, ($t9) 
	j after_velocity_game_loop
handle_velocity_drop_plat:
	la $t0, VERTVELOCITY
	sw $t1, ($t0)
	bnez $t1, handle_velocity
	li $t1, -1
	sw $t1, VERTVELOCITY
handle_velocity:
	#Handle player vertical velocity
	la $t0, VERTVELOCITY
	sw $t1, ($t0)
	
	jal overwrite_player
	
	#Velocity to apply here
	la $t2, PLAYERY
	lw $t3, ($t2)
	la $t0, VERTVELOCITY
	lw $t1, ($t0)
	sub $t3, $t3, $t1 #positive velocity, means going negatively along y
	sw $t3, ($t2) #apply velocity
	
	#apply velocity to objects and platforms only if necessary
	bgt $t3, 40, handle_velocity_2
handle_velocity_at_top_limit:
	#user in top 35px of the screen, move camera/platforms
	li $t4, 40
	sw $t4, ($t2) #limit PLAYERY to 40px, move all platforms by delta
	sub $t4, $t4, $t3 # store how many pixels user jumped over the limit by in $t4
	la $t5, PLATFORM_ARR
	la $t6, PLATFORM_ARR_LEN
	lw $t6, ($t6)
	li $t7, 1 #i = 1, goes up by 2
handle_velocity_platform_loop: #loop though all platforms and apply delta to them
	bge $t7, $t6, handle_velocity_platform_mv
	sll $t7, $t7, 2
	add $t8, $t5, $t7
	lw $t9, ($t8)
	
	#save $t0-9 before overwrite platform in old position.
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	addi $sp, $sp, -4
	sw $t4, ($sp)
	addi $sp, $sp, -4
	sw $t5, ($sp)
	addi $sp, $sp, -4
	sw $t6, ($sp)
	addi $sp, $sp, -4
	sw $t7, ($sp)
	addi $sp, $sp, -4
	sw $t8, ($sp)
	addi $sp, $sp, -4
	sw $t9, ($sp)
	
	lw $a0, -4($t8)
	lw $a1, 0($t8)
	li $a2, BGCOLOR
	jal draw_platform
	
	#load t0-9
	lw $t9, ($sp)
	lw $t8, 4($sp)
	lw $t7, 8($sp)
	lw $t6, 12($sp)
	lw $t5, 16($sp)
	lw $t4, 20($sp)
	lw $t3, 24($sp)
	lw $t2, 28($sp)
	lw $t1, 32($sp)
	lw $t0, 36($sp)
	addi $sp, $sp, 40
	
	add $t9, $t9, $t4
	sw $t9, ($t8)
	srl $t7, $t7, 2
	addi $t7, $t7, 2
	j handle_velocity_platform_loop
handle_velocity_platform_mv:
	#set up loop to update positions of mv platforms
	la $t5, PLATFORM_ARR_MOVING
	la $t6, PLATFORM_ARR_MOVING_LEN
	lw $t6, ($t6)
	li $t7, 1 #i = 1, goes up by 2

handle_velocity_platform_mv_loop:
	bge $t7, $t6, handle_velocity_treat
	sll $t7, $t7, 2
	add $t8, $t5, $t7
	lw $t9, ($t8)
	
	#save $t0-9 before overwrite platform in old position.
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	addi $sp, $sp, -4
	sw $t4, ($sp)
	addi $sp, $sp, -4
	sw $t5, ($sp)
	addi $sp, $sp, -4
	sw $t6, ($sp)
	addi $sp, $sp, -4
	sw $t7, ($sp)
	addi $sp, $sp, -4
	sw $t8, ($sp)
	addi $sp, $sp, -4
	sw $t9, ($sp)
	
	lw $a0, -4($t8)
	lw $a1, 0($t8)
	li $a2, BGCOLOR
	jal draw_platform
	
	#load t0-9
	lw $t9, ($sp)
	lw $t8, 4($sp)
	lw $t7, 8($sp)
	lw $t6, 12($sp)
	lw $t5, 16($sp)
	lw $t4, 20($sp)
	lw $t3, 24($sp)
	lw $t2, 28($sp)
	lw $t1, 32($sp)
	lw $t0, 36($sp)
	addi $sp, $sp, 40
	
	add $t9, $t9, $t4
	sw $t9, ($t8)
	srl $t7, $t7, 2
	addi $t7, $t7, 2
	j handle_velocity_platform_mv_loop
handle_velocity_treat:
	#set up loop to update positions of treats
	la $t5, TREAT_ARR
	la $t6, TREAT_ARR_LEN
	lw $t6, ($t6)
	li $t7, 1 #i = 1, goes up by 2
handle_velocity_treat_loop:
	bge $t7, $t6, handle_velocity_chocolate
	sll $t7, $t7, 2
	add $t8, $t5, $t7
	lw $t9, ($t8)
	
	#save $t0-9 before overwrite treat in old position.
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	addi $sp, $sp, -4
	sw $t4, ($sp)
	addi $sp, $sp, -4
	sw $t5, ($sp)
	addi $sp, $sp, -4
	sw $t6, ($sp)
	addi $sp, $sp, -4
	sw $t7, ($sp)
	addi $sp, $sp, -4
	sw $t8, ($sp)
	addi $sp, $sp, -4
	sw $t9, ($sp)
	
	lw $a0, -4($t8)
	lw $a1, 0($t8)
	jal overwrite_treat
	
	#load t0-9
	lw $t9, ($sp)
	lw $t8, 4($sp)
	lw $t7, 8($sp)
	lw $t6, 12($sp)
	lw $t5, 16($sp)
	lw $t4, 20($sp)
	lw $t3, 24($sp)
	lw $t2, 28($sp)
	lw $t1, 32($sp)
	lw $t0, 36($sp)
	addi $sp, $sp, 40
	
	add $t9, $t9, $t4
	sw $t9, ($t8)
	srl $t7, $t7, 2
	addi $t7, $t7, 2
	j handle_velocity_treat_loop
handle_velocity_chocolate:
	#set up loop to update positions of treats
	la $t5, CHOCOLATE_ARR
	la $t6, CHOCOLATE_ARR_LEN
	lw $t6, ($t6)
	li $t7, 1 #i = 1, goes up by 2
handle_velocity_chocolate_loop:
	bge $t7, $t6, handle_velocity_2
	sll $t7, $t7, 2
	add $t8, $t5, $t7
	lw $t9, ($t8)
	
	#save $t0-9 before overwrite treat in old position.
	addi $sp, $sp, -4
	sw $t0, ($sp)
	addi $sp, $sp, -4
	sw $t1, ($sp)
	addi $sp, $sp, -4
	sw $t2, ($sp)
	addi $sp, $sp, -4
	sw $t3, ($sp)
	addi $sp, $sp, -4
	sw $t4, ($sp)
	addi $sp, $sp, -4
	sw $t5, ($sp)
	addi $sp, $sp, -4
	sw $t6, ($sp)
	addi $sp, $sp, -4
	sw $t7, ($sp)
	addi $sp, $sp, -4
	sw $t8, ($sp)
	addi $sp, $sp, -4
	sw $t9, ($sp)
	
	lw $a0, -4($t8)
	lw $a1, 0($t8)
	jal overwrite_chocolate
	
	#load t0-9
	lw $t9, ($sp)
	lw $t8, 4($sp)
	lw $t7, 8($sp)
	lw $t6, 12($sp)
	lw $t5, 16($sp)
	lw $t4, 20($sp)
	lw $t3, 24($sp)
	lw $t2, 28($sp)
	lw $t1, 32($sp)
	lw $t0, 36($sp)
	addi $sp, $sp, 40
	
	add $t9, $t9, $t4
	sw $t9, ($t8)
	srl $t7, $t7, 2
	addi $t7, $t7, 2
	j handle_velocity_chocolate_loop
handle_velocity_2:
	addi $t1, $t1, GRAVITY
	bgt $t1, -10, update_velocity
	#Velocity is over limit here, set to -10
	li $t1, -10
update_velocity:
	sw $t1, ($t0)
	
	#print vertical velocity
#	la $t0, PLATFORM_D
#	lw $t1, ($t0) 
#	li $v0, 1
#	move $a0, $t1
#	syscall
	#print newline
#	addi $a0, $0, 0xA #ascii code for LF, if you have any trouble try 0xD for CR.
#        addi $v0, $0, 0xB #syscall 11 prints the lower 8 bits of $a0 as an ascii character.
#        syscall
	
after_velocity_game_loop:	
	jal check_out_of_screen_platforms
	jal check_treat_collision
	jal check_chocolate_collision
	
	j game_loop
	j END
game_won:
	jal fill_background
	
	#call draw sprite
	addi $sp, $sp, -4
	li $t0, 0
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	li $t0, 0
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, GAME_WON_TEXT 	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, GAME_WON_TEXT_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
	j game_end_final
	
game_end:
	#draw end screen
	jal fill_background
	
	#call draw sprite
	addi $sp, $sp, -4
	li $t0, 0
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	li $t0, 0
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, GAME_OVER_TEXT 	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, GAME_OVER_TEXT_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	
	jal draw_sprite
game_end_final:
	#draw score
	#call draw sprite
	addi $sp, $sp, -4
	li $t0, 5
	sw $t0, ($sp)	#x
	
	addi $sp, $sp, -4
	li $t0, 100
	sw $t0, ($sp)	#y
	
	addi $sp, $sp, -4
	la $t0, TREATS_COLLECTED	
	sw $t0, ($sp)	#sprite array address
	
	addi $sp, $sp, -4
	la $t0, TREATS_COLLECTED_LEN
	lw $t0, ($t0)
	sw $t0, ($sp)	#sprite length
	jal draw_sprite	
	
	li $a2, 52
	li $a3, 100
	jal draw_score
			
game_end_loop: #wait for kepress to restart (p) or exit (e)
	li $t9, 0xffff0000
	lw $t8, 0($t9)
	bne $t8, 1, game_end_loop
	lw $t2, 4($t9) #key value is in next reg in mem after 0xffff0000
	beq $t2, 112, handle_p 
	beq $t2, 101, END #press e to exit
	j game_end_loop
END:
li $v0, 10 # terminate the program gracefully
syscall
